!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
abort	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void abort();$/;"	prototype	class:QPlaylistFileParser	access:public	signature:()
AccessDeniedError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^        AccessDeniedError,$/;"	enumerator	enum:QAudioDecoder::Error
AccessDeniedError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        AccessDeniedError,$/;"	enumerator	enum:QMediaPlayer::Error
AccessDeniedError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum Error { NoError, FormatError, FormatNotSupportedError, NetworkError, AccessDeniedError };$/;"	enumerator	enum:QMediaPlaylist::Error
AccessibilityRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        AccessibilityRole,$/;"	enumerator	enum:QAudio::Role
acquire	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    virtual void acquire() = 0;$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:()
activated	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void activated(const QMediaContent &content);$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(const QMediaContent &content)
activeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void activeChanged();$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:()
activeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    void activeChanged();$/;"	prototype	class:QAbstractVideoFilter	access:public	signature:()
activeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    void activeChanged(bool active);$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(bool active)
activeInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    virtual QString activeInput() const = 0;$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:() const
activeInputChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    void activeInputChanged(const QString& name);$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:(const QString& name)
activeOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    virtual QString activeOutput() const = 0;$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:() const
activeOutputChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    void activeOutputChanged(const QString& name);$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:(const QString& name)
ActiveState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum State { ActiveState, SuspendedState, StoppedState, IdleState, InterruptedState };$/;"	enumerator	enum:QAudio::State
ActiveState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        ActiveState$/;"	enumerator	enum:QCamera::State
ActiveState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum State { ActiveState, StoppedState };$/;"	enumerator	enum:QRadioTuner::State
ActiveStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        ActiveStatus$/;"	enumerator	enum:QCamera::Status
activeStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    int activeStream(QMediaStreamsControl::StreamType streamType) const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QMediaStreamsControl::StreamType streamType) const
activeStreamsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    void activeStreamsChanged();$/;"	prototype	class:QMediaStreamsControl	access:public	signature:()
actualLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QUrl actualLocation;$/;"	member	class:QMediaRecorderPrivate	access:public
actualLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QUrl actualLocation() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
actualLocationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void actualLocationChanged(const QUrl &location);$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QUrl &location)
actualLocationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    void actualLocationChanged(const QUrl &location);$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(const QUrl &location)
actualValue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    virtual QVariant actualValue(ExposureParameter parameter) const = 0;$/;"	prototype	class:QCameraExposureControl	access:public	signature:(ExposureParameter parameter) const
actualValueChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    void actualValueChanged(int parameter);$/;"	prototype	class:QCameraExposureControl	access:public	signature:(int parameter)
addAudioBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void addAudioBufferProbe();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
addInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    void addInterval(const QMediaTimeInterval &interval);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeInterval &interval)
addInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    void addInterval(qint64 start, qint64 end);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(qint64 start, qint64 end)
addMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool addMedia(const QList<QMediaContent> &contentList);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(const QList<QMediaContent> &contentList)
addMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool addMedia(const QMediaContent &content);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(const QMediaContent &content)
addMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool addMedia(const QList<QMediaContent> &items);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(const QList<QMediaContent> &items)
addMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool addMedia(const QMediaContent &content);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(const QMediaContent &content)
addProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void addProbe(QGstreamerAudioProbeControl* probe);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QGstreamerAudioProbeControl* probe)
addProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void addProbe(QGstreamerVideoProbeControl* probe);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QGstreamerVideoProbeControl* probe)
addProbeToPad	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    void addProbeToPad(GstPad *pad, bool downstream = true);$/;"	prototype	class:QGstreamerBufferProbe	access:public	signature:(GstPad *pad, bool downstream = true)
addPropertyWatch	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void addPropertyWatch(QByteArray const &name);$/;"	prototype	class:QMediaObject	access:protected	signature:(QByteArray const &name)
addRef	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void addRef();$/;"	prototype	class:QSample	access:private	signature:()
addStorageLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    void addStorageLocation(MediaType type, const QString &location);$/;"	prototype	class:QMediaStorageLocation	access:public	signature:(MediaType type, const QString &location)
addTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    void addTimeRange(const QMediaTimeRange&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeRange&)
addVideoBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void addVideoBufferProbe();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
adjustedViewport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual QRectF adjustedViewport() const = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:() const
AdultHits	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        AlarmTest, Alarm, Talk, ClassicRock, AdultHits,$/;"	enumerator	enum:QRadioData::ProgramType
advancedToNextMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    void advancedToNextMedia();$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:()
Alarm	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        AlarmTest, Alarm, Talk, ClassicRock, AdultHits,$/;"	enumerator	enum:QRadioData::ProgramType
AlarmRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        AlarmRole,$/;"	enumerator	enum:QAudio::Role
AlarmTest	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        AlarmTest, Alarm, Talk, ClassicRock, AdultHits,$/;"	enumerator	enum:QRadioData::ProgramType
AlbumArtist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString AlbumArtist;$/;"	member	namespace:QMediaMetaData
AlbumTitle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString AlbumTitle;$/;"	member	namespace:QMediaMetaData
alternativeFrequenciesEnabledChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void alternativeFrequenciesEnabledChanged(bool enabled);$/;"	prototype	class:QRadioData	access:public	signature:(bool enabled)
alternativeFrequenciesEnabledChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    void alternativeFrequenciesEnabledChanged(bool enabled);$/;"	prototype	class:QRadioDataControl	access:public	signature:(bool enabled)
AM	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Band { AM, FM, SW, LW, FM2 };$/;"	enumerator	enum:QRadioTuner::Band
antennaConnectedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void antennaConnectedChanged(bool connectionStatus);$/;"	prototype	class:QRadioTuner	access:public	signature:(bool connectionStatus)
antennaConnectedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void antennaConnectedChanged(bool connectionStatus);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(bool connectionStatus)
aperture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    qreal aperture() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
Aperture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        Aperture,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
apertureChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void apertureChanged(qreal);$/;"	prototype	class:QCameraExposure	access:public	signature:(qreal)
apertureRangeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void apertureRangeChanged();$/;"	prototype	class:QCameraExposure	access:public	signature:()
appendFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void appendFilter(QAbstractVideoFilter *filter) { Q_UNUSED(filter); }$/;"	function	class:QDeclarativeVideoBackend	access:public	signature:(QAbstractVideoFilter *filter)
applySettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual void applySettings() = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:()
applySettingsLater	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void applySettingsLater();$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:()
appsrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstAppSrc *appsrc() const { return m_appSrc; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
area	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QRectF area() const;$/;"	prototype	class:QCameraFocusZone	access:public	signature:() const
aspectRatioMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    Qt::AspectRatioMode aspectRatioMode() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
aspectRatioMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual Qt::AspectRatioMode aspectRatioMode() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
atEnd	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual bool atEnd() const = 0;$/;"	prototype	class:QMediaPlaylistReader	access:public	signature:() const
audioAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void audioAvailableChanged(bool audioAvailable);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(bool audioAvailable)
audioAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void audioAvailableChanged(bool available);$/;"	prototype	class:QMediaPlayer	access:public	signature:(bool available)
audioAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void audioAvailableChanged(bool audioAvailable);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(bool audioAvailable)
AudioBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString AudioBitRate;$/;"	member	namespace:QMediaMetaData
AudioBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        AudioBitRate,$/;"	enumerator	enum:QMediaResource::Property
audioBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    int audioBitRate() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
audioBufferProbed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    void audioBufferProbed(const QAudioBuffer &buffer);$/;"	prototype	class:QAudioProbe	access:public	signature:(const QAudioBuffer &buffer)
audioBufferProbed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaaudioprobecontrol.h	/^    void audioBufferProbed(const QAudioBuffer &buffer);$/;"	prototype	class:QMediaAudioProbeControl	access:public	signature:(const QAudioBuffer &buffer)
AudioCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString AudioCodec;$/;"	member	namespace:QMediaMetaData
AudioCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        AudioCodec,$/;"	enumerator	enum:QMediaResource::Property
audioCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QString audioCodec() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
audioCodecDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QString audioCodecDescription(const QString &codecName) const;$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QString &codecName) const
audioControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QAudioEncoderSettingsControl *audioControl;$/;"	member	class:QMediaRecorderPrivate	access:public
audioDeviceInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAbstractAudioDeviceInfo* audioDeviceInfo(const QString &realm, const QByteArray &handle, QAudio::Mode mode);$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:(const QString &realm, const QByteArray &handle, QAudio::Mode mode)
AudioEncoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    enum ElementType { AudioEncoder, VideoEncoder, Muxer };$/;"	enumerator	enum:QGstCodecsInfo::ElementType
audioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        quint16     audioFormat;$/;"	member	struct:QWaveDecoder::WAVEHeader	access:public
audioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    QAudioFormat audioFormat() const;$/;"	prototype	class:QWaveDecoder	access:public	signature:() const
audioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    QAudioFormat audioFormat() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
audioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual QAudioFormat audioFormat() const = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:() const
audioFormatForBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QAudioFormat audioFormatForBuffer(GstBuffer *buffer);$/;"	prototype	namespace:QGstUtils	signature:(GstBuffer *buffer)
audioFormatForCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QAudioFormat audioFormatForCaps(const GstCaps *caps);$/;"	prototype	namespace:QGstUtils	signature:(const GstCaps *caps)
audioFormatForSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QAudioFormat audioFormatForSample(GstSample *sample);$/;"	prototype	namespace:QGstUtils	signature:(GstSample *sample)
AudioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Mode { AudioInput, AudioOutput };$/;"	enumerator	enum:QAudio::Mode
audioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    QString audioInput() const;$/;"	prototype	class:QAudioRecorder	access:public	signature:() const
audioInputChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    void audioInputChanged(const QString& name);$/;"	prototype	class:QAudioRecorder	access:public	signature:(const QString& name)
audioInputDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    QString audioInputDescription(const QString& name) const;$/;"	prototype	class:QAudioRecorder	access:public	signature:(const QString& name) const
audioInputs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    QStringList audioInputs() const;$/;"	prototype	class:QAudioRecorder	access:public	signature:() const
AudioOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Mode { AudioInput, AudioOutput };$/;"	enumerator	enum:QAudio::Mode
audioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorolecontrol.h	/^    virtual QAudio::Role audioRole() const = 0;$/;"	prototype	class:QAudioRoleControl	access:public	signature:() const
audioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QAudio::Role audioRole() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
audioRoleChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorolecontrol.h	/^    void audioRoleChanged(QAudio::Role role);$/;"	prototype	class:QAudioRoleControl	access:public	signature:(QAudio::Role role)
audioRoleChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void audioRoleChanged(QAudio::Role role);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QAudio::Role role)
audioSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^    virtual QAudioEncoderSettings audioSettings() const = 0;$/;"	prototype	class:QAudioEncoderSettingsControl	access:public	signature:() const
audioSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QAudioEncoderSettings audioSettings() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
AudioStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    enum StreamType { UnknownStream, VideoStream, AudioStream, SubPictureStream, DataStream };$/;"	enumerator	enum:QMediaStreamsControl::StreamType
Author	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Author;$/;"	member	namespace:QMediaMetaData
Auto	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum StereoMode { ForceStereo, ForceMono, Auto };$/;"	enumerator	enum:QRadioTuner::StereoMode
AutoFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        AutoFocus = 0x8,$/;"	enumerator	enum:QCameraFocus::FocusMode
AutoFocusFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        AutoFocusFailed$/;"	enumerator	enum:QCameraFeedbackControl::EventType
AutoFocusInProgress	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        AutoFocusInProgress,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
AutoFocusLocked	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        AutoFocusLocked,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
autoOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    bool autoOrientation() const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:() const
autoOrientationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void autoOrientationChanged();$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:()
availability	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QMultimedia::AvailabilityStatus availability() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
availability	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaavailabilitycontrol.h	/^    virtual QMultimedia::AvailabilityStatus availability() const = 0;$/;"	prototype	class:QMediaAvailabilityControl	access:public	signature:() const
availability	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    virtual QMultimedia::AvailabilityStatus availability() const;$/;"	prototype	class:QMediaObject	access:public	signature:() const
availability	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QMultimedia::AvailabilityStatus availability() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
availability	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QMultimedia::AvailabilityStatus availability() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    void availabilityChanged(bool available);$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:(bool available)
availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaavailabilitycontrol.h	/^    void availabilityChanged(QMultimedia::AvailabilityStatus availability);$/;"	prototype	class:QMediaAvailabilityControl	access:public	signature:(QMultimedia::AvailabilityStatus availability)
availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void availabilityChanged(bool available);$/;"	prototype	class:QMediaObject	access:public	signature:(bool available)
availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void availabilityChanged(QMultimedia::AvailabilityStatus availability);$/;"	prototype	class:QMediaObject	access:public	signature:(QMultimedia::AvailabilityStatus availability)
availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void availabilityChanged(bool available);$/;"	prototype	class:QMediaRecorder	access:public	signature:(bool available)
availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void availabilityChanged(QMultimedia::AvailabilityStatus availability);$/;"	prototype	class:QMediaRecorder	access:public	signature:(QMultimedia::AvailabilityStatus availability)
availabilityControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    QMediaAvailabilityControl *availabilityControl;$/;"	member	class:QMediaObjectPrivate	access:public
availabilityControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaAvailabilityControl *availabilityControl;$/;"	member	class:QMediaRecorderPrivate	access:public
AvailabilityStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^    enum AvailabilityStatus$/;"	enum	namespace:QMultimedia
Available	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        Available,$/;"	enumerator	enum:QMultimedia::AvailabilityStatus
availableAudioInputsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    void availableAudioInputsChanged();$/;"	prototype	class:QAudioRecorder	access:public	signature:()
availableCameras	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    static QList<QCameraInfo> availableCameras(QCamera::Position position = QCamera::UnspecifiedPosition);$/;"	prototype	class:QCameraInfo	access:public	signature:(QCamera::Position position = QCamera::UnspecifiedPosition)
availableDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QList<QAudioDeviceInfo> availableDevices(QAudio::Mode mode);$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:(QAudio::Mode mode)
availableDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    static QList<QAudioDeviceInfo> availableDevices(QAudio::Mode mode);$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:(QAudio::Mode mode)
availableDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    virtual QList<QByteArray> availableDevices(QAudio::Mode) const = 0;$/;"	prototype	struct:QAudioSystemFactoryInterface	access:public	signature:(QAudio::Mode) const
availableDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QT_DEPRECATED static QList<QByteArray> availableDevices();$/;"	prototype	class:QCamera	access:public	signature:()
availableInputs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    virtual QList<QString> availableInputs() const = 0;$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:() const
availableInputsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    void availableInputsChanged();$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:()
availableMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    QStringList availableMetaData() const;$/;"	prototype	class:QMediaObject	access:public	signature:() const
availableMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QStringList availableMetaData() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
availableMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    virtual QStringList availableMetaData() const = 0;$/;"	prototype	class:QMetaDataReaderControl	access:public	signature:() const
availableMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    virtual QStringList availableMetaData() const = 0;$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:() const
availableMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVariantMap availableMetaData() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
availableOutputs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    virtual QList<QString> availableOutputs() const = 0;$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:() const
availableOutputsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    void availableOutputsChanged();$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:()
availablePlaybackRanges	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMediaTimeRange availablePlaybackRanges() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
availablePlaybackRanges	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual QMediaTimeRange availablePlaybackRanges() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
availablePlaybackRangesChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void availablePlaybackRangesChanged(const QMediaTimeRange &ranges);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(const QMediaTimeRange &ranges)
average	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^        T average() const {return (left + right) \/ 2;}$/;"	function	struct:QAudioBuffer::StereoFrame	access:public	signature:() const
AverageBitRateEncoding	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        AverageBitRateEncoding,$/;"	enumerator	enum:QMultimedia::EncodingMode
AverageLevel	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString AverageLevel;$/;"	member	namespace:QMediaMetaData
BackFace	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        BackFace,$/;"	enumerator	enum:QCamera::Position
band	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    Band band() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
Band	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Band { AM, FM, SW, LW, FM2 };$/;"	enum	class:QRadioTuner	access:public
band	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual QRadioTuner::Band band() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
bandChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void bandChanged(QRadioTuner::Band band);$/;"	prototype	class:QRadioTuner	access:public	signature:(QRadioTuner::Band band)
bandChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void bandChanged(QRadioTuner::Band band);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::Band band)
base_init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static void base_init(gpointer g_class);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(gpointer g_class)
base_init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static void base_init(gpointer g_class);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(gpointer g_class)
bigEndian	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    bool bigEndian;$/;"	member	class:QWaveDecoder	access:private
BigEndian	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum Endian { BigEndian = QSysInfo::BigEndian, LittleEndian = QSysInfo::LittleEndian };$/;"	enumerator	enum:QAudioFormat::Endian
bind	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    virtual bool bind(QObject *);$/;"	prototype	class:QMediaObject	access:public	signature:(QObject *)
bitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    int bitRate() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
bitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    int bitRate() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
bits	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    const uchar *bits() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
bits	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    const uchar *bits(int plane) const;$/;"	prototype	class:QVideoFrame	access:public	signature:(int plane) const
bits	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    uchar *bits();$/;"	prototype	class:QVideoFrame	access:public	signature:()
bits	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    uchar *bits(int plane);$/;"	prototype	class:QVideoFrame	access:public	signature:(int plane)
bitsPerSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        quint16     bitsPerSample;$/;"	member	struct:QWaveDecoder::WAVEHeader	access:public
blockAlign	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        quint16     blockAlign;$/;"	member	struct:QWaveDecoder::WAVEHeader	access:public
BottomField	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        BottomField,$/;"	enumerator	enum:QVideoFrame::FieldType
BottomToTop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        BottomToTop$/;"	enumerator	enum:QVideoSurfaceFormat::Direction
brightness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    int brightness() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
brightness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    qreal brightness() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
Brightness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        Brightness,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
brightness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual int brightness() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
BrightnessAdjustment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        BrightnessAdjustment,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
brightnessChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void brightnessChanged(int brightness);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int brightness)
brightnessChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    void brightnessChanged(int brightness);$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int brightness)
bufferAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    bool bufferAvailable() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
bufferAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual bool bufferAvailable() const = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:() const
bufferAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void bufferAvailableChanged(bool);$/;"	prototype	class:QAudioDecoder	access:public	signature:(bool)
bufferAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void bufferAvailableChanged(bool available);$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(bool available)
BufferedMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        BufferedMedia,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
bufferFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturebufferformatcontrol.h	/^    virtual QVideoFrame::PixelFormat bufferFormat() const = 0;$/;"	prototype	class:QCameraCaptureBufferFormatControl	access:public	signature:() const
bufferFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QVideoFrame::PixelFormat bufferFormat() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
bufferFormatChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturebufferformatcontrol.h	/^    void bufferFormatChanged(QVideoFrame::PixelFormat format);$/;"	prototype	class:QCameraCaptureBufferFormatControl	access:public	signature:(QVideoFrame::PixelFormat format)
bufferFormatChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void bufferFormatChanged(QVideoFrame::PixelFormat format);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(QVideoFrame::PixelFormat format)
BufferingMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        BufferingMedia,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
bufferingProgressChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void bufferingProgressChanged(int percentFilled);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(int percentFilled)
bufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    static gboolean bufferProbe(GstElement *element, GstBuffer *buffer, gpointer user_data);$/;"	prototype	class:QGstreamerBufferProbe	access:private	signature:(GstElement *element, GstBuffer *buffer, gpointer user_data)
bufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    static GstPadProbeReturn bufferProbe(GstPad *pad, GstPadProbeInfo *info, gpointer user_data);$/;"	prototype	class:QGstreamerBufferProbe	access:private	signature:(GstPad *pad, GstPadProbeInfo *info, gpointer user_data)
bufferProbed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    void bufferProbed();$/;"	prototype	class:QGstreamerAudioProbeControl	access:private	signature:()
bufferReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void bufferReady();$/;"	prototype	class:QAudioDecoder	access:public	signature:()
bufferReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void bufferReady();$/;"	prototype	class:QAudioDecoderControl	access:public	signature:()
bufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    int bufferSize() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
bufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    int bufferSize() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
bufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int bufferSize() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
bufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int bufferSize() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
bufferStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    int bufferStatus() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
bufferStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual int bufferStatus() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
bufferStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void bufferStatusChanged(int percentFilled);$/;"	prototype	class:QMediaPlayer	access:public	signature:(int percentFilled)
bufferStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void bufferStatusChanged(int percentFilled);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(int percentFilled)
bufferToImage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QImage bufferToImage(GstBuffer *buffer);$/;"	prototype	namespace:QGstUtils	signature:(GstBuffer *buffer)
bufferToImage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QImage bufferToImage(GstBuffer *buffer, const GstVideoInfo &info);$/;"	prototype	namespace:QGstUtils	signature:(GstBuffer *buffer, const GstVideoInfo &info)
buffer_alloc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static GstFlowReturn buffer_alloc($/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:( GstBaseSink *sink, guint64 offset, guint size, GstCaps *caps, GstBuffer **buffer)
bus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstreamerBusHelper *bus() const { return m_busHelper; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
Busy	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        Busy,$/;"	enumerator	enum:QMultimedia::AvailabilityStatus
byteCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    int byteCount() const;$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
byteOrder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    QAudioFormat::Endian byteOrder() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
byteRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        quint32     byteRate;$/;"	member	struct:QWaveDecoder::WAVEHeader	access:public
bytesForDuration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    qint32 bytesForDuration(qint64 duration) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(qint64 duration) const
bytesForFrames	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    qint32 bytesForFrames(qint32 frameCount) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(qint32 frameCount) const
bytesFree	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    int bytesFree() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
bytesFree	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int bytesFree() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
bytesPerFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    int bytesPerFrame() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
bytesPerLine	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    int bytesPerLine() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
bytesPerLine	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    int bytesPerLine(int plane) const;$/;"	prototype	class:QVideoFrame	access:public	signature:(int plane) const
bytesReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    int bytesReady() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
bytesReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int bytesReady() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
cameraDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QString cameraDescription(const QString &device, GstElementFactory * factory = 0);$/;"	prototype	namespace:QGstUtils	signature:(const QString &device, GstElementFactory * factory = 0)
cameraDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QList<QByteArray> cameraDevices(GstElementFactory * factory = 0);$/;"	prototype	namespace:QGstUtils	signature:(GstElementFactory * factory = 0)
cameraDriver	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QByteArray cameraDriver(const QString &device, GstElementFactory * factory = 0);$/;"	prototype	namespace:QGstUtils	signature:(const QString &device, GstElementFactory * factory = 0)
CameraError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        CameraError,$/;"	enumerator	enum:QCamera::Error
cameraExposure	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraExposure *cameraExposure;$/;"	member	class:QCameraPrivate	access:public
cameraFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraFocus *cameraFocus;$/;"	member	class:QCameraPrivate	access:public
CameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    struct Q_GSTTOOLS_EXPORT CameraInfo$/;"	struct	namespace:QGstUtils
CameraManufacturer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString CameraManufacturer;$/;"	member	namespace:QMediaMetaData
CameraModel	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString CameraModel;$/;"	member	namespace:QMediaMetaData
cameraOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT int cameraOrientation(const QString &device, GstElementFactory * factory = 0);$/;"	prototype	namespace:QGstUtils	signature:(const QString &device, GstElementFactory * factory = 0)
cameraOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual int cameraOrientation(const QByteArray &device) const;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &device) const
cameraOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfocontrol.h	/^    virtual int cameraOrientation(const QString &deviceName) const = 0;$/;"	prototype	class:QCameraInfoControl	access:public	signature:(const QString &deviceName) const
cameraOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual int cameraOrientation(const QByteArray &device) const = 0;$/;"	prototype	struct:QMediaServiceCameraInfoInterface	access:public	signature:(const QByteArray &device) const
cameraPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QCamera::Position cameraPosition(const QString &device, GstElementFactory * factory = 0);$/;"	prototype	namespace:QGstUtils	signature:(const QString &device, GstElementFactory * factory = 0)
cameraPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QCamera::Position cameraPosition(const QByteArray &device) const;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &device) const
cameraPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfocontrol.h	/^    virtual QCamera::Position cameraPosition(const QString &deviceName) const = 0;$/;"	prototype	class:QCameraInfoControl	access:public	signature:(const QString &deviceName) const
CameraPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    enum Type { Null, ContentType, Device, SupportedFeatures, CameraPosition };$/;"	enumerator	enum:QMediaServiceProviderHint::Type
cameraPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QCamera::Position cameraPosition() const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:() const
cameraPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QCamera::Position cameraPosition(const QByteArray &device) const = 0;$/;"	prototype	struct:QMediaServiceCameraInfoInterface	access:public	signature:(const QByteArray &device) const
cancelCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void cancelCapture();$/;"	prototype	class:QCameraImageCapture	access:public	signature:()
cancelCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    virtual void cancelCapture() = 0;$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:()
cancelSearch	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void cancelSearch();$/;"	prototype	class:QRadioTuner	access:public	signature:()
cancelSearch	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void cancelSearch() = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:()
canChangeProperty	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    virtual bool canChangeProperty(PropertyChangeType changeType, QCamera::Status status) const = 0;$/;"	prototype	class:QCameraControl	access:public	signature:(PropertyChangeType changeType, QCamera::Status status) const
canonicalRequest	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QNetworkRequest canonicalRequest() const;$/;"	prototype	class:QMediaContent	access:public	signature:() const
canonicalResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaResource canonicalResource() const;$/;"	prototype	class:QMediaContent	access:public	signature:() const
canonicalUrl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QUrl canonicalUrl() const;$/;"	prototype	class:QMediaContent	access:public	signature:() const
canRead	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual bool canRead(const QUrl& location, const QByteArray &format = QByteArray()) const = 0;$/;"	prototype	struct:QMediaPlaylistIOInterface	access:public	signature:(const QUrl& location, const QByteArray &format = QByteArray()) const
canRead	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual bool canRead(QIODevice *device, const QByteArray &format = QByteArray() ) const = 0;$/;"	prototype	struct:QMediaPlaylistIOInterface	access:public	signature:(QIODevice *device, const QByteArray &format = QByteArray() ) const
canWrite	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual bool canWrite(QIODevice *device, const QByteArray &format) const = 0;$/;"	prototype	struct:QMediaPlaylistIOInterface	access:public	signature:(QIODevice *device, const QByteArray &format) const
caps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstCaps *caps();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
capsCorrectedResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QSize capsCorrectedResolution(const GstCaps *caps);$/;"	prototype	namespace:QGstUtils	signature:(const GstCaps *caps)
capsForAudioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT GstCaps *capsForAudioFormat(const QAudioFormat &format);$/;"	prototype	namespace:QGstUtils	signature:(const QAudioFormat &format)
capsForFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT GstCaps *capsForFormats(const QList<QVideoFrame::PixelFormat> &formats);$/;"	prototype	namespace:QGstUtils	signature:(const QList<QVideoFrame::PixelFormat> &formats)
capsProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    static GstPadProbeReturn capsProbe(GstPad *pad, GstPadProbeInfo *info, gpointer user_data);$/;"	prototype	class:QGstreamerBufferProbe	access:private	signature:(GstPad *pad, GstPadProbeInfo *info, gpointer user_data)
capsResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QSize capsResolution(const GstCaps *caps);$/;"	prototype	namespace:QGstUtils	signature:(const GstCaps *caps)
capture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QObject *capture;$/;"	member	class:QCameraPrivate	access:public
capture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    int capture(const QString &location = QString());$/;"	prototype	class:QCameraImageCapture	access:public	signature:(const QString &location = QString())
capture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    virtual int capture(const QString &fileName) = 0;$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(const QString &fileName)
captureDestination	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturedestinationcontrol.h	/^    virtual QCameraImageCapture::CaptureDestinations captureDestination() const = 0;$/;"	prototype	class:QCameraCaptureDestinationControl	access:public	signature:() const
captureDestination	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    CaptureDestinations captureDestination() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
CaptureDestination	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    enum CaptureDestination$/;"	enum	class:QCameraImageCapture	access:public
captureDestinationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturedestinationcontrol.h	/^    void captureDestinationChanged(QCameraImageCapture::CaptureDestinations destination);$/;"	prototype	class:QCameraCaptureDestinationControl	access:public	signature:(QCameraImageCapture::CaptureDestinations destination)
captureDestinationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void captureDestinationChanged(QCameraImageCapture::CaptureDestinations destination);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(QCameraImageCapture::CaptureDestinations destination)
captureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    CaptureModes captureMode() const;$/;"	prototype	class:QCamera	access:public	signature:() const
CaptureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum CaptureMode$/;"	enum	class:QCamera	access:public
CaptureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^        CaptureMode = 1,$/;"	enumerator	enum:QCameraControl::PropertyChangeType
captureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    virtual QCamera::CaptureModes captureMode() const = 0;$/;"	prototype	class:QCameraControl	access:public	signature:() const
captureModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void captureModeChanged(QCamera::CaptureModes);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::CaptureModes)
captureModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    void captureModeChanged(QCamera::CaptureModes mode);$/;"	prototype	class:QCameraControl	access:public	signature:(QCamera::CaptureModes mode)
CaptureStillImage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        CaptureStillImage = 0x01,$/;"	enumerator	enum:QCamera::CaptureMode
CaptureToBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        CaptureToBuffer = 0x02$/;"	enumerator	enum:QCameraImageCapture::CaptureDestination
CaptureToFile	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        CaptureToFile = 0x01,$/;"	enumerator	enum:QCameraImageCapture::CaptureDestination
CaptureVideo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        CaptureVideo = 0x02$/;"	enumerator	enum:QCamera::CaptureMode
CaptureViewfinder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        CaptureViewfinder = 0,$/;"	enumerator	enum:QCamera::CaptureMode
category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QString category() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QString category() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    QString category() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QString category() const { return QString(); }$/;"	function	class:QAbstractAudioOutput	access:public	signature:() const
Category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Category;$/;"	member	namespace:QMediaMetaData
category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    QString category() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
categoryChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void categoryChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
categoryChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void categoryChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
categoryChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void categoryChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
change_state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static GstStateChangeReturn change_state(GstElement *element, GstStateChange transition);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GstElement *element, GstStateChange transition)
change_state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static GstStateChangeReturn change_state(GstElement *element, GstStateChange transition);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GstElement *element, GstStateChange transition)
channelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    int channelCount() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
channelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    int channelCount() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
ChannelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ChannelCount;$/;"	member	namespace:QMediaMetaData
ChannelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        ChannelCount,$/;"	enumerator	enum:QMediaResource::Property
channelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    int channelCount() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
ChapterNumber	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ChapterNumber;$/;"	member	namespace:QMediaMetaData
ChildrensProgrammes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        ChildrensProgrammes, SocialAffairs, Religion,$/;"	enumerator	enum:QRadioData::ProgramType
chunk	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    struct chunk$/;"	struct	class:QWaveDecoder	access:private
Classical	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SoftRock, Top40, Soft, Nostalgia, Classical,$/;"	enumerator	enum:QRadioData::ProgramType
ClassicRock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        AlarmTest, Alarm, Talk, ClassicRock, AdultHits,$/;"	enumerator	enum:QRadioData::ProgramType
class_init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static void class_init(gpointer g_class, gpointer class_data);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(gpointer g_class, gpointer class_data)
class_init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static void class_init(gpointer g_class, gpointer class_data);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(gpointer g_class, gpointer class_data)
cleanup	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void cleanup();$/;"	prototype	class:QSample	access:private	signature:()
clear	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void clear();$/;"	prototype	class:QCameraPrivate	access:public	signature:()
clear	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    virtual void clear() = 0;$/;"	prototype	class:QGstBufferPoolInterface	access:public	signature:()
clear	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool clear();$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:()
clear	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^        void clear() {left = right = T(StereoFrameDefault<T>::Default);}$/;"	function	struct:QAudioBuffer::StereoFrame	access:public	signature:()
clear	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool clear();$/;"	prototype	class:QMediaPlaylist	access:public	signature:()
clear	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    void clear();$/;"	prototype	class:QMediaTimeRange	access:public	signature:()
clearFilters	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void clearFilters() { }$/;"	function	class:QDeclarativeVideoBackend	access:public	signature:()
clearPoolBuffers	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void clearPoolBuffers();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
clone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual QAbstractAudioBuffer *clone() const = 0;$/;"	prototype	class:QAbstractAudioBuffer	access:public	signature:() const
close	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual void close() = 0;$/;"	prototype	class:QMediaPlaylistReader	access:public	signature:()
close	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual void close() = 0;$/;"	prototype	class:QMediaPlaylistWriter	access:public	signature:()
codec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    QString codec() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
codec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QString codec() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
codec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QString codec() const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:() const
codec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QString codec() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
codecDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    QString codecDescription(const QString &codec) const;$/;"	prototype	class:QGstCodecsInfo	access:public	signature:(const QString &codec) const
codecDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^    virtual QString codecDescription(const QString &codecName) const = 0;$/;"	prototype	class:QAudioEncoderSettingsControl	access:public	signature:(const QString &codecName) const
codecElement	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    QByteArray codecElement(const QString &codec) const;$/;"	prototype	class:QGstCodecsInfo	access:public	signature:(const QString &codec) const
CodecInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    struct CodecInfo {$/;"	struct	class:QGstCodecsInfo	access:public
codecOptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    QStringList codecOptions(const QString &codec) const;$/;"	prototype	class:QGstCodecsInfo	access:public	signature:(const QString &codec) const
codecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QStringList codecs() const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:() const
College	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        College$/;"	enumerator	enum:QRadioData::ProgramType
colorFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    ColorFilter colorFilter() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
ColorFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    enum ColorFilter {$/;"	enum	class:QCameraImageProcessing	access:public
ColorFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        ColorFilter,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
ColorFilterAqua	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterAqua,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
ColorFilterBlackboard	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterBlackboard,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
ColorFilterGrayscale	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterGrayscale,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
ColorFilterNegative	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterNegative,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
ColorFilterNone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterNone,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
ColorFilterPosterize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterPosterize,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
ColorFilterSepia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterSepia,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
ColorFilterSolarize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterSolarize,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
ColorFilterVendor	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterVendor = 1000$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
ColorFilterWhiteboard	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterWhiteboard,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
ColorTemperature	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        ColorTemperature,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
Comment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Comment;$/;"	member	namespace:QMediaMetaData
Composer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Composer;$/;"	member	namespace:QMediaMetaData
Conductor	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Conductor;$/;"	member	namespace:QMediaMetaData
configurationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmedianetworkaccesscontrol.h	/^    void configurationChanged(const QNetworkConfiguration& configuration);$/;"	prototype	class:QMediaNetworkAccessControl	access:public	signature:(const QNetworkConfiguration& configuration)
configureAppSrcElement	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static void configureAppSrcElement(GObject*, GObject*, GParamSpec*,QGstreamerPlayerSession* _this);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(GObject*, GObject*, GParamSpec*,QGstreamerPlayerSession* _this)
ConstantBitRateEncoding	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        ConstantBitRateEncoding,$/;"	enumerator	enum:QMultimedia::EncodingMode
ConstantQualityEncoding	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        ConstantQualityEncoding,$/;"	enumerator	enum:QMultimedia::EncodingMode
constData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual void *constData() const = 0;$/;"	prototype	class:QAbstractAudioBuffer	access:public	signature:() const
constData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    const void* constData() const; \/\/ Does not detach, preferred$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
constData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    template <typename T> const T* constData() const {$/;"	function	class:QAudioBuffer	access:public	signature:() const
containerDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontainercontrol.h	/^    virtual QString containerDescription(const QString &formatMimeType) const = 0;$/;"	prototype	class:QMediaContainerControl	access:public	signature:(const QString &formatMimeType) const
containerDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QString containerDescription(const QString &format) const;$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QString &format) const
containerFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontainercontrol.h	/^    virtual QString containerFormat() const = 0;$/;"	prototype	class:QMediaContainerControl	access:public	signature:() const
containerFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QString containerFormat() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
contains	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    bool contains(qint64 time) const;$/;"	prototype	class:QMediaTimeInterval	access:public	signature:(qint64 time) const
contains	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    bool contains(qint64 time) const;$/;"	prototype	class:QMediaTimeRange	access:public	signature:(qint64 time) const
contentRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QRectF contentRect() const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:() const
contentRectChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void contentRectChanged();$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:()
ContentType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    enum Type { Null, ContentType, Device, SupportedFeatures, CameraPosition };$/;"	enumerator	enum:QMediaServiceProviderHint::Type
contextFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void contextFailed();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
contextReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void contextReady();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
ContinuousFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        ContinuousFocus = 0x10,$/;"	enumerator	enum:QCameraFocus::FocusMode
contrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    int contrast() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
contrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    qreal contrast() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
Contrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        Contrast,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
Contrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Contrast;$/;"	member	namespace:QMediaMetaData
contrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual int contrast() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
ContrastAdjustment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        ContrastAdjustment,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
contrastChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void contrastChanged(int contrast);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int contrast)
contrastChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    void contrastChanged(int contrast);$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int contrast)
ContributingArtist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ContributingArtist;$/;"	member	namespace:QMediaMetaData
control	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraControl *control;$/;"	member	class:QCameraPrivate	access:public
control	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaPlaylistControl *control;$/;"	member	class:QMediaPlaylistPrivate	access:public
control	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaRecorderControl *control;$/;"	member	class:QMediaRecorderPrivate	access:public
convertVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    Q_MULTIMEDIA_EXPORT qreal convertVolume(qreal volume, VolumeScale from, VolumeScale to);$/;"	prototype	namespace:QAudio	signature:(qreal volume, VolumeScale from, VolumeScale to)
Copyright	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Copyright;$/;"	member	namespace:QMediaMetaData
CoreImageHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        CoreImageHandle,$/;"	enumerator	enum:QAbstractVideoBuffer::HandleType
CountryMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PhoneIn, Travel, Leisure, JazzMusic, CountryMusic,$/;"	enumerator	enum:QRadioData::ProgramType
CoverArtImage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString CoverArtImage;$/;"	member	namespace:QMediaMetaData
CoverArtUrlLarge	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString CoverArtUrlLarge;$/;"	member	namespace:QMediaMetaData
CoverArtUrlSmall	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString CoverArtUrlSmall;$/;"	member	namespace:QMediaMetaData
create	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual QDeclarativeVideoBackend *create(QDeclarativeVideoOutput *parent) = 0;$/;"	prototype	class:QDeclarativeVideoBackendFactoryInterface	access:public	signature:(QDeclarativeVideoOutput *parent)
create	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicyplugin_p.h	/^    virtual QObject* create(const QString& interfaceId) = 0;$/;"	prototype	struct:QMediaResourceSetFactoryInterface	access:public	signature:(const QString& interfaceId)
create	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QMediaService* create(QString const& key) = 0;$/;"	prototype	struct:QMediaServiceProviderFactoryInterface	access:public	signature:(QString const& key)
createBackend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    bool createBackend(QMediaService *service);$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:(QMediaService *service)
createDefaultInputDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAbstractAudioInput* createDefaultInputDevice(QAudioFormat const &format);$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:(QAudioFormat const &format)
createDefaultOutputDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAbstractAudioOutput* createDefaultOutputDevice(QAudioFormat const &format);$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:(QAudioFormat const &format)
createDeviceInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    virtual QAbstractAudioDeviceInfo* createDeviceInfo(const QByteArray& device, QAudio::Mode mode) = 0;$/;"	prototype	struct:QAudioSystemFactoryInterface	access:public	signature:(const QByteArray& device, QAudio::Mode mode)
createFilterRunnable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    virtual QVideoFilterRunnable *createFilterRunnable() = 0;$/;"	prototype	class:QAbstractVideoFilter	access:public	signature:()
createInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    virtual QAbstractAudioInput* createInput(const QByteArray& device) = 0;$/;"	prototype	struct:QAudioSystemFactoryInterface	access:public	signature:(const QByteArray& device)
createInputDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAbstractAudioInput* createInputDevice(QAudioDeviceInfo const &device, QAudioFormat const &format);$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:(QAudioDeviceInfo const &device, QAudioFormat const &format)
createNode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    virtual QSGVideoNode *createNode(const QVideoSurfaceFormat &format) = 0;$/;"	prototype	class:QSGVideoNodeFactoryInterface	access:public	signature:(const QVideoSurfaceFormat &format)
createNullInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAbstractAudioInput* createNullInput();$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:()
createNullOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAbstractAudioOutput* createNullOutput();$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:()
createOffscreenWindow	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QWindow *createOffscreenWindow(const QSurfaceFormat &format);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:private	signature:(const QSurfaceFormat &format)
createOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    virtual QAbstractAudioOutput* createOutput(const QByteArray& device) = 0;$/;"	prototype	struct:QAudioSystemFactoryInterface	access:public	signature:(const QByteArray& device)
createOutputDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAbstractAudioOutput* createOutputDevice(QAudioDeviceInfo const &device, QAudioFormat const &format);$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:(QAudioDeviceInfo const &device, QAudioFormat const &format)
createPulseStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void createPulseStream();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
createReader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual QMediaPlaylistReader *createReader(const QUrl& location, const QByteArray &format = QByteArray()) = 0;$/;"	prototype	struct:QMediaPlaylistIOInterface	access:public	signature:(const QUrl& location, const QByteArray &format = QByteArray())
createReader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual QMediaPlaylistReader *createReader(QIODevice *device, const QByteArray &format = QByteArray()) = 0;$/;"	prototype	struct:QMediaPlaylistIOInterface	access:public	signature:(QIODevice *device, const QByteArray &format = QByteArray())
createRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual QGstVideoRenderer *createRenderer() = 0;$/;"	prototype	class:QGstVideoRendererInterface	access:public	signature:()
createResourceSet	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicy_p.h	/^    static QObject* createResourceSet(const QString& interfaceId);$/;"	prototype	class:QMediaResourcePolicy	access:private	signature:(const QString& interfaceId)
createResourceSet	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicy_p.h	/^    static T* createResourceSet();$/;"	prototype	class:QMediaResourcePolicy	access:public	signature:()
createResourceSet	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicy_p.h	/^T* QMediaResourcePolicy::createResourceSet()$/;"	function	class:QMediaResourcePolicy	signature:()
createSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static QGstVideoRendererSink *createSink(QAbstractVideoSurface *surface);$/;"	prototype	class:QGstVideoRendererSink	access:public	signature:(QAbstractVideoSurface *surface)
createSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static QVideoSurfaceGstSink *createSink(QAbstractVideoSurface *surface);$/;"	prototype	class:QVideoSurfaceGstSink	access:public	signature:(QAbstractVideoSurface *surface)
createVideoWidget	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void createVideoWidget();$/;"	prototype	class:QGstreamerVideoWidgetControl	access:private	signature:()
createWriter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual QMediaPlaylistWriter *createWriter(QIODevice *device, const QByteArray &format) = 0;$/;"	prototype	struct:QMediaPlaylistIOInterface	access:public	signature:(QIODevice *device, const QByteArray &format)
Creating	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^        Creating,$/;"	enumerator	enum:QSample::State
crossfadeTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    virtual qreal crossfadeTime() const = 0;$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:() const
crossfadeTimeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    void crossfadeTimeChanged(qreal crossfadeTime);$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:(qreal crossfadeTime)
CubicVolumeScale	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        CubicVolumeScale,$/;"	enumerator	enum:QAudio::VolumeScale
Culture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        Sport, Education, Drama, Culture, Science, Varied,$/;"	enumerator	enum:QRadioData::ProgramType
CurrentAffairs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum ProgramType { Undefined = 0, News, CurrentAffairs, Information,$/;"	enumerator	enum:QRadioData::ProgramType
currentConfiguration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmedianetworkaccesscontrol.h	/^    virtual QNetworkConfiguration currentConfiguration() const = 0;$/;"	prototype	class:QMediaNetworkAccessControl	access:public	signature:() const
currentDigitalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    virtual qreal currentDigitalZoom() const = 0;$/;"	prototype	class:QCameraZoomControl	access:public	signature:() const
currentDigitalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    void currentDigitalZoomChanged(qreal digitalZoom);$/;"	prototype	class:QCameraZoomControl	access:public	signature:(qreal digitalZoom)
currentIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual int currentIndex() const = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:() const
currentIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    int currentIndex() const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:() const
currentIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    int currentIndex() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
currentIndexChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    void currentIndexChanged(int position);$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(int position)
currentIndexChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void currentIndexChanged(int);$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(int)
currentIndexChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void currentIndexChanged(int index);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int index)
currentItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaContent currentItem() const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:() const
CurrentItemInLoop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum PlaybackMode { CurrentItemOnce, CurrentItemInLoop, Sequential, Loop, Random };$/;"	enumerator	enum:QMediaPlaylist::PlaybackMode
CurrentItemOnce	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum PlaybackMode { CurrentItemOnce, CurrentItemInLoop, Sequential, Loop, Random };$/;"	enumerator	enum:QMediaPlaylist::PlaybackMode
currentMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QMediaContent currentMedia() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
currentMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    QMediaContent currentMedia() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
currentMediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    void currentMediaChanged(const QMediaContent&);$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(const QMediaContent&)
currentMediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void currentMediaChanged(const QMediaContent &media);$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QMediaContent &media)
currentMediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void currentMediaChanged(const QMediaContent&);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(const QMediaContent&)
currentNetworkConfiguration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QNetworkConfiguration currentNetworkConfiguration() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
currentOpticalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    virtual qreal currentOpticalZoom() const = 0;$/;"	prototype	class:QCameraZoomControl	access:public	signature:() const
currentOpticalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    void currentOpticalZoomChanged(qreal opticalZoom);$/;"	prototype	class:QCameraZoomControl	access:public	signature:(qreal opticalZoom)
currentOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideooutputorientationhandler_p.h	/^    int currentOrientation() const;$/;"	prototype	class:QVideoOutputOrientationHandler	access:public	signature:() const
customAudioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcustomaudiorolecontrol.h	/^    virtual QString customAudioRole() const = 0;$/;"	prototype	class:QCustomAudioRoleControl	access:public	signature:() const
customAudioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QString customAudioRole() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
customAudioRoleChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcustomaudiorolecontrol.h	/^    void customAudioRoleChanged(const QString &role);$/;"	prototype	class:QCustomAudioRoleControl	access:public	signature:(const QString &role)
customAudioRoleChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void customAudioRoleChanged(const QString &role);$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QString &role)
customFocusPoint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QPointF customFocusPoint() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
customFocusPoint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual QPointF customFocusPoint() const = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:() const
customFocusPointChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    void customFocusPointChanged(const QPointF &point);$/;"	prototype	class:QCameraFocusControl	access:public	signature:(const QPointF &point)
CustomRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        CustomRole$/;"	enumerator	enum:QAudio::Role
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    QGstreamerBusHelperPrivate*   d;$/;"	member	class:QGstreamerBusHelper	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    PrivateSoundSource *d = nullptr;$/;"	member	class:QSoundEffectPrivate	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioBufferPrivate *d;$/;"	member	class:QAudioBuffer	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QSharedDataPointer<QAudioDeviceInfoPrivate> d;$/;"	member	class:QAudioDeviceInfo	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    QSharedDataPointer<QAudioFormatPrivate> d;$/;"	member	class:QAudioFormat	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    QAbstractAudioInput* d;$/;"	member	class:QAudioInput	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    QAbstractAudioOutput* d;$/;"	member	class:QAudioOutput	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    QAudioProbePrivate *d;$/;"	member	class:QAudioProbe	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^     QSharedDataPointer<QCameraFocusZoneData> d;$/;"	member	class:QCameraFocusZone	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    QSharedPointer<QCameraInfoPrivate> d;$/;"	member	class:QCameraInfo	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    QSharedDataPointer<QCameraViewfinderSettingsPrivate> d;$/;"	member	class:QCameraViewfinderSettings	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QSharedDataPointer<QMediaContentPrivate> d;$/;"	member	class:QMediaContent	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QSharedDataPointer<QAudioEncoderSettingsPrivate> d;$/;"	member	class:QAudioEncoderSettings	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QSharedDataPointer<QImageEncoderSettingsPrivate> d;$/;"	member	class:QImageEncoderSettings	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QSharedDataPointer<QVideoEncoderSettingsPrivate> d;$/;"	member	class:QVideoEncoderSettings	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QSharedDataPointer<QMediaServiceProviderHintPrivate> d;$/;"	member	class:QMediaServiceProviderHint	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QSharedDataPointer<QMediaTimeRangePrivate> d;$/;"	member	class:QMediaTimeRange	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    QSoundEffectPrivate *d = nullptr;$/;"	member	class:QSoundEffect	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QExplicitlySharedDataPointer<QVideoFramePrivate> d;$/;"	member	class:QVideoFrame	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    QVideoProbePrivate *d;$/;"	member	class:QVideoProbe	access:private
d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QSharedDataPointer<QVideoSurfaceFormatPrivate> d;$/;"	member	class:QVideoSurfaceFormat	access:private
data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    const QByteArray& data() const { Q_ASSERT(state() == Ready); return m_soundData; }$/;"	function	class:QSample	access:public	signature:() const
data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    const void* data() const; \/\/ Does not detach$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    template <typename T> const T* data() const {$/;"	function	class:QAudioBuffer	access:public	signature:() const
data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    template <typename T> T* data() {$/;"	function	class:QAudioBuffer	access:public	signature:()
data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    void *data(); \/\/ detaches$/;"	prototype	class:QAudioBuffer	access:public	signature:()
dataRequested	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool& dataRequested() { return m_dataRequested; }$/;"	function	class:QGstAppSrc	access:public	signature:()
dataRequestSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    unsigned int& dataRequestSize() { return m_dataRequestSize; }$/;"	function	class:QGstAppSrc	access:public	signature:()
dataSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    qint64 dataSize;$/;"	member	class:QWaveDecoder	access:private
DataSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        DataSize,$/;"	enumerator	enum:QMediaResource::Property
dataSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    qint64 dataSize() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
DataStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    enum StreamType { UnknownStream, VideoStream, AudioStream, SubPictureStream, DataStream };$/;"	enumerator	enum:QMediaStreamsControl::StreamType
Date	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Date;$/;"	member	namespace:QMediaMetaData
DateTimeDigitized	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString DateTimeDigitized;$/;"	member	namespace:QMediaMetaData
DateTimeOriginal	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString DateTimeOriginal;$/;"	member	namespace:QMediaMetaData
DecibelVolumeScale	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        DecibelVolumeScale$/;"	enumerator	enum:QAudio::VolumeScale
decoderError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void decoderError();$/;"	prototype	class:QSample	access:private	signature:()
decoderError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void decoderError();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
decoderError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void decoderError();$/;"	prototype	class:PrivateSoundSource	access:private	signature:()
decoderReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void decoderReady();$/;"	prototype	class:QSample	access:private	signature:()
DecodingState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^        DecodingState$/;"	enumerator	enum:QAudioDecoder::State
Default	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    template <typename T> struct StereoFrameDefault { enum { Default = 0 }; };$/;"	enumerator	enum:QAudioBuffer::StereoFrameDefault::__anon3
Default	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^template <> struct QAudioBuffer::StereoFrameDefault<unsigned char> { enum { Default = 128 }; };$/;"	enumerator	enum:QAudioBuffer::StereoFrameDefault::__anon4
Default	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^template <> struct QAudioBuffer::StereoFrameDefault<unsigned short> { enum { Default = 32768 }; };$/;"	enumerator	enum:QAudioBuffer::StereoFrameDefault::__anon5
defaultAudioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    QString defaultAudioInput() const;$/;"	prototype	class:QAudioRecorder	access:public	signature:() const
defaultCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    static QCameraInfo defaultCamera();$/;"	prototype	class:QCameraInfo	access:public	signature:()
defaultDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAudioDeviceInfo defaultDevice(QAudio::Mode mode);$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:(QAudio::Mode mode)
defaultDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiosystempluginext_p.h	/^    virtual QByteArray defaultDevice(QAudio::Mode) const = 0;$/;"	prototype	struct:QAudioSystemPluginExtension	access:public	signature:(QAudio::Mode) const
defaultDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QByteArray defaultDevice(const QByteArray &serviceType) const;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &serviceType) const
defaultDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QByteArray defaultDevice(const QByteArray &service) const = 0;$/;"	prototype	struct:QMediaServiceDefaultDeviceInterface	access:public	signature:(const QByteArray &service) const
defaultDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    virtual int defaultDevice() const = 0;$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:() const
defaultInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    virtual QString defaultInput() const = 0;$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:() const
defaultInputDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    static QAudioDeviceInfo defaultInputDevice();$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:()
defaultLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    QDir defaultLocation(MediaType type) const;$/;"	prototype	class:QMediaStorageLocation	access:public	signature:(MediaType type) const
defaultOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    virtual QString defaultOutput() const = 0;$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:() const
defaultOutputDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    static QAudioDeviceInfo defaultOutputDevice();$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:()
defaultServiceProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    static QMediaServiceProvider* defaultServiceProvider();$/;"	prototype	class:QMediaServiceProvider	access:public	signature:()
delegate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QVideoSurfaceGstDelegate *delegate;$/;"	member	class:QGstVideoRendererSink	access:private
deleteOnComplete	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    void deleteOnComplete();$/;"	prototype	class:QSound	access:private	signature:()
Denoising	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        Denoising,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
DenoisingAdjustment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        DenoisingAdjustment,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
denoisingLevel	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    qreal denoisingLevel() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
description	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^        QString description;$/;"	member	struct:QGstCodecsInfo::CodecInfo	access:public
description	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^        QString description;$/;"	member	struct:QGstUtils::CameraInfo	access:public
description	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    QString description() const;$/;"	prototype	class:QCameraInfo	access:public	signature:() const
Description	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Description;$/;"	member	namespace:QMediaMetaData
descriptor	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        chunk       descriptor;$/;"	member	struct:QWaveDecoder::RIFFHeader	access:public
descriptor	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        chunk       descriptor;$/;"	member	struct:QWaveDecoder::WAVEHeader	access:public
destroy	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicyplugin_p.h	/^    virtual void destroy(QObject *resourceSet) = 0;$/;"	prototype	struct:QMediaResourceSetFactoryInterface	access:public	signature:(QObject *resourceSet)
destroyResourceSet	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicy_p.h	/^    static void destroyResourceSet(QObject* resourceSet);$/;"	prototype	class:QMediaResourcePolicy	access:public	signature:(QObject* resourceSet)
destroy_notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    static void destroy_notify(gpointer data);$/;"	prototype	class:QGstAppSrc	access:private	signature:(gpointer data)
Device	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    enum Type { Null, ContentType, Device, SupportedFeatures, CameraPosition };$/;"	enumerator	enum:QMediaServiceProviderHint::Type
device	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QByteArray device() const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:() const
deviceControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QVideoDeviceSelectorControl *deviceControl;$/;"	member	class:QCameraPrivate	access:public
deviceCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    virtual int deviceCount() const = 0;$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:() const
deviceDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QString deviceDescription(const QByteArray &serviceType, const QByteArray &device);$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &serviceType, const QByteArray &device)
deviceDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QT_DEPRECATED static QString deviceDescription(const QByteArray &device);$/;"	prototype	class:QCamera	access:public	signature:(const QByteArray &device)
deviceDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QString deviceDescription(const QByteArray &service, const QByteArray &device) = 0;$/;"	prototype	struct:QMediaServiceSupportedDevicesInterface	access:public	signature:(const QByteArray &service, const QByteArray &device)
deviceDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    virtual QString deviceDescription(int index) const = 0;$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:(int index) const
deviceName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QString deviceName() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
deviceName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QString deviceName() const = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:() const
deviceName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    QString deviceName() const;$/;"	prototype	class:QCameraInfo	access:public	signature:() const
deviceName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    virtual QString deviceName(int index) const = 0;$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:(int index) const
devices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QList<QByteArray> devices(const QByteArray &serviceType) const;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &serviceType) const
devices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QList<QByteArray> devices(const QByteArray &service) const = 0;$/;"	prototype	struct:QMediaServiceSupportedDevicesInterface	access:public	signature:(const QByteArray &service) const
devicesChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    void devicesChanged();$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:()
DeviceSettingDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString DeviceSettingDescription;$/;"	member	namespace:QMediaMetaData
digitalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    qreal digitalZoom() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
digitalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void digitalZoomChanged(qreal);$/;"	prototype	class:QCameraFocus	access:public	signature:(qreal)
DigitalZoomRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString DigitalZoomRatio;$/;"	member	namespace:QMediaMetaData
Direction	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    enum Direction$/;"	enum	class:QVideoSurfaceFormat	access:public
Director	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Director;$/;"	member	namespace:QMediaMetaData
discardBytes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    void discardBytes(qint64 numBytes);$/;"	prototype	class:QWaveDecoder	access:private	signature:(qint64 numBytes)
displayRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual QRect displayRect() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
Documentary	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        NationalMusic, OldiesMusic, FolkMusic, Documentary,$/;"	enumerator	enum:QRadioData::ProgramType
doSeek	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool doSeek(qint64);$/;"	prototype	class:QGstAppSrc	access:private	signature:(qint64)
Drama	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        Sport, Education, Drama, Culture, Science, Varied,$/;"	enumerator	enum:QRadioData::ProgramType
DriveMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    enum DriveMode$/;"	enum	class:QCameraImageCapture	access:public
driveMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    virtual QCameraImageCapture::DriveMode driveMode() const = 0;$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:() const
driver	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^        QByteArray driver;$/;"	member	struct:QGstUtils::CameraInfo	access:public
duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    qint64 duration() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    int duration() const;$/;"	prototype	class:QWaveDecoder	access:public	signature:() const
duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    qint64 duration() const;$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    qint64 duration() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual qint64 duration() const = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:() const
Duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Duration;$/;"	member	namespace:QMediaMetaData
duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    qint64 duration() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual qint64 duration() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    qint64 duration() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual qint64 duration() const = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:() const
durationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void durationChanged(qint64 duration);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(qint64 duration)
durationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void durationChanged(qint64 duration);$/;"	prototype	class:QAudioDecoder	access:public	signature:(qint64 duration)
durationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void durationChanged(qint64 duration);$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(qint64 duration)
durationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void durationChanged(qint64 duration);$/;"	prototype	class:QMediaPlayer	access:public	signature:(qint64 duration)
durationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void durationChanged(qint64 duration);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(qint64 duration)
durationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void durationChanged(qint64 duration);$/;"	prototype	class:QMediaRecorder	access:public	signature:(qint64 duration)
durationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    void durationChanged(qint64 position);$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(qint64 position)
durationForBytes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    qint64 durationForBytes(qint32 byteCount) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(qint32 byteCount) const
durationForFrames	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    qint64 durationForFrames(qint32 frameCount) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(qint32 frameCount) const
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_handleNewItem(const QVariant& content))$/;"	prototype	class:QMediaNetworkPlaylistProvider	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_handleParserError(QPlaylistFileParser::ParserError err, const QString &))$/;"	prototype	class:QMediaNetworkPlaylistProvider	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_mediaChanged(int start, int end))$/;"	prototype	class:QMediaPlaylistNavigator	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_mediaInserted(int start, int end))$/;"	prototype	class:QMediaPlaylistNavigator	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_mediaRemoved(int start, int end))$/;"	prototype	class:QMediaPlaylistNavigator	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_error(int, const QString &))$/;"	prototype	class:QAudioDecoder	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_stateChanged(QAudioDecoder::State))$/;"	prototype	class:QAudioDecoder	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_error(int, const QString &))$/;"	prototype	class:QCamera	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_preparePropertyChange(int))$/;"	prototype	class:QCamera	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_restartCamera())$/;"	prototype	class:QCamera	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_updateLockStatus(QCamera::LockType, QCamera::LockStatus, QCamera::LockChangeReason))$/;"	prototype	class:QCamera	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_updateState(QCamera::State))$/;"	prototype	class:QCamera	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_exposureParameterChanged(int))$/;"	prototype	class:QCameraExposure	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_exposureParameterRangeChanged(int))$/;"	prototype	class:QCameraExposure	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_error(int, int, const QString &))$/;"	prototype	class:QCameraImageCapture	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_readyChanged(bool))$/;"	prototype	class:QCameraImageCapture	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_serviceDestroyed())$/;"	prototype	class:QCameraImageCapture	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_availabilityChanged())$/;"	prototype	class:QMediaObject	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_notify())$/;"	prototype	class:QMediaObject	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_error(int, const QString &))$/;"	prototype	class:QMediaPlayer	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_handleMediaChanged(const QMediaContent&))$/;"	prototype	class:QMediaPlayer	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_handlePlaylistLoaded())$/;"	prototype	class:QMediaPlayer	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_handlePlaylistLoadFailed())$/;"	prototype	class:QMediaPlayer	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_mediaStatusChanged(QMediaPlayer::MediaStatus))$/;"	prototype	class:QMediaPlayer	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_playlistDestroyed())$/;"	prototype	class:QMediaPlayer	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_stateChanged(QMediaPlayer::State))$/;"	prototype	class:QMediaPlayer	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_updateMedia(const QMediaContent&))$/;"	prototype	class:QMediaPlayer	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_loadFailed(QMediaPlaylist::Error, const QString &))$/;"	prototype	class:QMediaPlaylist	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_applySettings())$/;"	prototype	class:QMediaRecorder	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_availabilityChanged(QMultimedia::AvailabilityStatus))$/;"	prototype	class:QMediaRecorder	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_error(int, const QString &))$/;"	prototype	class:QMediaRecorder	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_notify())$/;"	prototype	class:QMediaRecorder	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_serviceDestroyed())$/;"	prototype	class:QMediaRecorder	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_stateChanged(QMediaRecorder::State))$/;"	prototype	class:QMediaRecorder	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_updateActualLocation(const QUrl &))$/;"	prototype	class:QMediaRecorder	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_updateNotifyInterval(int))$/;"	prototype	class:QMediaRecorder	access:private	signature:()
d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_serviceDestroyed())$/;"	prototype	class:QRadioData	access:private	signature:()
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaPlaylistNavigatorPrivate *d_ptr;$/;"	member	class:QMediaPlaylistNavigator	access:protected
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    QMediaPlaylistProviderPrivate *d_ptr;$/;"	member	class:QMediaPlaylistProvider	access:protected
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    QScopedPointer<QPlaylistFileParserPrivate> d_ptr;$/;"	member	class:QPlaylistFileParser	access:private
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    QAbstractVideoBufferPrivate *d_ptr;  \/\/ For expansion, not used currently$/;"	member	class:QAbstractVideoBuffer	access:protected
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    QAbstractVideoFilterPrivate *d_ptr;$/;"	member	class:QAbstractVideoFilter	access:private
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    QScopedPointer<QAbstractVideoSurfacePrivate> d_ptr;$/;"	member	class:QAbstractVideoSurface	access:private
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    QCameraExposurePrivate *d_ptr;$/;"	member	class:QCameraExposure	access:private
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QCameraFocusPrivate *d_ptr;$/;"	member	class:QCameraFocus	access:private
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QCameraImageCapturePrivate *d_ptr;$/;"	member	class:QCameraImageCapture	access:protected
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    QCameraImageProcessingPrivate *d_ptr;$/;"	member	class:QCameraImageProcessing	access:private
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontrol.h	/^    QMediaControlPrivate *d_ptr;$/;"	member	class:QMediaControl	access:protected
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    QMediaObjectPrivate *d_ptr;$/;"	member	class:QMediaObject	access:protected
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    QMediaPlaylistPrivate *d_ptr;$/;"	member	class:QMediaPlaylist	access:protected
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QMediaRecorderPrivate *d_ptr;$/;"	member	class:QMediaRecorder	access:protected
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^    QMediaServicePrivate *d_ptr;$/;"	member	class:QMediaService	access:protected
d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QRadioDataPrivate *d_ptr;$/;"	member	class:QRadioData	access:protected
e	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    qint64 e;$/;"	member	class:QMediaTimeInterval	access:private
earliestTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    qint64 earliestTime() const;$/;"	prototype	class:QMediaTimeRange	access:public	signature:() const
EasyListening	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PopMusic, RockMusic, EasyListening, LightClassical,$/;"	enumerator	enum:QRadioData::ProgramType
Education	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        Sport, Education, Drama, Culture, Science, Varied,$/;"	enumerator	enum:QRadioData::ProgramType
EGLImageHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        EGLImageHandle,$/;"	enumerator	enum:QAbstractVideoBuffer::HandleType
elapsedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    qint64 elapsedUSecs() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
elapsedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    qint64 elapsedUSecs() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
elapsedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual qint64 elapsedUSecs() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
elapsedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual qint64 elapsedUSecs() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
element	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  GstElement element;$/;"	member	struct:_GstVideoConnector	access:public
element	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    GstAppSrc *element();$/;"	prototype	class:QGstAppSrc	access:public	signature:()
elementFactories	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    GList *elementFactories(ElementType elementType) const;$/;"	prototype	class:QGstCodecsInfo	access:private	signature:(ElementType elementType) const
elementName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^        QByteArray elementName;$/;"	member	struct:QGstCodecsInfo::CodecInfo	access:public
ElementType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    enum ElementType { AudioEncoder, VideoEncoder, Muxer };$/;"	enum	class:QGstCodecsInfo	access:public
emptyComplete	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void emptyComplete(void *stream, bool reload);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(void *stream, bool reload)
emptyStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void emptyStream(EmptyStreamOptions options = EmptyStreamOptions());$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(EmptyStreamOptions options = EmptyStreamOptions())
EmptyStreamOption	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    enum EmptyStreamOption {$/;"	enum	class:QSoundEffectPrivate	access:private
encodingMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QMultimedia::EncodingMode encodingMode() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
encodingMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QMultimedia::EncodingMode encodingMode() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
EncodingMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^    enum EncodingMode$/;"	enum	namespace:QMultimedia
encodingOption	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVariant encodingOption(const QString &option) const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QString &option) const
encodingOption	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVariant encodingOption(const QString &option) const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QString &option) const
encodingOption	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVariant encodingOption(const QString &option) const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QString &option) const
encodingOptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVariantMap encodingOptions() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
encodingOptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVariantMap encodingOptions() const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:() const
encodingOptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVariantMap encodingOptions() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
EncodingQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^    enum EncodingQuality$/;"	enum	namespace:QMultimedia
encodingSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QImageEncoderSettings encodingSettings() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
end	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    qint64 end() const;$/;"	prototype	class:QMediaTimeInterval	access:public	signature:() const
Endian	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum Endian { BigEndian = QSysInfo::BigEndian, LittleEndian = QSysInfo::LittleEndian };$/;"	enum	class:QAudioFormat	access:public
EndOfMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        EndOfMedia,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
endOfMediaReset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void endOfMediaReset();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
endTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    qint64 endTime() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
enoughData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool& enoughData() { return m_enoughData; }$/;"	function	class:QGstAppSrc	access:public	signature:()
enoughDataAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    bool enoughDataAvailable();$/;"	prototype	class:QWaveDecoder	access:private	signature:()
enumerateCameras	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QVector<CameraInfo> enumerateCameras(GstElementFactory *factory = 0);$/;"	prototype	namespace:QGstUtils	signature:(GstElementFactory *factory = 0)
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCamera::Error error;$/;"	member	class:QCameraPrivate	access:public
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void error(int error, const QString &errorString);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(int error, const QString &errorString)
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaPlaylist::Error error;$/;"	member	class:QMediaPlaylistPrivate	access:public
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaRecorder::Error error;$/;"	member	class:QMediaRecorderPrivate	access:public
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void error(QPlaylistFileParser::ParserError err, const QString& errorMsg);$/;"	prototype	class:QPlaylistFileParser	access:public	signature:(QPlaylistFileParser::ParserError err, const QString& errorMsg)
Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^        Error,$/;"	enumerator	enum:QSample::State
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void error();$/;"	prototype	class:QSample	access:public	signature:()
Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    enum Error$/;"	enum	class:QAbstractVideoSurface	access:public
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    Error error() const;$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:() const
Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Error { NoError, OpenError, IOError, UnderrunError, FatalError };$/;"	enum	namespace:QAudio
Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    enum Error$/;"	enum	class:QAudioDecoder	access:public
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    Error error() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void error(QAudioDecoder::Error error);$/;"	prototype	class:QAudioDecoder	access:public	signature:(QAudioDecoder::Error error)
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void error(int error, const QString &errorString);$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(int error, const QString &errorString)
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    QAudio::Error error() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    QAudio::Error error() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QAudio::Error error() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QAudio::Error error() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum Error$/;"	enum	class:QCamera	access:public
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    Error error() const;$/;"	prototype	class:QCamera	access:public	signature:() const
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void error(QCamera::Error);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::Error)
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    void error(int error, const QString &errorString);$/;"	prototype	class:QCameraControl	access:public	signature:(int error, const QString &errorString)
Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    enum Error$/;"	enum	class:QCameraImageCapture	access:public
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    Error error() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void error(int id, QCameraImageCapture::Error error, const QString &errorString);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(int id, QCameraImageCapture::Error error, const QString &errorString)
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    void error(int id, int error, const QString &errorString);$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(int id, int error, const QString &errorString)
Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    enum Error$/;"	enum	class:QMediaPlayer	access:public
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Error error() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void error(QMediaPlayer::Error error);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QMediaPlayer::Error error)
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void error(int error, const QString &errorString);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(int error, const QString &errorString)
Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum Error { NoError, FormatError, FormatNotSupportedError, NetworkError, AccessDeniedError };$/;"	enum	class:QMediaPlaylist	access:public
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    Error error() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    enum Error$/;"	enum	class:QMediaRecorder	access:public
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Error error() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void error(QMediaRecorder::Error error);$/;"	prototype	class:QMediaRecorder	access:public	signature:(QMediaRecorder::Error error)
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    void error(int error, const QString &errorString);$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(int error, const QString &errorString)
Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enum	class:QRadioData	access:public
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    Error error() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void error(QRadioData::Error error);$/;"	prototype	class:QRadioData	access:public	signature:(QRadioData::Error error)
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual QRadioData::Error error() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    void error(QRadioData::Error err);$/;"	prototype	class:QRadioDataControl	access:public	signature:(QRadioData::Error err)
Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enum	class:QRadioTuner	access:public
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    Error error() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void error(QRadioTuner::Error error);$/;"	prototype	class:QRadioTuner	access:public	signature:(QRadioTuner::Error error)
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual QRadioTuner::Error error() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void error(QRadioTuner::Error err);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::Error err)
Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^        Error$/;"	enumerator	enum:QSoundEffect::Status
errorChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    void errorChanged(QAudio::Error error);$/;"	prototype	class:QAbstractAudioInput	access:public	signature:(QAudio::Error error)
errorChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    void errorChanged(QAudio::Error error);$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:(QAudio::Error error)
errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QString errorString;$/;"	member	class:QCameraPrivate	access:public
errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QString errorString;$/;"	member	class:QMediaPlaylistPrivate	access:public
errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QString errorString;$/;"	member	class:QMediaRecorderPrivate	access:public
errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    QString errorString() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QString errorString() const;$/;"	prototype	class:QCamera	access:public	signature:() const
errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QString errorString() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QString errorString() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    QString errorString() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QString errorString() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QString errorString() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual QString errorString() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    QString errorString() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual QString errorString() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
Event	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Event;$/;"	member	namespace:QMediaMetaData
EventType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    enum EventType {$/;"	enum	class:QCameraFeedbackControl	access:public
expose	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void expose();$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:()
exposure	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCameraExposure *exposure() const;$/;"	prototype	class:QCamera	access:public	signature:() const
ExposureAction	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureAction = 11,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureAuto	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureAuto = 0,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureBacklight	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureBacklight = 4,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureBarcode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureBarcode = 20,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureBeach	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureBeach = 8,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureBiasValue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ExposureBiasValue;$/;"	member	namespace:QMediaMetaData
ExposureCandlelight	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureCandlelight = 19,$/;"	enumerator	enum:QCameraExposure::ExposureMode
exposureCompensation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    qreal exposureCompensation() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
ExposureCompensation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        ExposureCompensation,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
exposureCompensationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void exposureCompensationChanged(qreal);$/;"	prototype	class:QCameraExposure	access:public	signature:(qreal)
ExposureFireworks	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureFireworks = 17,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureLandscape	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureLandscape = 12,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureLargeAperture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureLargeAperture = 9,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureManual	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureManual = 1,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    enum ExposureMode {$/;"	enum	class:QCameraExposure	access:public
exposureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    ExposureMode exposureMode() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
ExposureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        ExposureMode,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
ExposureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ExposureMode;$/;"	member	namespace:QMediaMetaData
ExposureModeVendor	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureModeVendor = 1000$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureNight	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureNight = 3,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureNightPortrait	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureNightPortrait = 13,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    enum ExposureParameter {$/;"	enum	class:QCameraExposureControl	access:public
ExposureParty	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureParty = 18,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposurePortrait	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposurePortrait = 2,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureProgram	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ExposureProgram;$/;"	member	namespace:QMediaMetaData
ExposureSmallAperture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureSmallAperture = 10,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureSnow	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureSnow = 7,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureSports	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureSports = 6,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureSpotlight	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureSpotlight = 5,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureSteadyPhoto	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureSteadyPhoto = 16,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureSunset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureSunset = 15,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureTheatre	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureTheatre = 14,$/;"	enumerator	enum:QCameraExposure::ExposureMode
ExposureTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ExposureTime;$/;"	member	namespace:QMediaMetaData
ExtendedExposureParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        ExtendedExposureParameter = 1000$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
ExtendedParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        ExtendedParameter = 1000$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
failedSignalEmited	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  gboolean failedSignalEmited;$/;"	member	struct:_GstVideoConnector	access:public
FatalError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Error { NoError, OpenError, IOError, UnderrunError, FatalError };$/;"	enumerator	enum:QAudio::Error
Feature	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    enum Feature {$/;"	enum	class:QMediaServiceProviderHint	access:public
features	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    Features features() const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:() const
FieldType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    enum FieldType$/;"	enum	class:QVideoFrame	access:public
fieldType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    FieldType fieldType() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
fileExtensionForMimeType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QString fileExtensionForMimeType(const QString &mimeType);$/;"	prototype	namespace:QGstUtils	signature:(const QString &mimeType)
fileName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    QString fileName() const;$/;"	prototype	class:QSound	access:public	signature:() const
FileType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    enum FileType$/;"	enum	class:QPlaylistFileParser	access:public
FillMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    enum FillMode$/;"	enum	class:QDeclarativeVideoOutput	access:public
fillMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    FillMode fillMode() const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:() const
fillModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void fillModeChanged(QDeclarativeVideoOutput::FillMode);$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(QDeclarativeVideoOutput::FillMode)
filters	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QQmlListProperty<QAbstractVideoFilter> filters();$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:()
filter_append	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    static void filter_append(QQmlListProperty<QAbstractVideoFilter> *property, QAbstractVideoFilter *value);$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:(QQmlListProperty<QAbstractVideoFilter> *property, QAbstractVideoFilter *value)
filter_at	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    static QAbstractVideoFilter *filter_at(QQmlListProperty<QAbstractVideoFilter> *property, int index);$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:(QQmlListProperty<QAbstractVideoFilter> *property, int index)
filter_clear	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    static void filter_clear(QQmlListProperty<QAbstractVideoFilter> *property);$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:(QQmlListProperty<QAbstractVideoFilter> *property)
filter_count	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    static int filter_count(QQmlListProperty<QAbstractVideoFilter> *property);$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:(QQmlListProperty<QAbstractVideoFilter> *property)
finalize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static void finalize(GObject *object);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GObject *object)
finalize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static void finalize(GObject *object);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GObject *object)
FinalizingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        FinalizingStatus$/;"	enumerator	enum:QMediaRecorder::Status
Finance	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SeriousClassical, OtherMusic, Weather, Finance,$/;"	enumerator	enum:QRadioData::ProgramType
findByDataHeader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    static FileType findByDataHeader(const char *data, quint32 size);$/;"	prototype	class:QPlaylistFileParser	access:private	signature:(const char *data, quint32 size)
findByMimeType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    static FileType findByMimeType(const QString &mime);$/;"	prototype	class:QPlaylistFileParser	access:private	signature:(const QString &mime)
findBySuffixType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    static FileType findBySuffixType(const QString &suffix);$/;"	prototype	class:QPlaylistFileParser	access:private	signature:(const QString &suffix)
findChunk	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    bool findChunk(const char *chunkId);$/;"	prototype	class:QWaveDecoder	access:private	signature:(const char *chunkId)
findPlaylistType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    static FileType findPlaylistType(const QString &suffix,$/;"	prototype	class:QPlaylistFileParser	access:private	signature:(const QString &suffix, const QString& mime, const char *data = 0, quint32 size = 0)
findPlaylistType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    static FileType findPlaylistType(QIODevice *device,$/;"	prototype	class:QPlaylistFileParser	access:private	signature:(QIODevice *device, const QString& mime)
finished	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void finished();$/;"	prototype	class:QPlaylistFileParser	access:public	signature:()
finished	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void finished();$/;"	prototype	class:QAudioDecoder	access:public	signature:()
finished	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void finished();$/;"	prototype	class:QAudioDecoderControl	access:public	signature:()
finishVideoOutputChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void finishVideoOutputChange();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
Flag	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    enum Flag$/;"	enum	class:QMediaPlayer	access:public
Flags	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    enum Flags$/;"	enum	class:QGstreamerBufferProbe	access:public
Flash	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Flash;$/;"	member	namespace:QMediaMetaData
FlashAuto	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashAuto = 0x1,$/;"	enumerator	enum:QCameraExposure::FlashMode
FlashCompensation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        FlashCompensation,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
FlashFill	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashFill = 0x10,$/;"	enumerator	enum:QCameraExposure::FlashMode
FlashManual	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashManual = 0x200$/;"	enumerator	enum:QCameraExposure::FlashMode
FlashMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    enum FlashMode {$/;"	enum	class:QCameraExposure	access:public
flashMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    FlashModes flashMode() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
flashMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^    virtual QCameraExposure::FlashModes flashMode() const = 0;$/;"	prototype	class:QCameraFlashControl	access:public	signature:() const
FlashOff	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashOff = 0x2,$/;"	enumerator	enum:QCameraExposure::FlashMode
FlashOn	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashOn = 0x4,$/;"	enumerator	enum:QCameraExposure::FlashMode
FlashPower	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        FlashPower,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
flashReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void flashReady(bool);$/;"	prototype	class:QCameraExposure	access:public	signature:(bool)
flashReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^    void flashReady(bool);$/;"	prototype	class:QCameraFlashControl	access:public	signature:(bool)
FlashRedEyeReduction	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashRedEyeReduction  = 0x8,$/;"	enumerator	enum:QCameraExposure::FlashMode
FlashSlowSyncFrontCurtain	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashSlowSyncFrontCurtain = 0x80,$/;"	enumerator	enum:QCameraExposure::FlashMode
FlashSlowSyncRearCurtain	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashSlowSyncRearCurtain = 0x100,$/;"	enumerator	enum:QCameraExposure::FlashMode
FlashTorch	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashTorch = 0x20,$/;"	enumerator	enum:QCameraExposure::FlashMode
FlashVideoLight	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashVideoLight = 0x40,$/;"	enumerator	enum:QCameraExposure::FlashMode
Float	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum SampleType { Unknown, SignedInt, UnSignedInt, Float };$/;"	enumerator	enum:QAudioFormat::SampleType
flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual void flush(QAbstractVideoSurface *surface) = 0; \/\/ surface may be null if unexpectedly deleted.$/;"	prototype	class:QGstVideoRenderer	access:public	signature:(QAbstractVideoSurface *surface)
flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    void flush();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void flush();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    void flush();$/;"	prototype	class:QAudioProbe	access:public	signature:()
flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaaudioprobecontrol.h	/^    void flush();$/;"	prototype	class:QMediaAudioProbeControl	access:public	signature:()
flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediavideoprobecontrol.h	/^    void flush();$/;"	prototype	class:QMediaVideoProbeControl	access:public	signature:()
flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    void flush();$/;"	prototype	class:QVideoProbe	access:public	signature:()
flushVideoProbes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void flushVideoProbes();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
FM	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Band { AM, FM, SW, LW, FM2 };$/;"	enumerator	enum:QRadioTuner::Band
FM2	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Band { AM, FM, SW, LW, FM2 };$/;"	enumerator	enum:QRadioTuner::Band
FNumber	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString FNumber;$/;"	member	namespace:QMediaMetaData
FocalLength	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString FocalLength;$/;"	member	namespace:QMediaMetaData
FocalLengthIn35mmFilm	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString FocalLengthIn35mmFilm;$/;"	member	namespace:QMediaMetaData
focus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCameraFocus *focus() const;$/;"	prototype	class:QCamera	access:public	signature:() const
Focused	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        Focused$/;"	enumerator	enum:QCameraFocusZone::FocusZoneStatus
FocusMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    enum FocusMode {$/;"	enum	class:QCameraFocus	access:public
focusMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    FocusModes focusMode() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
focusMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual QCameraFocus::FocusModes focusMode() const = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:() const
focusModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    void focusModeChanged(QCameraFocus::FocusModes mode);$/;"	prototype	class:QCameraFocusControl	access:public	signature:(QCameraFocus::FocusModes mode)
FocusPointAuto	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        FocusPointAuto,$/;"	enumerator	enum:QCameraFocus::FocusPointMode
FocusPointCenter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        FocusPointCenter,$/;"	enumerator	enum:QCameraFocus::FocusPointMode
FocusPointCustom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        FocusPointCustom$/;"	enumerator	enum:QCameraFocus::FocusPointMode
FocusPointFaceDetection	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        FocusPointFaceDetection,$/;"	enumerator	enum:QCameraFocus::FocusPointMode
FocusPointMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    enum FocusPointMode {$/;"	enum	class:QCameraFocus	access:public
focusPointMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    FocusPointMode focusPointMode() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
focusPointMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual QCameraFocus::FocusPointMode focusPointMode() const = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:() const
focusPointModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    void focusPointModeChanged(QCameraFocus::FocusPointMode mode);$/;"	prototype	class:QCameraFocusControl	access:public	signature:(QCameraFocus::FocusPointMode mode)
focusZones	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QCameraFocusZoneList focusZones() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
focusZones	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual QCameraFocusZoneList focusZones() const = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:() const
focusZonesChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void focusZonesChanged();$/;"	prototype	class:QCameraFocus	access:public	signature:()
focusZonesChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    void focusZonesChanged();$/;"	prototype	class:QCameraFocusControl	access:public	signature:()
FocusZoneStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    enum FocusZoneStatus {$/;"	enum	class:QCameraFocusZone	access:public
FolkMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        NationalMusic, OldiesMusic, FolkMusic, Documentary,$/;"	enumerator	enum:QRadioData::ProgramType
ForceMono	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum StereoMode { ForceStereo, ForceMono, Auto };$/;"	enumerator	enum:QRadioTuner::StereoMode
ForceStereo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum StereoMode { ForceStereo, ForceMono, Auto };$/;"	enumerator	enum:QRadioTuner::StereoMode
format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual QAudioFormat format() const = 0;$/;"	prototype	class:QAbstractAudioBuffer	access:public	signature:() const
format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    const QAudioFormat& format() const { Q_ASSERT(state() == Ready); return m_audioFormat; }$/;"	function	class:QSample	access:public	signature:() const
format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    QAudioFormat format;$/;"	member	class:QWaveDecoder	access:private
format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioFormat format() const;$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    QAudioFormat format() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    QAudioFormat format() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QAudioFormat format() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QAudioFormat format() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
formatChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void formatChanged(const QAudioFormat &format);$/;"	prototype	class:QAudioDecoder	access:public	signature:(const QAudioFormat &format)
formatChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void formatChanged(const QAudioFormat &format);$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(const QAudioFormat &format)
formatControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaContainerControl *formatControl;$/;"	member	class:QMediaRecorderPrivate	access:public
FormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        FormatError,$/;"	enumerator	enum:QPlaylistFileParser::ParserError
FormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^        FormatError,$/;"	enumerator	enum:QAudioDecoder::Error
FormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        FormatError$/;"	enumerator	enum:QCameraImageCapture::Error
FormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        FormatError,$/;"	enumerator	enum:QMediaPlayer::Error
FormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum Error { NoError, FormatError, FormatNotSupportedError, NetworkError, AccessDeniedError };$/;"	enumerator	enum:QMediaPlaylist::Error
FormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        FormatError,$/;"	enumerator	enum:QMediaRecorder::Error
formatForCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QVideoSurfaceFormat formatForCaps($/;"	prototype	namespace:QGstUtils	signature:( GstCaps *caps, GstVideoInfo *info = 0, QAbstractVideoBuffer::HandleType handleType = QAbstractVideoBuffer::NoHandle)
formatForCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QVideoSurfaceFormat formatForCaps($/;"	prototype	namespace:QGstUtils	signature:( GstCaps *caps, int *bytesPerLine = 0, QAbstractVideoBuffer::HandleType handleType = QAbstractVideoBuffer::NoHandle)
formatKnown	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    void formatKnown();$/;"	prototype	class:QWaveDecoder	access:public	signature:()
FormatNotSupportedError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        FormatNotSupportedError,$/;"	enumerator	enum:QPlaylistFileParser::ParserError
FormatNotSupportedError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum Error { NoError, FormatError, FormatNotSupportedError, NetworkError, AccessDeniedError };$/;"	enumerator	enum:QMediaPlaylist::Error
Format_AdobeDng	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_AdobeDng,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_ARGB32	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_ARGB32,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_ARGB32_Premultiplied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_ARGB32_Premultiplied,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_ARGB8565_Premultiplied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_ARGB8565_Premultiplied,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_AYUV444	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_AYUV444,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_AYUV444_Premultiplied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_AYUV444_Premultiplied,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_BGR24	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_BGR24,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_BGR32	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_BGR32,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_BGR555	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_BGR555,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_BGR565	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_BGR565,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_BGRA32	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_BGRA32,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_BGRA32_Premultiplied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_BGRA32_Premultiplied,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_BGRA5658_Premultiplied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_BGRA5658_Premultiplied,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_CameraRaw	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_CameraRaw,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_IMC1	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_IMC1,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_IMC2	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_IMC2,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_IMC3	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_IMC3,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_IMC4	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_IMC4,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_Invalid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_Invalid,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_Jpeg	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_Jpeg,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_NV12	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_NV12,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_NV21	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_NV21,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_RGB24	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_RGB24,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_RGB32	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_RGB32,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_RGB555	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_RGB555,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_RGB565	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_RGB565,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_User	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_User = 1000$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_UYVY	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_UYVY,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_Y16	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_Y16,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_Y8	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_Y8,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_YUV420P	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_YUV420P,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_YUV444	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_YUV444,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_YUYV	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_YUYV,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Format_YV12	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_YV12,$/;"	enumerator	enum:QVideoFrame::PixelFormat
frameCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual int frameCount() const = 0;$/;"	prototype	class:QAbstractAudioBuffer	access:public	signature:() const
frameCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    int frameCount() const;$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
FrameFiltered	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^        FrameFiltered = 0x01$/;"	enumerator	enum:QSGVideoNode::FrameFlag
FrameFlag	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    enum FrameFlag {$/;"	enum	class:QSGVideoNode	access:public
frameHeight	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    int frameHeight() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
frameProbed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    void frameProbed();$/;"	prototype	class:QGstreamerVideoProbeControl	access:private	signature:()
frameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    qreal frameRate() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
frameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    qreal frameRate() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
FrameRateRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    struct FrameRateRange$/;"	struct	class:QCamera	access:public
framesForBytes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    qint32 framesForBytes(qint32 byteCount) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(qint32 byteCount) const
framesForDuration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    qint32 framesForDuration(qint64 duration) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(qint64 duration) const
frameSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QSize frameSize() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
frameWidth	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    int frameWidth() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
frequency	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    int frequency() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
frequency	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual int frequency() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
frequencyChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void frequencyChanged(int frequency);$/;"	prototype	class:QRadioTuner	access:public	signature:(int frequency)
frequencyChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void frequencyChanged(int frequency);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(int frequency)
frequencyRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    QPair<int,int> frequencyRange(Band band) const;$/;"	prototype	class:QRadioTuner	access:public	signature:(Band band) const
frequencyRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual QPair<int,int> frequencyRange(QRadioTuner::Band b) const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::Band b) const
frequencyStep	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    int frequencyStep(Band band) const;$/;"	prototype	class:QRadioTuner	access:public	signature:(Band band) const
frequencyStep	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual int frequencyStep(QRadioTuner::Band b) const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::Band b) const
FrontFace	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        FrontFace$/;"	enumerator	enum:QCamera::Position
fullScreenChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    void fullScreenChanged(bool fullScreen);$/;"	prototype	class:QVideoWindowControl	access:public	signature:(bool fullScreen)
GainControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GainControl;$/;"	member	namespace:QMediaMetaData
GameRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        GameRole,$/;"	enumerator	enum:QAudio::Role
generateFileName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    QString generateFileName(const QString &prefix, const QDir &dir, const QString &extension) const;$/;"	prototype	class:QMediaStorageLocation	access:public	signature:(const QString &prefix, const QDir &dir, const QString &extension) const
generateFileName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    QString generateFileName(const QString &requestedName, MediaType type, const QString &prefix, const QString &extension) const;$/;"	prototype	class:QMediaStorageLocation	access:public	signature:(const QString &requestedName, MediaType type, const QString &prefix, const QString &extension) const
Genre	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Genre;$/;"	member	namespace:QMediaMetaData
getCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual GstCaps *getCaps(QAbstractVideoSurface *surface) = 0;$/;"	prototype	class:QGstVideoRenderer	access:public	signature:(QAbstractVideoSurface *surface)
getStreamsInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void getStreamsInfo();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
get_caps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static GstCaps *get_caps(GstBaseSink *sink, GstCaps *filter);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GstBaseSink *sink, GstCaps *filter)
get_caps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static GstCaps *get_caps(GstBaseSink *sink);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GstBaseSink *sink)
get_type	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static GType get_type();$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:()
get_type	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static GType get_type();$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:()
GLTextureHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        GLTextureHandle,$/;"	enumerator	enum:QAbstractVideoBuffer::HandleType
GPSAltitude	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSAltitude;$/;"	member	namespace:QMediaMetaData
GPSAreaInformation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSAreaInformation;$/;"	member	namespace:QMediaMetaData
GPSDOP	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSDOP;$/;"	member	namespace:QMediaMetaData
GPSImgDirection	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSImgDirection;$/;"	member	namespace:QMediaMetaData
GPSImgDirectionRef	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSImgDirectionRef;$/;"	member	namespace:QMediaMetaData
GPSLatitude	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSLatitude;$/;"	member	namespace:QMediaMetaData
GPSLongitude	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSLongitude;$/;"	member	namespace:QMediaMetaData
GPSMapDatum	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSMapDatum;$/;"	member	namespace:QMediaMetaData
GPSProcessingMethod	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSProcessingMethod;$/;"	member	namespace:QMediaMetaData
GPSSatellites	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSSatellites;$/;"	member	namespace:QMediaMetaData
GPSSpeed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSSpeed;$/;"	member	namespace:QMediaMetaData
GPSStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSStatus;$/;"	member	namespace:QMediaMetaData
GPSTimeStamp	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSTimeStamp;$/;"	member	namespace:QMediaMetaData
GPSTrack	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSTrack;$/;"	member	namespace:QMediaMetaData
GPSTrackRef	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSTrackRef;$/;"	member	namespace:QMediaMetaData
GstAutoplugSelectResult	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^} GstAutoplugSelectResult;$/;"	typedef	typeref:enum:__anon2
gstTagListToMap	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QMap<QByteArray, QVariant> gstTagListToMap(const GstTagList *list);$/;"	prototype	namespace:QGstUtils	signature:(const GstTagList *list)
GstVideoConnector	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^typedef struct _GstVideoConnector GstVideoConnector;$/;"	typedef	typeref:struct:_GstVideoConnector
GstVideoConnectorClass	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^typedef struct _GstVideoConnectorClass GstVideoConnectorClass;$/;"	typedef	typeref:struct:_GstVideoConnectorClass
GST_AUTOPLUG_SELECT_EXPOSE	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^  GST_AUTOPLUG_SELECT_EXPOSE,$/;"	enumerator	enum:__anon2
GST_AUTOPLUG_SELECT_SKIP	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^  GST_AUTOPLUG_SELECT_SKIP$/;"	enumerator	enum:__anon2
GST_AUTOPLUG_SELECT_TRY	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^  GST_AUTOPLUG_SELECT_TRY,$/;"	enumerator	enum:__anon2
gst_video_connector_get_type	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^GType Q_GSTTOOLS_EXPORT gst_video_connector_get_type (void);$/;"	prototype	signature:(void)
handle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual QVariant handle() const;$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:() const
handle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QByteArray handle() const;$/;"	prototype	class:QAudioDeviceInfo	access:private	signature:() const
handle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVariant handle() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
handleAutoplugSelect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static GstAutoplugSelectResult handleAutoplugSelect(GstBin *bin, GstPad *pad, GstCaps *caps, GstElementFactory *factory, QGstreamerPlayerSession *session);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GstBin *bin, GstPad *pad, GstCaps *caps, GstElementFactory *factory, QGstreamerPlayerSession *session)
handleAvailabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void handleAvailabilityChanged(bool available);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(bool available)
handleData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void handleData();$/;"	prototype	class:QPlaylistFileParser	access:private	signature:()
handleData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    void handleData();$/;"	prototype	class:QWaveDecoder	access:private	signature:()
handleElementAdded	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static void handleElementAdded(GstBin *bin, GstElement *element, QGstreamerPlayerSession *session);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GstBin *bin, GstElement *element, QGstreamerPlayerSession *session)
handleError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void handleError();$/;"	prototype	class:QPlaylistFileParser	access:private	signature:()
handleEvent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool handleEvent(QMutexLocker *locker);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:(QMutexLocker *locker)
handleFocusWindowChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void handleFocusWindowChanged(QWindow *window);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:private	signature:(QWindow *window)
handleFormatChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void handleFormatChange();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:private	signature:()
handleFormatChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    void handleFormatChange();$/;"	prototype	class:QGstreamerVideoRenderer	access:private	signature:()
handleFrameReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    static void handleFrameReady(gpointer userData);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:private	signature:(gpointer userData)
handleInvalidMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void handleInvalidMedia();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
handleMutedChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static void handleMutedChange(GObject *o, GParamSpec *p, gpointer d);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GObject *o, GParamSpec *p, gpointer d)
handleResourcesDenied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void handleResourcesDenied();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
handleResourcesGranted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void handleResourcesGranted();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
handleResourcesLost	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void handleResourcesLost();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
handleShowPrerollChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static void handleShowPrerollChange(GObject *o, GParamSpec *p, gpointer d);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GObject *o, GParamSpec *p, gpointer d)
handleShowPrerollChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static void handleShowPrerollChange(GObject *o, GParamSpec *p, gpointer d);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GObject *o, GParamSpec *p, gpointer d)
handleStreamsChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static void handleStreamsChange(GstBin *bin, gpointer user_data);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GstBin *bin, gpointer user_data)
handleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    virtual QAbstractVideoBuffer::HandleType handleType() const = 0;$/;"	prototype	class:QGstBufferPoolInterface	access:public	signature:() const
handleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    virtual QAbstractVideoBuffer::HandleType handleType() const = 0;$/;"	prototype	class:QSGVideoNode	access:public	signature:() const
HandleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    enum HandleType$/;"	enum	class:QAbstractVideoBuffer	access:public
handleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    HandleType handleType() const;$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:() const
handleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QAbstractVideoBuffer::HandleType handleType() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
handleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QAbstractVideoBuffer::HandleType handleType() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
handleVolumeChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static void handleVolumeChange(GObject *o, GParamSpec *p, gpointer d);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GObject *o, GParamSpec *p, gpointer d)
hasSupport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QMultimedia::SupportEstimate hasSupport(const QString &mimeType,$/;"	prototype	namespace:QGstUtils	signature:(const QString &mimeType, const QStringList &codecs, const QSet<QString> &supportedMimeTypeSet)
hasSupport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QMultimedia::SupportEstimate hasSupport(const QByteArray &serviceType,$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &serviceType, const QString &mimeType, const QStringList& codecs, int flags = 0) const
hasSupport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    static QMultimedia::SupportEstimate hasSupport(const QString &mimeType, const QStringList& codecs = QStringList());$/;"	prototype	class:QAudioDecoder	access:public	signature:(const QString &mimeType, const QStringList& codecs = QStringList())
hasSupport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    static QMultimedia::SupportEstimate hasSupport(const QString &mimeType,$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QString &mimeType, const QStringList& codecs = QStringList(), Flags flags = Flags())
hasSupport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QMultimedia::SupportEstimate hasSupport(const QString &mimeType, const QStringList& codecs) const = 0;$/;"	prototype	struct:QMediaServiceSupportedFormatsInterface	access:public	signature:(const QString &mimeType, const QStringList& codecs) const
haveFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    bool haveFormat;$/;"	member	class:QWaveDecoder	access:private
height	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    int height() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
HighQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        HighQuality,$/;"	enumerator	enum:QMultimedia::EncodingQuality
hue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    int hue() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
hue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual int hue() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
hueChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void hueChanged(int hue);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int hue)
hueChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    void hueChanged(int hue);$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int hue)
HyperfocalFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        HyperfocalFocus = 0x02,$/;"	enumerator	enum:QCameraFocus::FocusMode
id	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        char        id[4];$/;"	member	struct:QWaveDecoder::chunk	access:public
IdleState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum State { ActiveState, SuspendedState, StoppedState, IdleState, InterruptedState };$/;"	enumerator	enum:QAudio::State
iid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    static QString iid();$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:()
imageAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void imageAvailable(int id, const QVideoFrame &frame);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(int id, const QVideoFrame &frame)
imageAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    void imageAvailable(int requestId, const QVideoFrame &buffer);$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(int requestId, const QVideoFrame &buffer)
ImageCaptured	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        ImageCaptured,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
imageCaptured	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void imageCaptured(int id, const QImage &preview);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(int id, const QImage &preview)
imageCaptured	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    void imageCaptured(int requestId, const QImage &preview);$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(int requestId, const QImage &preview)
imageCodecDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QString imageCodecDescription(const QString &codecName) const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:(const QString &codecName) const
imageCodecDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^    virtual QString imageCodecDescription(const QString &codec) const = 0;$/;"	prototype	class:QImageEncoderControl	access:public	signature:(const QString &codec) const
ImageEncodingSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^        ImageEncodingSettings = 2,$/;"	enumerator	enum:QCameraControl::PropertyChangeType
ImageError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        ImageError,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
imageExposed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void imageExposed(int id);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(int id)
imageExposed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    void imageExposed(int requestId);$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(int requestId)
imageFormatFromPixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    static QImage::Format imageFormatFromPixelFormat(PixelFormat format);$/;"	prototype	class:QVideoFrame	access:public	signature:(PixelFormat format)
imageMetadataAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void imageMetadataAvailable(int id, const QString &key, const QVariant &value);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(int id, const QString &key, const QVariant &value)
imageMetadataAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    void imageMetadataAvailable(int id, const QString &key, const QVariant &value);$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(int id, const QString &key, const QVariant &value)
imageProcessing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraImageProcessing *imageProcessing;$/;"	member	class:QCameraPrivate	access:public
imageProcessing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCameraImageProcessing *imageProcessing() const;$/;"	prototype	class:QCamera	access:public	signature:() const
ImageSaved	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        ImageSaved,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
imageSaved	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void imageSaved(int id, const QString &fileName);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(int id, const QString &fileName)
imageSaved	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    void imageSaved(int requestId, const QString &fileName);$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(int requestId, const QString &fileName)
imageSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^    virtual QImageEncoderSettings imageSettings() const = 0;$/;"	prototype	class:QImageEncoderControl	access:public	signature:() const
IncorrectFormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^        IncorrectFormatError,$/;"	enumerator	enum:QAbstractVideoSurface::Error
Infinite	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^        Infinite = -1$/;"	enumerator	enum:QSound::Loop
Infinite	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^        Infinite = -2$/;"	enumerator	enum:QSoundEffect::Loop
InfinityFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        InfinityFocus = 0x04,$/;"	enumerator	enum:QCameraFocus::FocusMode
infoControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraInfoControl *infoControl;$/;"	member	class:QCameraPrivate	access:public
Information	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum ProgramType { Undefined = 0, News, CurrentAffairs, Information,$/;"	enumerator	enum:QRadioData::ProgramType
init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void init();$/;"	prototype	class:QCameraPrivate	access:public	signature:()
init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual bool init(QMediaService *service) = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:(QMediaService *service)
initControls	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void initControls();$/;"	prototype	class:QCameraPrivate	access:public	signature:()
initializeGst	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT void initializeGst();$/;"	prototype	namespace:QGstUtils	signature:()
InitialState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        InitialState,$/;"	enumerator	enum:QWaveDecoder::State
inputDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    virtual QString inputDescription(const QString& name) const = 0;$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:(const QString& name) const
insertColorSpaceElement	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static void insertColorSpaceElement(GstElement *element, gpointer data);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GstElement *element, gpointer data)
insertMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool insertMedia(int index, const QList<QMediaContent> &content);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int index, const QList<QMediaContent> &content)
insertMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool insertMedia(int index, const QMediaContent &content);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int index, const QMediaContent &content)
insertMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool insertMedia(int index, const QList<QMediaContent> &items);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int index, const QList<QMediaContent> &items)
insertMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool insertMedia(int index, const QMediaContent &content);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int index, const QMediaContent &content)
installMessageFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    void installMessageFilter(QObject *filter);$/;"	prototype	class:QGstreamerBusHelper	access:public	signature:(QObject *filter)
instance	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QObject* instance(QString const &key);$/;"	prototype	class:QMediaPluginLoader	access:public	signature:(QString const &key)
instances	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QList<QObject*> instances(QString const &key);$/;"	prototype	class:QMediaPluginLoader	access:public	signature:(QString const &key)
instance_init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static void instance_init(GTypeInstance *instance, gpointer g_class);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GTypeInstance *instance, gpointer g_class)
instance_init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static void instance_init(GTypeInstance *instance, gpointer g_class);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GTypeInstance *instance, gpointer g_class)
InterlacedFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        InterlacedFrame$/;"	enumerator	enum:QVideoFrame::FieldType
InterruptedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum State { ActiveState, SuspendedState, StoppedState, IdleState, InterruptedState };$/;"	enumerator	enum:QAudio::State
intervals	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QList<QMediaTimeInterval> intervals() const;$/;"	prototype	class:QMediaTimeRange	access:public	signature:() const
Invalid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        Invalid,$/;"	enumerator	enum:QCameraFocusZone::FocusZoneStatus
invalidateSceneGraph	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void invalidateSceneGraph() { }$/;"	function	class:QDeclarativeVideoBackend	access:public	signature:()
invalidMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void invalidMedia();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
InvalidMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        InvalidMedia$/;"	enumerator	enum:QMediaPlayer::MediaStatus
InvalidRequestError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        InvalidRequestError,$/;"	enumerator	enum:QCamera::Error
IOError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Error { NoError, OpenError, IOError, UnderrunError, FatalError };$/;"	enumerator	enum:QAudio::Error
isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    bool isActive() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    bool isActive();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    bool isActive() const;$/;"	prototype	class:QAbstractVideoFilter	access:public	signature:() const
isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    bool isActive() const;$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:() const
isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    bool isActive() const;$/;"	prototype	class:QAudioProbe	access:public	signature:() const
isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    virtual bool isActive(int streamNumber) = 0;$/;"	prototype	class:QMediaStreamsControl	access:public	signature:(int streamNumber)
isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    bool isActive() const;$/;"	prototype	class:QVideoProbe	access:public	signature:() const
isAlternativeFrequenciesEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    bool isAlternativeFrequenciesEnabled() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
isAlternativeFrequenciesEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual bool isAlternativeFrequenciesEnabled() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
isANGLE	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaopenglhelper_p.h	/^    static bool isANGLE();$/;"	prototype	class:QMediaOpenGLHelper	access:public	signature:()
isANGLE	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaopenglhelper_p.h	/^inline bool QMediaOpenGLHelper::isANGLE()$/;"	function	class:QMediaOpenGLHelper	signature:()
isAntennaConnected	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    bool isAntennaConnected() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
isAntennaConnected	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual bool isAntennaConnected() const { return true; }$/;"	function	class:QRadioTunerControl	access:public	signature:() const
isAudioAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool isAudioAvailable() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
isAudioAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    bool isAudioAvailable() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
isAudioAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual bool isAudioAvailable() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
isAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    virtual bool isAvailable() const = 0;$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:() const
isAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    bool isAvailable() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
isAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    bool isAvailable() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
isAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    bool isAvailable() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
isAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    bool isAvailable() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
isAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    virtual bool isAvailable() const;$/;"	prototype	class:QMediaObject	access:public	signature:() const
isAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    bool isAvailable() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
isBandSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    bool isBandSupported(Band b) const;$/;"	prototype	class:QRadioTuner	access:public	signature:(Band b) const
isBandSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual bool isBandSupported(QRadioTuner::Band b) const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::Band b) const
isCached	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    bool isCached(const QUrl& url) const;$/;"	prototype	class:QSampleCache	access:public	signature:(const QUrl& url) const
isCaptureDestinationSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturedestinationcontrol.h	/^    virtual bool isCaptureDestinationSupported(QCameraImageCapture::CaptureDestinations destination) const = 0;$/;"	prototype	class:QCameraCaptureDestinationControl	access:public	signature:(QCameraImageCapture::CaptureDestinations destination) const
isCaptureDestinationSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    bool isCaptureDestinationSupported(CaptureDestinations destination) const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:(CaptureDestinations destination) const
isCaptureModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    bool isCaptureModeSupported(CaptureModes mode) const;$/;"	prototype	class:QCamera	access:public	signature:(CaptureModes mode) const
isCaptureModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    virtual bool isCaptureModeSupported(QCamera::CaptureModes mode) const = 0;$/;"	prototype	class:QCameraControl	access:public	signature:(QCamera::CaptureModes mode) const
isColorFilterSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    bool isColorFilterSupported(ColorFilter filter) const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(ColorFilter filter) const
isContinuous	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    bool isContinuous() const;$/;"	prototype	class:QMediaTimeRange	access:public	signature:() const
isCrossfadeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    virtual bool isCrossfadeSupported() const = 0;$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:() const
isEmpty	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool isEmpty() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
isEmpty	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    bool isEmpty() const;$/;"	prototype	class:QMediaTimeRange	access:public	signature:() const
isEventFeedbackEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    virtual bool isEventFeedbackEnabled(EventType) const = 0;$/;"	prototype	class:QCameraFeedbackControl	access:public	signature:(EventType) const
isEventFeedbackLocked	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    virtual bool isEventFeedbackLocked(EventType) const = 0;$/;"	prototype	class:QCameraFeedbackControl	access:public	signature:(EventType) const
isExposureModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    bool isExposureModeSupported(ExposureMode mode) const;$/;"	prototype	class:QCameraExposure	access:public	signature:(ExposureMode mode) const
isFinished	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    bool isFinished() const;$/;"	prototype	class:QSound	access:public	signature:() const
isFlashModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    bool isFlashModeSupported(FlashModes mode) const;$/;"	prototype	class:QCameraExposure	access:public	signature:(FlashModes mode) const
isFlashModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^    virtual bool isFlashModeSupported(QCameraExposure::FlashModes mode) const = 0;$/;"	prototype	class:QCameraFlashControl	access:public	signature:(QCameraExposure::FlashModes mode) const
isFlashReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    bool isFlashReady() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
isFlashReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^    virtual bool isFlashReady() const = 0;$/;"	prototype	class:QCameraFlashControl	access:public	signature:() const
isFocusModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    bool isFocusModeSupported(FocusModes mode) const;$/;"	prototype	class:QCameraFocus	access:public	signature:(FocusModes mode) const
isFocusModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual bool isFocusModeSupported(QCameraFocus::FocusModes mode) const = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:(QCameraFocus::FocusModes mode) const
isFocusPointModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    bool isFocusPointModeSupported(FocusPointMode) const;$/;"	prototype	class:QCameraFocus	access:public	signature:(FocusPointMode) const
isFocusPointModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual bool isFocusPointModeSupported(QCameraFocus::FocusPointMode mode) const = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:(QCameraFocus::FocusPointMode mode) const
isFormatSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    virtual bool isFormatSupported(const QVideoSurfaceFormat &format) const = 0;$/;"	prototype	class:QGstBufferPoolInterface	access:public	signature:(const QVideoSurfaceFormat &format) const
isFormatSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    virtual bool isFormatSupported(const QVideoSurfaceFormat &format) const;$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(const QVideoSurfaceFormat &format) const
isFormatSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    bool isFormatSupported(const QAudioFormat &format) const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:(const QAudioFormat &format) const
isFormatSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual bool isFormatSupported(const QAudioFormat &format) const = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:(const QAudioFormat &format) const
isFullScreen	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual bool isFullScreen() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
isGranted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    virtual bool isGranted() const = 0;$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:() const
isLiveSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool isLiveSource() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
isLoaded	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool isLoaded() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
isLoaded	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    bool isLoaded() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
isLoaded	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    bool isLoaded() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
isLoading	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    bool isLoading() const;$/;"	prototype	class:QSampleCache	access:public	signature:() const
isLoadingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void isLoadingChanged();$/;"	prototype	class:QSampleCache	access:public	signature:()
isMapped	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    bool isMapped() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
isMetaDataAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    bool isMetaDataAvailable() const;$/;"	prototype	class:QMediaObject	access:public	signature:() const
isMetaDataAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    bool isMetaDataAvailable() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
isMetaDataAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    virtual bool isMetaDataAvailable() const = 0;$/;"	prototype	class:QMetaDataReaderControl	access:public	signature:() const
isMetaDataAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    virtual bool isMetaDataAvailable() const = 0;$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:() const
isMetaDataWritable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    bool isMetaDataWritable() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
isMeteringModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    bool isMeteringModeSupported(MeteringMode mode) const;$/;"	prototype	class:QCameraExposure	access:public	signature:(MeteringMode mode) const
isMirrored	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    bool isMirrored() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool isMuted() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool isMuted() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    bool isMuted() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    bool isMuted() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual bool isMuted() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    bool isMuted() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual bool isMuted() const = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:() const
isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    bool isMuted() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual bool isMuted() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    bool isMuted() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
isNormal	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    bool isNormal() const;$/;"	prototype	class:QMediaTimeInterval	access:public	signature:() const
isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    bool isNull() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    bool isNull() const;$/;"	prototype	class:QCameraInfo	access:public	signature:() const
isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    bool isNull() const;$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:() const
isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    bool isNull() const;$/;"	prototype	class:QMediaContent	access:public	signature:() const
isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool isNull() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool isNull() const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:() const
isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool isNull() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    bool isNull() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    bool isNull() const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:() const
ISO	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        ISO,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
isoSensitivity	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    int isoSensitivity() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
isoSensitivityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void isoSensitivityChanged(int);$/;"	prototype	class:QCameraExposure	access:public	signature:(int)
ISOSpeedRatings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ISOSpeedRatings;$/;"	member	namespace:QMediaMetaData
isParameterSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    virtual bool isParameterSupported(ExposureParameter parameter) const = 0;$/;"	prototype	class:QCameraExposureControl	access:public	signature:(ExposureParameter parameter) const
isParameterSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^    virtual bool isParameterSupported(ProcessingParameter) const = 0;$/;"	prototype	class:QCameraImageProcessingControl	access:public	signature:(ProcessingParameter) const
isParameterValueSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^    virtual bool isParameterValueSupported(ProcessingParameter parameter, const QVariant &value) const = 0;$/;"	prototype	class:QCameraImageProcessingControl	access:public	signature:(ProcessingParameter parameter, const QVariant &value) const
isPlaying	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool isPlaying() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
isPlaying	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    bool isPlaying() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
isPlaying	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    bool isPlaying() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
isReadable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    bool isReadable() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
isReadOnly	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool isReadOnly() const;$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:() const
isReadOnly	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool isReadOnly() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
isReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    bool isReady() const { return m_surface != 0; }$/;"	function	class:QGstreamerMirTextureRenderer	access:public	signature:() const
isReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorendererinterface_p.h	/^    virtual bool isReady() const { return true; }$/;"	function	class:QGstreamerVideoRendererInterface	access:public	signature:() const
isReadyForCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    bool isReadyForCapture() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
isReadyForCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    virtual bool isReadyForCapture() const = 0;$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:() const
isSearching	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    bool isSearching() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
isSearching	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual bool isSearching() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
isSeekable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool isSeekable() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
isSeekable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    bool isSeekable() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
isSeekable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual bool isSeekable() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
isStereo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    bool isStereo() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
isStereo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual bool isStereo() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
isStreamValid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool isStreamValid() const$/;"	function	class:QGstAppSrc	access:public	signature:() const
isValid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    bool isValid() const;$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
isValid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    bool isValid() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
isValid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    bool isValid() const;$/;"	prototype	class:QCameraFocusZone	access:public	signature:() const
isValid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    bool isValid() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
isValid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    bool isValid() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
isVideoAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool isVideoAvailable() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
isVideoAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    bool isVideoAvailable() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
isVideoAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual bool isVideoAvailable() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
isVideoEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    virtual bool isVideoEnabled() const = 0;$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:() const
isViewfinderParameterSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    virtual bool isViewfinderParameterSupported(ViewfinderParameter parameter) const = 0;$/;"	prototype	class:QCameraViewfinderSettingsControl	access:public	signature:(ViewfinderParameter parameter) const
isWhiteBalanceModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    bool isWhiteBalanceModeSupported(WhiteBalanceMode mode) const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(WhiteBalanceMode mode) const
isWritable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    virtual bool isWritable() const = 0;$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:() const
isWritable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    bool isWritable() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
itemAt	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaContent itemAt(int position) const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(int position) const
itemChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void itemChange(QQuickItem::ItemChange change,$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:(QQuickItem::ItemChange change, const QQuickItem::ItemChangeData &changeData)
JazzMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PhoneIn, Travel, Leisure, JazzMusic, CountryMusic,$/;"	enumerator	enum:QRadioData::ProgramType
jump	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void jump(int);$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(int)
junkToSkip	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    quint32 junkToSkip;$/;"	member	class:QWaveDecoder	access:private
keys	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QStringList keys() const;$/;"	prototype	class:QMediaPluginLoader	access:public	signature:() const
Keywords	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Keywords;$/;"	member	namespace:QMediaMetaData
Language	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Language;$/;"	member	namespace:QMediaMetaData
Language	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        Language,$/;"	enumerator	enum:QMediaResource::Property
language	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QString language() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
Language	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        RhythmAndBlues, SoftRhythmAndBlues, Language,$/;"	enumerator	enum:QRadioData::ProgramType
LastInChain	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^        LastInChain = 0x01$/;"	enumerator	enum:QVideoFilterRunnable::RunFlag
latestTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    qint64 latestTime() const;$/;"	prototype	class:QMediaTimeRange	access:public	signature:() const
latest_buffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  GstBuffer *latest_buffer;$/;"	member	struct:_GstVideoConnector	access:public
LeadPerformer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString LeadPerformer;$/;"	member	namespace:QMediaMetaData
left	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^        T left;$/;"	member	struct:QAudioBuffer::StereoFrame	access:public
Leisure	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PhoneIn, Travel, Leisure, JazzMusic, CountryMusic,$/;"	enumerator	enum:QRadioData::ProgramType
LightClassical	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PopMusic, RockMusic, EasyListening, LightClassical,$/;"	enumerator	enum:QRadioData::ProgramType
LightSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString LightSource;$/;"	member	namespace:QMediaMetaData
LinearVolumeScale	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        LinearVolumeScale,$/;"	enumerator	enum:QAudio::VolumeScale
LittleEndian	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum Endian { BigEndian = QSysInfo::BigEndian, LittleEndian = QSysInfo::LittleEndian };$/;"	enumerator	enum:QAudioFormat::Endian
load	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool load(const QNetworkRequest &request, const char *format = 0);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(const QNetworkRequest &request, const char *format = 0)
load	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool load(QIODevice * device, const char *format = 0);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(QIODevice * device, const char *format = 0)
load	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void load();$/;"	prototype	class:QSample	access:private	signature:()
load	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void load();$/;"	prototype	class:QCamera	access:public	signature:()
load	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void load(const QNetworkRequest &request, const char *format = nullptr);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(const QNetworkRequest &request, const char *format = nullptr)
load	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void load(const QUrl &location, const char *format = nullptr);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(const QUrl &location, const char *format = nullptr)
load	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void load(QIODevice *device, const char *format = nullptr);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(QIODevice *device, const char *format = nullptr)
loaded	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    void loaded();$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:()
loaded	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void loaded();$/;"	prototype	class:QMediaPlaylist	access:public	signature:()
loadedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void loadedChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
loadedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void loadedChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
loadedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void loadedChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
LoadedMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        LoadedMedia,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
LoadedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LoadedState,$/;"	enumerator	enum:QCamera::State
LoadedStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LoadedStatus,$/;"	enumerator	enum:QCamera::Status
LoadedStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        LoadedStatus,$/;"	enumerator	enum:QMediaRecorder::Status
loadFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    void loadFailed(QMediaPlaylist::Error, const QString& errorMessage);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(QMediaPlaylist::Error, const QString& errorMessage)
loadFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void loadFailed();$/;"	prototype	class:QMediaPlaylist	access:public	signature:()
loadFromStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void loadFromStream(const QNetworkRequest &url, QIODevice *stream);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(const QNetworkRequest &url, QIODevice *stream)
loadFromUri	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void loadFromUri(const QNetworkRequest &url);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(const QNetworkRequest &url)
loadIfNecessary	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void loadIfNecessary();$/;"	prototype	class:QSample	access:private	signature:()
Loading	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^        Loading,$/;"	enumerator	enum:QSample::State
Loading	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^        Loading,$/;"	enumerator	enum:QSoundEffect::Status
LoadingMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        LoadingMedia,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
loadingRelease	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void loadingRelease();$/;"	prototype	class:QSampleCache	access:private	signature:()
LoadingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LoadingStatus,$/;"	enumerator	enum:QCamera::Status
LoadingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        LoadingStatus,$/;"	enumerator	enum:QMediaRecorder::Status
loadMetadata	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    void loadMetadata();$/;"	prototype	class:QMediaPluginLoader	access:private	signature:()
LockAcquired	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LockAcquired,$/;"	enumerator	enum:QCamera::LockChangeReason
lockChangeReason	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCamera::LockChangeReason lockChangeReason;$/;"	member	class:QCameraPrivate	access:public
LockChangeReason	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum LockChangeReason {$/;"	enum	class:QCamera	access:public
Locked	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        Locked$/;"	enumerator	enum:QCamera::LockStatus
locked	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void locked();$/;"	prototype	class:QCamera	access:public	signature:()
LockExposure	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LockExposure = 0x01,$/;"	enumerator	enum:QCamera::LockType
LockFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LockFailed,$/;"	enumerator	enum:QCamera::LockChangeReason
lockFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void lockFailed();$/;"	prototype	class:QCamera	access:public	signature:()
LockFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LockFocus = 0x04$/;"	enumerator	enum:QCamera::LockType
LockLost	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LockLost,$/;"	enumerator	enum:QCamera::LockChangeReason
locksControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraLocksControl *locksControl;$/;"	member	class:QCameraPrivate	access:public
lockStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCamera::LockStatus lockStatus;$/;"	member	class:QCameraPrivate	access:public
LockStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum LockStatus$/;"	enum	class:QCamera	access:public
lockStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCamera::LockStatus lockStatus() const;$/;"	prototype	class:QCamera	access:public	signature:() const
lockStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCamera::LockStatus lockStatus(QCamera::LockType lock) const;$/;"	prototype	class:QCamera	access:public	signature:(QCamera::LockType lock) const
lockStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^    virtual QCamera::LockStatus lockStatus(QCamera::LockType lock) const = 0;$/;"	prototype	class:QCameraLocksControl	access:public	signature:(QCamera::LockType lock) const
lockStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void lockStatusChanged(QCamera::LockStatus status, QCamera::LockChangeReason reason);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::LockStatus status, QCamera::LockChangeReason reason)
lockStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void lockStatusChanged(QCamera::LockType lock, QCamera::LockStatus status, QCamera::LockChangeReason reason);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::LockType lock, QCamera::LockStatus status, QCamera::LockChangeReason reason)
lockStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^    void lockStatusChanged(QCamera::LockType type, QCamera::LockStatus status, QCamera::LockChangeReason reason);$/;"	prototype	class:QCameraLocksControl	access:public	signature:(QCamera::LockType type, QCamera::LockStatus status, QCamera::LockChangeReason reason)
LockTemporaryLost	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LockTemporaryLost$/;"	enumerator	enum:QCamera::LockChangeReason
LockType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum LockType$/;"	enum	class:QCamera	access:public
LockWhiteBalance	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LockWhiteBalance = 0x02,$/;"	enumerator	enum:QCamera::LockType
LogarithmicVolumeScale	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        LogarithmicVolumeScale,$/;"	enumerator	enum:QAudio::VolumeScale
Loop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum PlaybackMode { CurrentItemOnce, CurrentItemInLoop, Sequential, Loop, Random };$/;"	enumerator	enum:QMediaPlaylist::PlaybackMode
Loop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    enum Loop$/;"	enum	class:QSound	access:public
Loop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    enum Loop$/;"	enum	class:QSoundEffect	access:public
loopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int loopCount() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
loopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    int loopCount() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
loopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    int loopCount() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
loopCountChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void loopCountChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
loops	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    int loops() const;$/;"	prototype	class:QSound	access:public	signature:() const
loopsRemaining	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int loopsRemaining() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
loopsRemaining	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    int loopsRemaining() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
loopsRemaining	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    int loopsRemaining() const;$/;"	prototype	class:QSound	access:public	signature:() const
loopsRemaining	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    int loopsRemaining() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
loopsRemainingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void loopsRemainingChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
loopsRemainingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void loopsRemainingChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
loopsRemainingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void loopsRemainingChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
LowLatency	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        LowLatency = 0x01,$/;"	enumerator	enum:QMediaPlayer::Flag
LowLatencyPlayback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^        LowLatencyPlayback = 0x01,$/;"	enumerator	enum:QMediaServiceProviderHint::Feature
LowQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        LowQuality,$/;"	enumerator	enum:QMultimedia::EncodingQuality
LW	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Band { AM, FM, SW, LW, FM2 };$/;"	enumerator	enum:QRadioTuner::Band
Lyrics	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Lyrics;$/;"	member	namespace:QMediaMetaData
M3U	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        M3U,$/;"	enumerator	enum:QPlaylistFileParser::FileType
M3U8	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        M3U8, \/\/ UTF-8 version of M3U$/;"	enumerator	enum:QPlaylistFileParser::FileType
MacroFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        MacroFocus = 0x20$/;"	enumerator	enum:QCameraFocus::FocusMode
ManualFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        ManualFocus = 0x1,$/;"	enumerator	enum:QCameraFocus::FocusMode
manualWhiteBalance	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    qreal manualWhiteBalance() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
map	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qabstractvideobuffer_p.h	/^    virtual int map($/;"	prototype	class:QAbstractVideoBufferPrivate	access:public	signature:( QAbstractVideoBuffer::MapMode mode, int *numBytes, int bytesPerLine[4], uchar *data[4])
map	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual int map(MapMode mode, int *numBytes, int bytesPerLine[4], uchar *data[4]) = 0;$/;"	prototype	class:QAbstractPlanarVideoBuffer	access:public	signature:(MapMode mode, int *numBytes, int bytesPerLine[4], uchar *data[4])
map	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual uchar *map(MapMode mode, int *numBytes, int *bytesPerLine) = 0;$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:(MapMode mode, int *numBytes, int *bytesPerLine)
map	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    bool map(QAbstractVideoBuffer::MapMode mode);$/;"	prototype	class:QVideoFrame	access:public	signature:(QAbstractVideoBuffer::MapMode mode)
MapMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    enum MapMode$/;"	enum	class:QAbstractVideoBuffer	access:public
mapMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual MapMode mapMode() const = 0;$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:() const
mapMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QAbstractVideoBuffer::MapMode mapMode() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
mapNormalizedPointToItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QPointF mapNormalizedPointToItem(const QPointF &point) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QPointF &point) const
mapNormalizedRectToItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QRectF mapNormalizedRectToItem(const QRectF &rectangle) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QRectF &rectangle) const
mappedBytes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    int mappedBytes() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
mapPlanes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    int mapPlanes(MapMode mode, int *numBytes, int bytesPerLine[4], uchar *data[4]);$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:(MapMode mode, int *numBytes, int bytesPerLine[4], uchar *data[4])
mapPointToItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QPointF mapPointToItem(const QPointF &point) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QPointF &point) const
mapPointToSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QPointF mapPointToSource(const QPointF &point) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QPointF &point) const
mapPointToSourceNormalized	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QPointF mapPointToSourceNormalized(const QPointF &point) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QPointF &point) const
mapRectToItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QRectF mapRectToItem(const QRectF &rectangle) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QRectF &rectangle) const
mapRectToSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QRectF mapRectToSource(const QRectF &rectangle) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QRectF &rectangle) const
mapRectToSourceNormalized	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QRectF mapRectToSourceNormalized(const QRectF &rectangle) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QRectF &rectangle) const
maximumDigitalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    qreal maximumDigitalZoom() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
maximumDigitalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    virtual qreal maximumDigitalZoom() const = 0;$/;"	prototype	class:QCameraZoomControl	access:public	signature:() const
maximumDigitalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void maximumDigitalZoomChanged(qreal);$/;"	prototype	class:QCameraFocus	access:public	signature:(qreal)
maximumDigitalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    void maximumDigitalZoomChanged(qreal);$/;"	prototype	class:QCameraZoomControl	access:public	signature:(qreal)
maximumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^            , maximumFrameRate(maximum)$/;"	function	struct:QCamera::FrameRateRange	access:public	signature:(maximum)
maximumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        qreal maximumFrameRate;$/;"	member	struct:QCamera::FrameRateRange	access:public
maximumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    qreal maximumFrameRate() const;$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:() const
MaximumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^        MaximumFrameRate,$/;"	enumerator	enum:QCameraViewfinderSettingsControl::ViewfinderParameter
maximumOpticalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    qreal maximumOpticalZoom() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
maximumOpticalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    virtual qreal maximumOpticalZoom() const = 0;$/;"	prototype	class:QCameraZoomControl	access:public	signature:() const
maximumOpticalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void maximumOpticalZoomChanged(qreal);$/;"	prototype	class:QCameraFocus	access:public	signature:(qreal)
maximumOpticalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    void maximumOpticalZoomChanged(qreal);$/;"	prototype	class:QCameraZoomControl	access:public	signature:(qreal)
MaybeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        MaybeSupported,$/;"	enumerator	enum:QMultimedia::SupportEstimate
media	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual QMediaContent media(int index) const = 0;$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int index) const
media	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QMediaContent media() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
media	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual QMediaContent media() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
media	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    QMediaContent media(int index) const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int index) const
mediaAboutToBeInserted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    void mediaAboutToBeInserted(int start, int end);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int start, int end)
mediaAboutToBeInserted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void mediaAboutToBeInserted(int start, int end);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int start, int end)
mediaAboutToBeRemoved	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    void mediaAboutToBeRemoved(int start, int end);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int start, int end)
mediaAboutToBeRemoved	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void mediaAboutToBeRemoved(int start, int end);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int start, int end)
mediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    void mediaChanged(int start, int end);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int start, int end)
mediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void mediaChanged(const QMediaContent &media);$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QMediaContent &media)
mediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void mediaChanged(const QMediaContent& content);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(const QMediaContent& content)
mediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void mediaChanged(int start, int end);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int start, int end)
mediaCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual int mediaCount() const = 0;$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:() const
mediaCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    int mediaCount() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
mediaInserted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    void mediaInserted(int start, int end);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int start, int end)
mediaInserted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void mediaInserted(int start, int end);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int start, int end)
MediaIsPlaylist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        MediaIsPlaylist$/;"	enumerator	enum:QMediaPlayer::Error
mediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaObject *mediaObject;$/;"	member	class:QMediaPlaylistPrivate	access:public
mediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaObject *mediaObject;$/;"	member	class:QMediaRecorderPrivate	access:public
mediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediabindableinterface.h	/^    virtual QMediaObject *mediaObject() const = 0;$/;"	prototype	class:QMediaBindableInterface	access:public	signature:() const
MediaObjectSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^        MediaObjectSource,$/;"	enumerator	enum:QDeclarativeVideoOutput::SourceType
mediaRemoved	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    void mediaRemoved(int start, int end);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int start, int end)
mediaRemoved	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void mediaRemoved(int start, int end);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int start, int end)
MediaStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    enum MediaStatus$/;"	enum	class:QMediaPlayer	access:public
mediaStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    MediaStatus mediaStatus() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
mediaStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual QMediaPlayer::MediaStatus mediaStatus() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
mediaStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void mediaStatusChanged(QMediaPlayer::MediaStatus status);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QMediaPlayer::MediaStatus status)
mediaStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void mediaStatusChanged(QMediaPlayer::MediaStatus status);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(QMediaPlayer::MediaStatus status)
mediaStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    const QIODevice *mediaStream() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
mediaStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual const QIODevice *mediaStream() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
MediaType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    enum MediaType {$/;"	enum	class:QMediaStorageLocation	access:public
MediaType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString MediaType;$/;"	member	namespace:QMediaMetaData
message	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    void message(QGstreamerMessage const& message);$/;"	prototype	class:QGstreamerBusHelper	access:public	signature:(QGstreamerMessage const& message)
metaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    QVariant metaData(const QString &key) const;$/;"	prototype	class:QMediaObject	access:public	signature:(const QString &key) const
metaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QVariant metaData(const QString &key) const;$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QString &key) const
metaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    virtual QVariant metaData(int streamNumber, const QString &key) = 0;$/;"	prototype	class:QMediaStreamsControl	access:public	signature:(int streamNumber, const QString &key)
metaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    virtual QVariant metaData(const QString &key) const = 0;$/;"	prototype	class:QMetaDataReaderControl	access:public	signature:(const QString &key) const
metaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    virtual QVariant metaData(const QString &key) const = 0;$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:(const QString &key) const
metaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVariant metaData(const QString &key) const;$/;"	prototype	class:QVideoFrame	access:public	signature:(const QString &key) const
metaDataAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void metaDataAvailableChanged(bool available);$/;"	prototype	class:QMediaObject	access:public	signature:(bool available)
metaDataAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void metaDataAvailableChanged(bool available);$/;"	prototype	class:QMediaRecorder	access:public	signature:(bool available)
metaDataAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    void metaDataAvailableChanged(bool available);$/;"	prototype	class:QMetaDataReaderControl	access:public	signature:(bool available)
metaDataAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    void metaDataAvailableChanged(bool available);$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:(bool available)
metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void metaDataChanged();$/;"	prototype	class:QMediaObject	access:public	signature:()
metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void metaDataChanged(const QString &key, const QVariant &value);$/;"	prototype	class:QMediaObject	access:public	signature:(const QString &key, const QVariant &value)
metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void metaDataChanged();$/;"	prototype	class:QMediaRecorder	access:public	signature:()
metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void metaDataChanged(const QString &key, const QVariant &value);$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QString &key, const QVariant &value)
metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    void metaDataChanged();$/;"	prototype	class:QMetaDataReaderControl	access:public	signature:()
metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    void metaDataChanged(const QString &key, const QVariant &value);$/;"	prototype	class:QMetaDataReaderControl	access:public	signature:(const QString &key, const QVariant &value)
metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    void metaDataChanged();$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:()
metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    void metaDataChanged(const QString &key, const QVariant &value);$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:(const QString &key, const QVariant &value)
metaDataControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    QMetaDataReaderControl *metaDataControl;$/;"	member	class:QMediaObjectPrivate	access:public
metaDataControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMetaDataWriterControl *metaDataControl;$/;"	member	class:QMediaRecorderPrivate	access:public
metaDataWritableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void metaDataWritableChanged(bool writable);$/;"	prototype	class:QMediaRecorder	access:public	signature:(bool writable)
MeteringAverage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        MeteringAverage = 2,$/;"	enumerator	enum:QCameraExposure::MeteringMode
MeteringMatrix	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        MeteringMatrix = 1,$/;"	enumerator	enum:QCameraExposure::MeteringMode
MeteringMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    enum MeteringMode {$/;"	enum	class:QCameraExposure	access:public
meteringMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    MeteringMode meteringMode() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
MeteringMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        MeteringMode,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
MeteringMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString MeteringMode;$/;"	member	namespace:QMediaMetaData
MeteringSpot	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        MeteringSpot = 3$/;"	enumerator	enum:QCameraExposure::MeteringMode
MimeType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        MimeType,$/;"	enumerator	enum:QMediaResource::Property
mimeType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QString mimeType() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
mimeType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QString mimeType() const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:() const
minimumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        qreal minimumFrameRate;$/;"	member	struct:QCamera::FrameRateRange	access:public
minimumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    qreal minimumFrameRate() const;$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:() const
MinimumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^        MinimumFrameRate,$/;"	enumerator	enum:QCameraViewfinderSettingsControl::ViewfinderParameter
MMSSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^        MMSSrc,$/;"	enumerator	enum:QGstreamerPlayerSession::SourceType
Mode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Mode { AudioInput, AudioOutput };$/;"	enum	namespace:QAudio
mode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QAudio::Mode mode() const;$/;"	prototype	class:QAudioDeviceInfo	access:private	signature:() const
Mood	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Mood;$/;"	member	namespace:QMediaMetaData
moveMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool moveMedia(int from, int to);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int from, int to)
moveMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool moveMedia(int from, int to);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int from, int to)
Movies	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^        Movies,$/;"	enumerator	enum:QMediaStorageLocation::MediaType
Music	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^        Music,$/;"	enumerator	enum:QMediaStorageLocation::MediaType
MusicRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        MusicRole,$/;"	enumerator	enum:QAudio::Role
mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void mutedChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void mutedChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void mutedChanged(bool muted);$/;"	prototype	class:QMediaPlayer	access:public	signature:(bool muted)
mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void mutedChanged(bool mute);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(bool mute)
mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void mutedChanged(bool muted);$/;"	prototype	class:QMediaRecorder	access:public	signature:(bool muted)
mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    void mutedChanged(bool muted);$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(bool muted)
mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void mutedChanged(bool muted);$/;"	prototype	class:QRadioTuner	access:public	signature:(bool muted)
mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void mutedChanged(bool muted);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(bool muted)
mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void mutedChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
mutedStateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void mutedStateChanged(bool muted);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(bool muted)
Muxer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    enum ElementType { AudioEncoder, VideoEncoder, Muxer };$/;"	enumerator	enum:QGstCodecsInfo::ElementType
m_activeRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QGstVideoRenderer *m_activeRenderer;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_appSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    GstAppSrc *m_appSrc;$/;"	member	class:QGstAppSrc	access:private
m_appSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstAppSrc *m_appSrc;$/;"	member	class:QGstreamerPlayerSession	access:private
m_audioAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_audioAvailable;$/;"	member	class:QGstreamerPlayerSession	access:private
m_audioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QAudioFormat m_audioFormat;$/;"	member	class:QSample	access:private
m_audioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QString     m_audioInput;$/;"	member	class:QGstreamerAudioInputSelector	access:private
m_audioOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QAudioOutput *m_audioOutput = nullptr;$/;"	member	class:PrivateSoundSource	access:private
m_audioProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstreamerAudioProbeControl *m_audioProbe;$/;"	member	class:QGstreamerPlayerSession	access:private
m_audioSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_audioSink;$/;"	member	class:QGstreamerPlayerSession	access:private
m_autoOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    bool m_autoOrientation;$/;"	member	class:QDeclarativeVideoOutput	access:private
m_backend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QScopedPointer<QDeclarativeVideoBackend> m_backend;$/;"	member	class:QDeclarativeVideoOutput	access:private
m_buffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    GstBuffer *m_buffer;$/;"	member	class:QGstVideoBuffer	access:private
m_bufferMutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    QMutex m_bufferMutex;$/;"	member	class:QGstreamerAudioProbeControl	access:private
m_bufferProbeId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    int m_bufferProbeId;$/;"	member	class:QGstreamerBufferProbe	access:private
m_bufferProgress	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    int m_bufferProgress;$/;"	member	class:QGstreamerPlayerControl	access:private
m_bus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstBus* m_bus;$/;"	member	class:QGstreamerPlayerSession	access:private
m_busHelper	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstreamerBusHelper* m_busHelper;$/;"	member	class:QGstreamerPlayerSession	access:private
m_bytesPerLine	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    int m_bytesPerLine;$/;"	member	class:QGstreamerVideoProbeControl	access:private
m_bytesPerLine	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    int m_bytesPerLine;$/;"	member	class:QGstVideoBuffer	access:private
m_bytesPerLine	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    int m_bytesPerLine;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_callbacks	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    GstAppSrcCallbacks m_callbacks;$/;"	member	class:QGstAppSrc	access:private
m_cameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QCameraInfo m_cameraInfo;$/;"	member	class:QDeclarativeVideoOutput	access:private
m_capacity	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    qint64 m_capacity;$/;"	member	class:QSampleCache	access:private
m_caps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    GstCaps *m_caps;$/;"	member	class:QGstreamerBufferProbe	access:private
m_capsProbeId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    int m_capsProbeId;$/;"	member	class:QGstreamerBufferProbe	access:private
m_category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QString m_category;$/;"	member	class:QSoundEffectPrivate	access:private
m_category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QString m_category;$/;"	member	class:PrivateSoundSource	access:private
m_codecInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    QMap<QString, CodecInfo> m_codecInfo;$/;"	member	class:QGstCodecsInfo	access:private
m_codecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    QStringList m_codecs;$/;"	member	class:QGstCodecsInfo	access:private
m_colorKey	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    mutable QColor m_colorKey;$/;"	member	class:QGstreamerVideoWindow	access:private
m_colorSpace	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_colorSpace;$/;"	member	class:QGstreamerPlayerSession	access:private
m_contentRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QRectF m_contentRect;   \/\/ Destination pixel coordinates, unclipped$/;"	member	class:QDeclarativeVideoOutput	access:private
m_context	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QGLContext *m_context;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
m_control	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    QPointer<QVideoRendererControl> m_control;$/;"	member	class:QVideoSurfaceOutput	access:private
m_currentOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideooutputorientationhandler_p.h	/^    int m_currentOrientation;$/;"	member	class:QVideoOutputOrientationHandler	access:private
m_currentResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaContent m_currentResource;$/;"	member	class:QGstreamerPlayerControl	access:private
m_currentState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaPlayer::State m_currentState;$/;"	member	class:QGstreamerPlayerControl	access:private
m_customLocations	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    QMap<MediaType, QStringList> m_customLocations;$/;"	member	class:QMediaStorageLocation	access:private
m_dataRequested	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool m_dataRequested;$/;"	member	class:QGstAppSrc	access:private
m_dataRequestSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    unsigned int m_dataRequestSize;$/;"	member	class:QGstAppSrc	access:private
m_descriptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QList<QString> m_descriptions;$/;"	member	class:QGstreamerAudioInputSelector	access:private
m_displayPrerolledFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_displayPrerolledFrame;$/;"	member	class:QGstreamerPlayerSession	access:private
m_displayRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    QRect m_displayRect;$/;"	member	class:QGstreamerVideoWindow	access:private
m_duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    qint64 m_duration;$/;"	member	class:QGstreamerPlayerSession	access:private
m_durationQueries	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    int m_durationQueries;$/;"	member	class:QGstreamerPlayerSession	access:private
m_emptying	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_emptying = false;$/;"	member	class:QSoundEffectPrivate	access:private
m_enoughData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool m_enoughData;$/;"	member	class:QGstAppSrc	access:private
m_everPlayed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_everPlayed;$/;"	member	class:QGstreamerPlayerSession	access:private
m_factory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    GstElementFactory *m_factory;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:private
m_factoryLoader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QFactoryLoader *m_factoryLoader;$/;"	member	class:QMediaPluginLoader	access:private
m_fillMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    FillMode m_fillMode;$/;"	member	class:QDeclarativeVideoOutput	access:private
m_filters	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QList<QAbstractVideoFilter *> m_filters;$/;"	member	class:QDeclarativeVideoOutput	access:private
m_flags	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    const Flags m_flags;$/;"	member	class:QGstreamerBufferProbe	access:private
m_flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool m_flush;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_flushed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool m_flushed;$/;"	member	class:QGstDefaultVideoRenderer	access:private
m_flushing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    bool m_flushing;$/;"	member	class:QGstreamerVideoProbeControl	access:private
m_forceData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool m_forceData;$/;"	member	class:QGstAppSrc	access:private
m_format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    QAudioFormat m_format;$/;"	member	class:QGstreamerAudioProbeControl	access:private
m_format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    QVideoSurfaceFormat m_format;$/;"	member	class:QGstreamerVideoProbeControl	access:private
m_format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QVideoSurfaceFormat m_format;$/;"	member	class:QGstDefaultVideoRenderer	access:private
m_format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QVideoSurfaceFormat m_format;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_frame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    GstVideoFrame m_frame;$/;"	member	class:QGstVideoBuffer	access:private
m_frame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QVideoFrame m_frame;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_frameMutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    QMutex m_frameMutex;$/;"	member	class:QGstreamerVideoProbeControl	access:private
m_frameProbed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    bool m_frameProbed; \/\/ true if at least one frame was probed$/;"	member	class:QGstreamerVideoProbeControl	access:private
m_fullScreen	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    bool m_fullScreen;$/;"	member	class:QGstreamerVideoWidgetControl	access:private
m_fullScreen	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    bool m_fullScreen;$/;"	member	class:QGstreamerVideoWindow	access:private
m_geometryDirty	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    bool m_geometryDirty;$/;"	member	class:QDeclarativeVideoOutput	access:private
m_glContext	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QOpenGLContext *m_glContext;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
m_glSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QPointer<QAbstractVideoSurface> m_glSurface;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
m_handle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    QVariant m_handle;$/;"	member	class:QGstVideoBuffer	access:private
m_iid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QByteArray  m_iid;$/;"	member	class:QMediaPluginLoader	access:private
m_isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    bool m_isActive = false;$/;"	member	class:QGstreamerVideoOverlay	access:private
m_isLiveSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_isLiveSource;$/;"	member	class:QGstreamerPlayerSession	access:private
m_lastPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    mutable qint64 m_lastPosition;$/;"	member	class:QGstreamerPlayerSession	access:private
m_lastRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QRectF m_lastRect;      \/\/ Cache of last rect to avoid recalculating geometry$/;"	member	class:QDeclarativeVideoOutput	access:private
m_lastUsedIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    mutable QHash<QString, qint64> m_lastUsedIndex;$/;"	member	class:QMediaStorageLocation	access:private
m_loadingMutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QMutex m_loadingMutex;$/;"	member	class:QSampleCache	access:private
m_loadingRefCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    int m_loadingRefCount;$/;"	member	class:QSampleCache	access:private
m_loadingThread	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QThread m_loadingThread;$/;"	member	class:QSampleCache	access:private
m_location	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QString     m_location;$/;"	member	class:QMediaPluginLoader	access:private
m_loopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int m_loopCount = 1;$/;"	member	class:QSoundEffectPrivate	access:private
m_loopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    int m_loopCount = 1;$/;"	member	class:PrivateSoundSource	access:private
m_maxBytes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    qint64 m_maxBytes;$/;"	member	class:QGstAppSrc	access:private
m_mediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QPointer<QMediaObject> m_mediaObject;$/;"	member	class:QDeclarativeVideoOutput	access:private
m_mediaStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaPlayer::MediaStatus m_mediaStatus;$/;"	member	class:QGstreamerPlayerControl	access:private
m_mediaStatusStack	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QStack<QMediaPlayer::MediaStatus> m_mediaStatusStack;$/;"	member	class:QGstreamerPlayerControl	access:private
m_message	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^    GstMessage* m_message;$/;"	member	class:QGstreamerMessage	access:private
m_metadata	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QMap<QString, QList<QJsonObject> > m_metadata;$/;"	member	class:QMediaPluginLoader	access:private
m_mode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    MapMode m_mode;$/;"	member	class:QGstVideoBuffer	access:private
m_muted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_muted;$/;"	member	class:QGstreamerPlayerSession	access:private
m_muted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_muted = false;$/;"	member	class:QSoundEffectPrivate	access:private
m_muted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    bool m_muted = false;$/;"	member	class:PrivateSoundSource	access:private
m_mutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QMutex m_mutex;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
m_mutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QMutex m_mutex;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_mutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    mutable QMutex m_mutex;$/;"	member	class:QMediaStorageLocation	access:private
m_mutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    mutable QMutex m_mutex;$/;"	member	class:QSample	access:private
m_mutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    mutable QMutex m_mutex;$/;"	member	class:QSampleCache	access:private
m_mutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QMutex m_mutex;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_name	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QByteArray m_name;$/;"	member	class:QSoundEffectPrivate	access:private
m_names	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QList<QString> m_names;$/;"	member	class:QGstreamerAudioInputSelector	access:private
m_nativeSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QSize m_nativeSize;$/;"	member	class:QDeclarativeVideoOutput	access:private
m_nativeSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QSize m_nativeSize;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
m_nativeVideoSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    QSize m_nativeVideoSize;$/;"	member	class:QGstreamerVideoOverlay	access:private
m_navigator	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaPlaylistNavigator *m_navigator;$/;"	member	class:QMediaNetworkPlaylistControl	access:private
m_networkAccessManager	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QNetworkAccessManager *m_networkAccessManager;$/;"	member	class:QSampleCache	access:private
m_notified	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool m_notified;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_nullVideoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_nullVideoSink;$/;"	member	class:QGstreamerPlayerSession	access:private
m_object	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    QPointer<QMediaObject> m_object;$/;"	member	class:QVideoSurfaceOutput	access:private
m_offscreenSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QWindow *m_offscreenSurface;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
m_offset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    qint64 m_offset = 0;$/;"	member	class:PrivateSoundSource	access:private
m_orientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    int m_orientation;$/;"	member	class:QDeclarativeVideoOutput	access:private
m_orientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    int m_orientation;$/;"	member	class:QSGVideoNode	access:private
m_parent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QSampleCache *m_parent;$/;"	member	class:QSample	access:private
m_pendingBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    QAudioBuffer m_pendingBuffer;$/;"	member	class:QGstreamerAudioProbeControl	access:private
m_pendingFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    QVideoFrame m_pendingFrame;$/;"	member	class:QGstreamerVideoProbeControl	access:private
m_pendingSeekPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    qint64 m_pendingSeekPosition;$/;"	member	class:QGstreamerPlayerControl	access:private
m_pendingState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMediaPlayer::State m_pendingState;$/;"	member	class:QGstreamerPlayerSession	access:private
m_pendingVideoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_pendingVideoSink;$/;"	member	class:QGstreamerPlayerSession	access:private
m_pipeline	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement *m_pipeline = nullptr; \/\/ Never null$/;"	member	class:QGstreamerPlayerSession	access:private
m_playbackRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    qreal m_playbackRate;$/;"	member	class:QGstreamerPlayerSession	access:private
m_playbin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement *m_playbin = nullptr; \/\/ Can be null$/;"	member	class:QGstreamerPlayerSession	access:private
m_playbin2StreamOffset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMap<QMediaStreamsControl::StreamType, int> m_playbin2StreamOffset;$/;"	member	class:QGstreamerPlayerSession	access:private
m_playerSession	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QGstreamerPlayerSession *m_playerSession;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
m_playing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_playing = false;$/;"	member	class:QSoundEffectPrivate	access:private
m_playing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    bool m_playing = false;$/;"	member	class:PrivateSoundSource	access:private
m_playQueued	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_playQueued = false;$/;"	member	class:QSoundEffectPrivate	access:private
m_pool	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QGstBufferPoolInterface *m_pool;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_poolMutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QMutex m_poolMutex;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_pools	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QList<QGstBufferPoolInterface *> m_pools;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int m_position = 0;$/;"	member	class:QSoundEffectPrivate	access:private
m_pulseBufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int m_pulseBufferSize = 0;$/;"	member	class:QSoundEffectPrivate	access:private
m_pulseSpec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    pa_sample_spec m_pulseSpec;$/;"	member	class:QSoundEffectPrivate	access:private
m_pulseStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    pa_stream *m_pulseStream = nullptr;$/;"	member	class:QSoundEffectPrivate	access:private
m_rect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    QRectF m_rect;$/;"	member	class:QSGVideoNode	access:private
m_ref	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    int          m_ref;$/;"	member	class:QSample	access:private
m_ref	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QSoundEffectRef *m_ref = nullptr;$/;"	member	class:QSoundEffectPrivate	access:private
m_reloadCategory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_reloadCategory = false;$/;"	member	class:QSoundEffectPrivate	access:private
m_renderBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstBuffer *m_renderBuffer;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_renderCondition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QWaitCondition m_renderCondition;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_renderCondition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QWaitCondition m_renderCondition;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_renderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstreamerVideoRendererInterface *m_renderer;$/;"	member	class:QGstreamerPlayerSession	access:private
m_renderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QGstVideoRenderer *m_renderer;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_renderers	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QList<QGstVideoRenderer *> m_renderers;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_renderReturn	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstFlowReturn m_renderReturn;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_renderReturn	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    GstFlowReturn m_renderReturn;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_request	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QNetworkRequest m_request;$/;"	member	class:QGstreamerPlayerSession	access:private
m_resources	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaPlayerResourceSetInterface *m_resources;$/;"	member	class:QGstreamerPlayerControl	access:private
m_resources	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QMediaPlayerResourceSetInterface *m_resources = nullptr;$/;"	member	class:QSoundEffectPrivate	access:private
m_resourcesAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_resourcesAvailable = false;$/;"	member	class:QSoundEffectPrivate	access:private
m_runningCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int m_runningCount = 0;$/;"	member	class:QSoundEffectPrivate	access:private
m_runningCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    int m_runningCount = 0;$/;"	member	class:PrivateSoundSource	access:private
m_sample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QSample *m_sample = nullptr;$/;"	member	class:QSoundEffectPrivate	access:private
m_sample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QSample *m_sample = nullptr;$/;"	member	class:PrivateSoundSource	access:private
m_sampleReadLength	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    qint64       m_sampleReadLength;$/;"	member	class:QSample	access:private
m_sampleReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_sampleReady = false;$/;"	member	class:QSoundEffectPrivate	access:private
m_sampleReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    bool m_sampleReady = false;$/;"	member	class:PrivateSoundSource	access:private
m_samples	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QMap<QUrl, QSample*> m_samples;$/;"	member	class:QSampleCache	access:private
m_screenOrientationHandler	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QVideoOutputOrientationHandler *m_screenOrientationHandler;$/;"	member	class:QDeclarativeVideoOutput	access:private
m_seekable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_seekable;$/;"	member	class:QGstreamerPlayerSession	access:private
m_selectedDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    int m_selectedDevice;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:private
m_sequential	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool m_sequential;$/;"	member	class:QGstAppSrc	access:private
m_service	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    QPointer<QMediaService> m_service;$/;"	member	class:QDeclarativeVideoBackend	access:protected
m_service	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QPointer<QMediaService> m_service;$/;"	member	class:QDeclarativeVideoOutput	access:private
m_service	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    QPointer<QMediaService> m_service;$/;"	member	class:QVideoSurfaceOutput	access:private
m_session	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QGstreamerPlayerSession *m_session;$/;"	member	class:QGstreamerPlayerControl	access:private
m_setMediaPending	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    bool m_setMediaPending;$/;"	member	class:QGstreamerPlayerControl	access:private
m_setupCondition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QWaitCondition m_setupCondition;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_setupCondition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QWaitCondition m_setupCondition;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_sinkInputId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int m_sinkInputId = -1;$/;"	member	class:QSoundEffectPrivate	access:private
m_sinkProperties	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    QGstreamerSinkProperties *m_sinkProperties = nullptr;$/;"	member	class:QGstreamerVideoOverlay	access:private
m_soundData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QByteArray   m_soundData;$/;"	member	class:QSample	access:private
m_soundEffect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    QSoundEffect *m_soundEffect = nullptr;$/;"	member	class:QSound	access:private
m_source	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QPointer<QObject> m_source;$/;"	member	class:QDeclarativeVideoOutput	access:private
m_source	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QUrl m_source;$/;"	member	class:QSoundEffectPrivate	access:private
m_sourceType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    SourceType m_sourceType;$/;"	member	class:QDeclarativeVideoOutput	access:private
m_sourceType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    SourceType m_sourceType;$/;"	member	class:QGstreamerPlayerSession	access:private
m_staleSamples	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QSet<QSample*> m_staleSamples;$/;"	member	class:QSampleCache	access:private
m_startCanceled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    bool m_startCanceled;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_startCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstCaps *m_startCaps;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_started	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    bool m_started;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMediaPlayer::State m_state;$/;"	member	class:QGstreamerPlayerSession	access:private
m_state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    State        m_state;$/;"	member	class:QSample	access:private
m_stateStack	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QStack<QMediaPlayer::State> m_stateStack;$/;"	member	class:QGstreamerPlayerControl	access:private
m_status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QSoundEffect::Status m_status = QSoundEffect::Null;$/;"	member	class:QSoundEffectPrivate	access:private
m_status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QSoundEffect::Status  m_status = QSoundEffect::Null;$/;"	member	class:PrivateSoundSource	access:private
m_stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool m_stop;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_stopped	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    bool m_stopped;$/;"	member	class:QGstreamerVideoWidgetControl	access:private
m_stopping	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_stopping = false;$/;"	member	class:QSoundEffectPrivate	access:private
m_stream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    QIODevice *m_stream;$/;"	member	class:QGstAppSrc	access:private
m_stream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QIODevice *m_stream;$/;"	member	class:QGstreamerPlayerControl	access:private
m_stream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QIODevice    *m_stream;$/;"	member	class:QSample	access:private
m_streamProperties	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QList< QMap<QString,QVariant> > m_streamProperties;$/;"	member	class:QGstreamerPlayerSession	access:private
m_streamType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    GstAppStreamType m_streamType;$/;"	member	class:QGstAppSrc	access:private
m_streamTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QList<QMediaStreamsControl::StreamType> m_streamTypes;$/;"	member	class:QGstreamerPlayerSession	access:private
m_supportedPixelFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QList<QVideoFrame::PixelFormat> m_supportedPixelFormats;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_supportedPoolPixelFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QList<QVideoFrame::PixelFormat> m_supportedPoolPixelFormats;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QPointer<QAbstractVideoSurface> m_surface;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
m_surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    QPointer<QAbstractVideoSurface> m_surface;$/;"	member	class:QGstreamerVideoRenderer	access:private
m_surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QPointer<QAbstractVideoSurface> m_surface;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QPointer<QAbstractVideoSurface> m_surface;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    QPointer<QAbstractVideoSurface> m_surface;$/;"	member	class:QVideoSurfaceOutput	access:private
m_surfaceCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstCaps *m_surfaceCaps;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
m_tags	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMap<QByteArray, QVariant> m_tags;$/;"	member	class:QGstreamerPlayerSession	access:private
m_textureBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QGstreamerMirTextureBuffer *m_textureBuffer;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
m_textureId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    unsigned int m_textureId;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
m_textureRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    QRectF m_textureRect;$/;"	member	class:QSGVideoNode	access:private
m_type	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    HandleType m_type;$/;"	member	class:QAbstractVideoBuffer	access:protected
m_url	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QUrl         m_url;$/;"	member	class:QSample	access:private
m_url	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QUrl m_url;$/;"	member	class:PrivateSoundSource	access:private
m_usage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    qint64 m_usage;$/;"	member	class:QSampleCache	access:private
m_userRequestedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaPlayer::State m_userRequestedState;$/;"	member	class:QGstreamerPlayerControl	access:private
m_usingColorspaceElement	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_usingColorspaceElement;$/;"	member	class:QGstreamerPlayerSession	access:private
m_videoAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_videoAvailable;$/;"	member	class:QGstreamerPlayerSession	access:private
m_videoIdentity	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_videoIdentity;$/;"	member	class:QGstreamerPlayerSession	access:private
m_videoInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    GstVideoInfo m_videoInfo;$/;"	member	class:QGstreamerVideoProbeControl	access:private
m_videoInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    GstVideoInfo m_videoInfo;$/;"	member	class:QGstVideoBuffer	access:private
m_videoInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstVideoInfo m_videoInfo;$/;"	member	class:QGstDefaultVideoRenderer	access:private
m_videoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QObject *m_videoOutput;$/;"	member	class:QGstreamerPlayerSession	access:private
m_videoOutputBin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_videoOutputBin;$/;"	member	class:QGstreamerPlayerSession	access:private
m_videoOverlay	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    QGstreamerVideoOverlay m_videoOverlay;$/;"	member	class:QGstreamerVideoWidgetControl	access:private
m_videoOverlay	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    QGstreamerVideoOverlay m_videoOverlay;$/;"	member	class:QGstreamerVideoWindow	access:private
m_videoProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstreamerVideoProbeControl *m_videoProbe;$/;"	member	class:QGstreamerPlayerSession	access:private
m_videoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    GstElement *m_videoSink;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
m_videoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_videoSink;$/;"	member	class:QGstreamerPlayerSession	access:private
m_videoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    GstElement *m_videoSink = nullptr;$/;"	member	class:QGstreamerVideoOverlay	access:private
m_videoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    GstElement *m_videoSink = nullptr;$/;"	member	class:QGstreamerVideoRenderer	access:private
m_volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    int m_volume;$/;"	member	class:QGstreamerPlayerSession	access:private
m_volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    qreal m_volume = 1.0;$/;"	member	class:QSoundEffectPrivate	access:private
m_volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    qreal m_volume = 1.0;$/;"	member	class:PrivateSoundSource	access:private
m_volumeElement	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_volumeElement;$/;"	member	class:QGstreamerPlayerSession	access:private
m_volumeLock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    mutable QMutex m_volumeLock;$/;"	member	class:QSoundEffectPrivate	access:private
m_waveDecoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QWaveDecoder *m_waveDecoder;$/;"	member	class:QSample	access:private
m_widget	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    QGstreamerVideoWidget *m_widget;$/;"	member	class:QGstreamerVideoWidgetControl	access:private
m_windowId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    WId m_windowId = 0;$/;"	member	class:QGstreamerVideoOverlay	access:private
m_windowId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    WId m_windowId;$/;"	member	class:QGstreamerVideoWidgetControl	access:private
m_windowId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    WId m_windowId;$/;"	member	class:QGstreamerVideoWindow	access:private
name	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^        QString name;$/;"	member	struct:QGstUtils::CameraInfo	access:public
NationalMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        NationalMusic, OldiesMusic, FolkMusic, Documentary,$/;"	enumerator	enum:QRadioData::ProgramType
nativeResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    QSize nativeResolution() const;$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:() const
nativeResolutionChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    void nativeResolutionChanged(const QSize &resolution);$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(const QSize &resolution)
nativeSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual QSize nativeSize() const = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:() const
nativeSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual QSize nativeSize() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
nativeSizeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void nativeSizeChanged();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:()
nativeSizeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    void nativeSizeChanged();$/;"	prototype	class:QVideoWindowControl	access:public	signature:()
nativeVideoSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    QSize nativeVideoSize() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
nativeVideoSizeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void nativeVideoSizeChanged();$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:()
nearestFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    virtual QVideoSurfaceFormat nearestFormat(const QVideoSurfaceFormat &format) const;$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(const QVideoSurfaceFormat &format) const
nearestFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QAudioFormat nearestFormat(const QAudioFormat &format) const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:(const QAudioFormat &format) const
networkAccessManager	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QNetworkAccessManager& networkAccessManager();$/;"	prototype	class:QSampleCache	access:private	signature:()
networkConfigurationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void networkConfigurationChanged(const QNetworkConfiguration &configuration);$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QNetworkConfiguration &configuration)
NetworkError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        NetworkError$/;"	enumerator	enum:QPlaylistFileParser::ParserError
NetworkError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        NetworkError,$/;"	enumerator	enum:QMediaPlayer::Error
NetworkError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum Error { NoError, FormatError, FormatNotSupportedError, NetworkError, AccessDeniedError };$/;"	enumerator	enum:QMediaPlaylist::Error
networkPlaylistControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaPlaylistControl *networkPlaylistControl;$/;"	member	class:QMediaPlaylistPrivate	access:public
newItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void newItem(const QVariant& content);$/;"	prototype	class:QPlaylistFileParser	access:public	signature:(const QVariant& content)
News	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum ProgramType { Undefined = 0, News, CurrentAffairs, Information,$/;"	enumerator	enum:QRadioData::ProgramType
next	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual void next() = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:()
next	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void next();$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:()
next	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void next();$/;"	prototype	class:QMediaPlaylist	access:public	signature:()
nextIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual int nextIndex(int steps) const = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(int steps) const
nextIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    int nextIndex(int steps = 1) const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(int steps = 1) const
nextIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    int nextIndex(int steps = 1) const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int steps = 1) const
nextItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaContent nextItem(int steps = 1) const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(int steps = 1) const
nextMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    virtual QMediaContent nextMedia() const = 0;$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:() const
nextMediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    void nextMediaChanged(const QMediaContent& media);$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:(const QMediaContent& media)
NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        NoError,$/;"	enumerator	enum:QPlaylistFileParser::ParserError
NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^        NoError,$/;"	enumerator	enum:QAbstractVideoSurface::Error
NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Error { NoError, OpenError, IOError, UnderrunError, FatalError };$/;"	enumerator	enum:QAudio::Error
NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^        NoError,$/;"	enumerator	enum:QAudioDecoder::Error
NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        NoError,$/;"	enumerator	enum:QCamera::Error
NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        NoError,$/;"	enumerator	enum:QCameraImageCapture::Error
NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        NoError,$/;"	enumerator	enum:QMediaPlayer::Error
NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum Error { NoError, FormatError, FormatNotSupportedError, NetworkError, AccessDeniedError };$/;"	enumerator	enum:QMediaPlaylist::Error
NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        NoError,$/;"	enumerator	enum:QMediaRecorder::Error
NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioData::Error
NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioTuner::Error
NoHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        NoHandle,$/;"	enumerator	enum:QAbstractVideoBuffer::HandleType
NoLock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        NoLock = 0,$/;"	enumerator	enum:QCamera::LockType
NoMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        NoMedia,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
normalized	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeInterval normalized() const;$/;"	prototype	class:QMediaTimeInterval	access:public	signature:() const
NormalQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        NormalQuality,$/;"	enumerator	enum:QMultimedia::EncodingQuality
NoSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^        NoSource,$/;"	enumerator	enum:QDeclarativeVideoOutput::SourceType
Nostalgia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SoftRock, Top40, Soft, Nostalgia, Classical,$/;"	enumerator	enum:QRadioData::ProgramType
NotificationRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        NotificationRole,$/;"	enumerator	enum:QAudio::Role
notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    void notify();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:()
notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void notify();$/;"	prototype	class:QAudioInput	access:public	signature:()
notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void notify();$/;"	prototype	class:QAudioOutput	access:public	signature:()
notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    void notify();$/;"	prototype	class:QAbstractAudioInput	access:public	signature:()
notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    void notify();$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:()
notifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    int notifyInterval() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
notifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    int notifyInterval() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
notifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int notifyInterval() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
notifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int notifyInterval() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
notifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    int notifyInterval() const;$/;"	prototype	class:QMediaObject	access:public	signature:() const
notifyIntervalChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void notifyIntervalChanged(int milliSeconds);$/;"	prototype	class:QMediaObject	access:public	signature:(int milliSeconds)
notifyProperties	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    QSet<int> notifyProperties;$/;"	member	class:QMediaObjectPrivate	access:public
notifyTimer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    QTimer* notifyTimer;$/;"	member	class:QMediaObjectPrivate	access:public
notifyTimer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QTimer* notifyTimer;$/;"	member	class:QMediaRecorderPrivate	access:public
notifyUnreferencedSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    bool notifyUnreferencedSample(QSample* sample);$/;"	prototype	class:QSampleCache	access:private	signature:(QSample* sample)
NotMapped	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        NotMapped = 0x00,$/;"	enumerator	enum:QAbstractVideoBuffer::MapMode
NotReadyError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        NotReadyError,$/;"	enumerator	enum:QCameraImageCapture::Error
NotSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        NotSupported,$/;"	enumerator	enum:QMultimedia::SupportEstimate
NotSupportedFeatureError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        NotSupportedFeatureError$/;"	enumerator	enum:QCamera::Error
NotSupportedFeatureError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        NotSupportedFeatureError,$/;"	enumerator	enum:QCameraImageCapture::Error
NPixelFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        NPixelFormats,$/;"	enumerator	enum:QVideoFrame::PixelFormat
Null	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    enum Type { Null, ContentType, Device, SupportedFeatures, CameraPosition };$/;"	enumerator	enum:QMediaServiceProviderHint::Type
Null	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^        Null,$/;"	enumerator	enum:QSoundEffect::Status
numChannels	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        quint16     numChannels;$/;"	member	struct:QWaveDecoder::WAVEHeader	access:public
OldiesMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        NationalMusic, OldiesMusic, FolkMusic, Documentary,$/;"	enumerator	enum:QRadioData::ProgramType
onDataReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    void onDataReady();$/;"	prototype	class:QGstAppSrc	access:private	signature:()
onNativeVideoSizeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void onNativeVideoSizeChanged();$/;"	prototype	class:QGstreamerVideoWidgetControl	access:private	signature:()
onOverlayActiveChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void onOverlayActiveChanged();$/;"	prototype	class:QGstreamerVideoWidgetControl	access:private	signature:()
onReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void onReady();$/;"	prototype	class:QSample	access:private	signature:()
on_enough_data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    static void on_enough_data(GstAppSrc *element, gpointer userdata);$/;"	prototype	class:QGstAppSrc	access:private	signature:(GstAppSrc *element, gpointer userdata)
on_need_data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    static void on_need_data(GstAppSrc *element, uint arg0, gpointer userdata);$/;"	prototype	class:QGstAppSrc	access:private	signature:(GstAppSrc *element, uint arg0, gpointer userdata)
on_seek_data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    static gboolean on_seek_data(GstAppSrc *element, guint64 arg0, gpointer userdata);$/;"	prototype	class:QGstAppSrc	access:private	signature:(GstAppSrc *element, guint64 arg0, gpointer userdata)
OpenError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Error { NoError, OpenError, IOError, UnderrunError, FatalError };$/;"	enumerator	enum:QAudio::Error
OpenError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioData::Error
OpenError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioTuner::Error
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    bool operator!=(const QAudioDeviceInfo &other) const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:(const QAudioDeviceInfo &other) const
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    bool operator!=(const QAudioFormat &other) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(const QAudioFormat &other) const
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    bool operator!=(const QCameraFocusZone &other) const;$/;"	prototype	class:QCameraFocusZone	access:public	signature:(const QCameraFocusZone &other) const
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    inline bool operator!=(const QCameraInfo &other) const;$/;"	prototype	class:QCameraInfo	access:public	signature:(const QCameraInfo &other) const
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^bool QCameraInfo::operator!=(const QCameraInfo &other) const { return !operator==(other); }$/;"	function	class:QCameraInfo	signature:(const QCameraInfo &other) const
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    bool operator!=(const QMediaContent &other) const;$/;"	prototype	class:QMediaContent	access:public	signature:(const QMediaContent &other) const
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool operator!=(const QAudioEncoderSettings &other) const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QAudioEncoderSettings &other) const
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool operator!=(const QImageEncoderSettings &other) const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QImageEncoderSettings &other) const
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool operator!=(const QVideoEncoderSettings &other) const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QVideoEncoderSettings &other) const
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    bool operator !=(const QMediaResource &other) const;$/;"	prototype	class:QMediaResource	access:public	signature:(const QMediaResource &other) const
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    bool operator != (const QMediaServiceProviderHint &other) const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(const QMediaServiceProviderHint &other) const
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^Q_MULTIMEDIA_EXPORT bool operator!=(const QMediaTimeInterval&, const QMediaTimeInterval&);$/;"	prototype	signature:(const QMediaTimeInterval&, const QMediaTimeInterval&)
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^Q_MULTIMEDIA_EXPORT bool operator!=(const QMediaTimeRange&, const QMediaTimeRange&);$/;"	prototype	signature:(const QMediaTimeRange&, const QMediaTimeRange&)
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    bool operator!=(const QVideoFrame &other) const;$/;"	prototype	class:QVideoFrame	access:public	signature:(const QVideoFrame &other) const
operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    bool operator !=(const QVideoSurfaceFormat &format) const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const QVideoSurfaceFormat &format) const
operator +	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^Q_MULTIMEDIA_EXPORT QMediaTimeRange operator+(const QMediaTimeRange&, const QMediaTimeRange&);$/;"	prototype	signature:(const QMediaTimeRange&, const QMediaTimeRange&)
operator +=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange& operator+=(const QMediaTimeInterval&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeInterval&)
operator +=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange& operator+=(const QMediaTimeRange&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeRange&)
operator -	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^Q_MULTIMEDIA_EXPORT QMediaTimeRange operator-(const QMediaTimeRange&, const QMediaTimeRange&);$/;"	prototype	signature:(const QMediaTimeRange&, const QMediaTimeRange&)
operator -=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange& operator-=(const QMediaTimeInterval&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeInterval&)
operator -=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange& operator-=(const QMediaTimeRange&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeRange&)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^Q_GSTTOOLS_EXPORT QDebug operator <<(QDebug debug, GstCaps *caps);$/;"	prototype	signature:(QDebug debug, GstCaps *caps)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug, QAbstractVideoBuffer::HandleType);$/;"	prototype	signature:(QDebug, QAbstractVideoBuffer::HandleType)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug, QAbstractVideoBuffer::MapMode);$/;"	prototype	signature:(QDebug, QAbstractVideoBuffer::MapMode)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug, const QAbstractVideoSurface::Error &);$/;"	prototype	signature:(QDebug, const QAbstractVideoSurface::Error &)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug dbg, QAudio::Mode mode);$/;"	prototype	signature:(QDebug dbg, QAudio::Mode mode)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug dbg, QAudio::Role role);$/;"	prototype	signature:(QDebug dbg, QAudio::Role role)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug dbg, QAudio::State state);$/;"	prototype	signature:(QDebug dbg, QAudio::State state)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug dbg, QAudio::VolumeScale role);$/;"	prototype	signature:(QDebug dbg, QAudio::VolumeScale role)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug, const QAudioFormat &);$/;"	prototype	signature:(QDebug, const QAudioFormat &)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug, QAudioFormat::Endian);$/;"	prototype	signature:(QDebug, QAudioFormat::Endian)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug, QAudioFormat::SampleType);$/;"	prototype	signature:(QDebug, QAudioFormat::SampleType)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug, const QCameraInfo&);$/;"	prototype	signature:(QDebug, const QCameraInfo&)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug, const QMediaTimeRange &);$/;"	prototype	signature:(QDebug, const QMediaTimeRange &)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug, const QVideoFrame&);$/;"	prototype	signature:(QDebug, const QVideoFrame&)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug, QVideoFrame::FieldType);$/;"	prototype	signature:(QDebug, QVideoFrame::FieldType)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug, QVideoFrame::PixelFormat);$/;"	prototype	signature:(QDebug, QVideoFrame::PixelFormat)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug, const QVideoSurfaceFormat &);$/;"	prototype	signature:(QDebug, const QVideoSurfaceFormat &)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug, QVideoSurfaceFormat::Direction);$/;"	prototype	signature:(QDebug, QVideoSurfaceFormat::Direction)
operator <<	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^Q_MULTIMEDIA_EXPORT QDebug operator<<(QDebug, QVideoSurfaceFormat::YCbCrColorSpace);$/;"	prototype	signature:(QDebug, QVideoSurfaceFormat::YCbCrColorSpace)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^    QGstreamerMessage& operator=(QGstreamerMessage const& rhs);$/;"	prototype	class:QGstreamerMessage	access:public	signature:(QGstreamerMessage const& rhs)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^        StereoFrame& operator=(const StereoFrame &other)$/;"	function	struct:QAudioBuffer::StereoFrame	access:public	signature:(const StereoFrame &other)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioBuffer& operator=(const QAudioBuffer &other);$/;"	prototype	class:QAudioBuffer	access:public	signature:(const QAudioBuffer &other)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QAudioDeviceInfo& operator=(const QAudioDeviceInfo& other);$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:(const QAudioDeviceInfo& other)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    QAudioFormat& operator=(const QAudioFormat &other);$/;"	prototype	class:QAudioFormat	access:public	signature:(const QAudioFormat &other)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QCameraFocusZone& operator=(const QCameraFocusZone &other);$/;"	prototype	class:QCameraFocusZone	access:public	signature:(const QCameraFocusZone &other)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    QCameraInfo& operator=(const QCameraInfo& other);$/;"	prototype	class:QCameraInfo	access:public	signature:(const QCameraInfo& other)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    QCameraViewfinderSettings& operator=(const QCameraViewfinderSettings &other);$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:(const QCameraViewfinderSettings &other)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent& operator=(const QMediaContent &other);$/;"	prototype	class:QMediaContent	access:public	signature:(const QMediaContent &other)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QAudioEncoderSettings& operator=(const QAudioEncoderSettings &other);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QAudioEncoderSettings &other)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QImageEncoderSettings& operator=(const QImageEncoderSettings &other);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QImageEncoderSettings &other)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVideoEncoderSettings& operator=(const QVideoEncoderSettings &other);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QVideoEncoderSettings &other)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QMediaResource &operator =(const QMediaResource &other);$/;"	prototype	class:QMediaResource	access:public	signature:(const QMediaResource &other)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaServiceProviderHint& operator=(const QMediaServiceProviderHint &other);$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(const QMediaServiceProviderHint &other)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange &operator=(const QMediaTimeInterval&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeInterval&)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange &operator=(const QMediaTimeRange&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeRange&)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVideoFrame &operator =(const QVideoFrame &other);$/;"	prototype	class:QVideoFrame	access:public	signature:(const QVideoFrame &other)
operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QVideoSurfaceFormat &operator =(const QVideoSurfaceFormat &format);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const QVideoSurfaceFormat &format)
operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    bool operator==(const QAudioDeviceInfo &other) const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:(const QAudioDeviceInfo &other) const
operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    bool operator==(const QAudioFormat &other) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(const QAudioFormat &other) const
operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    bool operator==(const QCameraFocusZone &other) const;$/;"	prototype	class:QCameraFocusZone	access:public	signature:(const QCameraFocusZone &other) const
operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    bool operator==(const QCameraInfo &other) const;$/;"	prototype	class:QCameraInfo	access:public	signature:(const QCameraInfo &other) const
operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    bool operator==(const QMediaContent &other) const;$/;"	prototype	class:QMediaContent	access:public	signature:(const QMediaContent &other) const
operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool operator==(const QAudioEncoderSettings &other) const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QAudioEncoderSettings &other) const
operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool operator==(const QImageEncoderSettings &other) const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QImageEncoderSettings &other) const
operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool operator==(const QVideoEncoderSettings &other) const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QVideoEncoderSettings &other) const
operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    bool operator ==(const QMediaResource &other) const;$/;"	prototype	class:QMediaResource	access:public	signature:(const QMediaResource &other) const
operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    bool operator == (const QMediaServiceProviderHint &other) const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(const QMediaServiceProviderHint &other) const
operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^Q_MULTIMEDIA_EXPORT bool operator==(const QMediaTimeInterval&, const QMediaTimeInterval&);$/;"	prototype	signature:(const QMediaTimeInterval&, const QMediaTimeInterval&)
operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^Q_MULTIMEDIA_EXPORT bool operator==(const QMediaTimeRange&, const QMediaTimeRange&);$/;"	prototype	signature:(const QMediaTimeRange&, const QMediaTimeRange&)
operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    bool operator==(const QVideoFrame &other) const;$/;"	prototype	class:QVideoFrame	access:public	signature:(const QVideoFrame &other) const
operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    bool operator ==(const QVideoSurfaceFormat &format) const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const QVideoSurfaceFormat &format) const
opticalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    qreal opticalZoom() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
opticalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void opticalZoomChanged(qreal);$/;"	prototype	class:QCameraFocus	access:public	signature:(qreal)
orientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    int orientation() const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:() const
orientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^        int orientation;$/;"	member	struct:QGstUtils::CameraInfo	access:public
orientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    int orientation() const;$/;"	prototype	class:QCameraInfo	access:public	signature:() const
Orientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Orientation;$/;"	member	namespace:QMediaMetaData
orientationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void orientationChanged();$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:()
orientationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideooutputorientationhandler_p.h	/^    void orientationChanged(int angle);$/;"	prototype	class:QVideoOutputOrientationHandler	access:public	signature:(int angle)
OtherMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SeriousClassical, OtherMusic, Weather, Finance,$/;"	enumerator	enum:QRadioData::ProgramType
OutOfRangeError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioData::Error
OutOfRangeError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioTuner::Error
OutOfSpaceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        OutOfSpaceError,$/;"	enumerator	enum:QCameraImageCapture::Error
OutOfSpaceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        OutOfSpaceError$/;"	enumerator	enum:QMediaRecorder::Error
outputDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    virtual QString outputDescription(const QString& name) const = 0;$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:(const QString& name) const
outputLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QUrl outputLocation() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
outputLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual QUrl outputLocation() const = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:() const
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qabstractvideobuffer_p.h	/^    int map(QAbstractVideoBuffer::MapMode mode, int *numBytes, int bytesPerLine[4], uchar *data[4]) override;$/;"	member	class:QAbstractPlanarVideoBufferPrivate	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QSGNode *updatePaintNode(QSGNode *, UpdatePaintNodeData *) override;$/;"	member	class:QDeclarativeVideoOutput	access:protected
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void geometryChanged(const QRectF &newGeometry, const QRectF &oldGeometry) override;$/;"	member	class:QDeclarativeVideoOutput	access:protected
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void itemChange(ItemChange change, const ItemChangeData &changeData) override;$/;"	member	class:QDeclarativeVideoOutput	access:protected
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void releaseResources() override;$/;"	member	class:QDeclarativeVideoOutput	access:protected
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    bool isFormatSupported(const QVideoSurfaceFormat &format) const override = 0;$/;"	member	class:QGstBufferPoolPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    GstBuffer *takeBuffer(const QVideoSurfaceFormat &format, GstCaps *caps) override = 0;$/;"	member	class:QGstBufferPoolPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    QAbstractVideoBuffer *prepareVideoBuffer(GstBuffer *buffer, int bytesPerLine) override = 0;$/;"	member	class:QGstBufferPoolPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    QAbstractVideoBuffer::HandleType handleType() const override = 0;$/;"	member	class:QGstBufferPoolPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    void clear() override = 0;$/;"	member	class:QGstBufferPoolPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QList<QString> availableInputs() const override;$/;"	member	class:QGstreamerAudioInputSelector	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QString activeInput() const override;$/;"	member	class:QGstreamerAudioInputSelector	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QString defaultInput() const override;$/;"	member	class:QGstreamerAudioInputSelector	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QString inputDescription(const QString &name) const override;$/;"	member	class:QGstreamerAudioInputSelector	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    void setActiveInput(const QString &name) override;$/;"	member	class:QGstreamerAudioInputSelector	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    bool probeBuffer(GstBuffer *buffer) override;$/;"	member	class:QGstreamerAudioProbeControl	access:protected
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    void probeCaps(GstCaps *caps) override;$/;"	member	class:QGstreamerAudioProbeControl	access:protected
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    bool isAudioAvailable() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    bool isMuted() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    bool isSeekable() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    bool isVideoAvailable() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    const QIODevice *mediaStream() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    int bufferStatus() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    int volume() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    qint64 duration() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    qint64 position() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaContent media() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaPlayer::MediaStatus mediaStatus() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaPlayer::State state() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaTimeRange availablePlaybackRanges() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    qreal playbackRate() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void pause() override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void play() override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void setMedia(const QMediaContent&, QIODevice *) override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void setMuted(bool muted) override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void setPlaybackRate(qreal rate) override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void setPosition(qint64 pos) override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void setVolume(int volume) override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void stop() override;$/;"	member	class:QGstreamerPlayerControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool processBusMessage(const QGstreamerMessage &message) override;$/;"	member	class:QGstreamerPlayerSession	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    int defaultDevice() const override;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    int deviceCount() const override;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    int selectedDevice() const override;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    QString deviceDescription(int index) const override;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    QString deviceName(int index) const override;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    void setSelectedDevice(int index) override;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    bool processBusMessage(const QGstreamerMessage &message) override;$/;"	member	class:QGstreamerVideoOverlay	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    bool processSyncMessage(const QGstreamerMessage &message) override;$/;"	member	class:QGstreamerVideoOverlay	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void probeCaps(GstCaps *caps) override;$/;"	member	class:QGstreamerVideoOverlay	access:private
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    bool probeBuffer(GstBuffer *buffer) override;$/;"	member	class:QGstreamerVideoProbeControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    void probeCaps(GstCaps *caps) override;$/;"	member	class:QGstreamerVideoProbeControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    GstElement *videoSink() override;$/;"	member	class:QGstreamerVideoRenderer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    QAbstractVideoSurface *surface() const override;$/;"	member	class:QGstreamerVideoRenderer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    void setSurface(QAbstractVideoSurface *surface) override;$/;"	member	class:QGstreamerVideoRenderer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    void setVideoSink(GstElement *) override;$/;"	member	class:QGstreamerVideoRenderer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    void stopRenderer() override;$/;"	member	class:QGstreamerVideoRenderer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    bool eventFilter(QObject *object, QEvent *event) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    bool isFullScreen() const override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    bool processBusMessage(const QGstreamerMessage &message) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:private
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    bool processSyncMessage(const QGstreamerMessage &message) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:private
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    GstElement *videoSink() override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    int brightness() const override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    int contrast() const override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    int hue() const override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    int saturation() const override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    Qt::AspectRatioMode aspectRatioMode() const override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    QWidget *videoWidget() override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void setAspectRatioMode(Qt::AspectRatioMode mode) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void setBrightness(int brightness) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void setContrast(int contrast) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void setFullScreen(bool fullScreen) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void setHue(int hue) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void setSaturation(int saturation) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void setVideoSink(GstElement *) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void stopRenderer() override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    bool isFullScreen() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    bool processBusMessage(const QGstreamerMessage &message) override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    bool processSyncMessage(const QGstreamerMessage &message) override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    GstElement *videoSink() override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    int brightness() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    int contrast() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    int hue() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    int saturation() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    QRect displayRect() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    QSize nativeSize() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    Qt::AspectRatioMode aspectRatioMode() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void repaint() override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setAspectRatioMode(Qt::AspectRatioMode mode) override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setBrightness(int brightness) override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setContrast(int contrast) override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setDisplayRect(const QRect &rect) override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setFullScreen(bool fullScreen) override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setHue(int hue) override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setSaturation(int saturation) override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setWinId(WId id) override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    WId winId() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    int map(MapMode mode, int *numBytes, int bytesPerLine[4], uchar *data[4]) override;$/;"	member	class:QGstVideoBuffer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    MapMode mapMode() const override;$/;"	member	class:QGstVideoBuffer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    uchar *map(MapMode mode, int *numBytes, int *bytesPerLine) override;$/;"	member	class:QGstVideoBuffer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    void unmap() override;$/;"	member	class:QGstVideoBuffer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    QGstVideoRenderer *createRenderer() override = 0;$/;"	member	class:QGstVideoRendererPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool event(QEvent *event) override;$/;"	member	class:QVideoSurfaceGstDelegate	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool present(QAbstractVideoSurface *surface, GstBuffer *buffer) override;$/;"	member	class:QGstDefaultVideoRenderer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool proposeAllocation(GstQuery *query) override;$/;"	member	class:QGstDefaultVideoRenderer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool start(QAbstractVideoSurface *surface, GstCaps *caps) override;$/;"	member	class:QGstDefaultVideoRenderer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstCaps *getCaps(QAbstractVideoSurface *surface) override;$/;"	member	class:QGstDefaultVideoRenderer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    void flush(QAbstractVideoSurface *surface) override;$/;"	member	class:QGstDefaultVideoRenderer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    void stop(QAbstractVideoSurface *surface) override;$/;"	member	class:QGstDefaultVideoRenderer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qimagevideobuffer_p.h	/^    MapMode mapMode() const override;$/;"	member	class:QImageVideoBuffer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qimagevideobuffer_p.h	/^    uchar *map(MapMode mode, int *numBytes, int *bytesPerLine) override;$/;"	member	class:QImageVideoBuffer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qimagevideobuffer_p.h	/^    void unmap() override;$/;"	member	class:QImageVideoBuffer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool addMedia(const QList<QMediaContent> &items) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool addMedia(const QMediaContent &content) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool clear() override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool insertMedia(int pos, const QList<QMediaContent> &items) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool insertMedia(int pos, const QMediaContent &content) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool isReadOnly() const override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool load(const QNetworkRequest &request, const char *format = 0) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool moveMedia(int from, int to) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool removeMedia(int pos) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool removeMedia(int start, int end) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    int mediaCount() const override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    QMediaContent media(int pos) const override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    void shuffle() override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    bool canRead(const QUrl& location, const QByteArray &format = QByteArray()) const override = 0;$/;"	member	class:QMediaPlaylistIOPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    bool canRead(QIODevice *device, const QByteArray &format = QByteArray() ) const override = 0;$/;"	member	class:QMediaPlaylistIOPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    bool canWrite(QIODevice *device, const QByteArray &format) const override = 0;$/;"	member	class:QMediaPlaylistIOPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    QMediaPlaylistReader *createReader(const QUrl& location, const QByteArray &format = QByteArray()) override = 0;$/;"	member	class:QMediaPlaylistIOPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    QMediaPlaylistReader *createReader(QIODevice *device, const QByteArray &format = QByteArray()) override = 0;$/;"	member	class:QMediaPlaylistIOPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    QMediaPlaylistWriter *createWriter(QIODevice *device, const QByteArray &format) override = 0;$/;"	member	class:QMediaPlaylistIOPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmemoryvideobuffer_p.h	/^    MapMode mapMode() const override;$/;"	member	class:QMemoryVideoBuffer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmemoryvideobuffer_p.h	/^    uchar *map(MapMode mode, int *numBytes, int *bytesPerLine) override;$/;"	member	class:QMemoryVideoBuffer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmemoryvideobuffer_p.h	/^    void unmap() override;$/;"	member	class:QMemoryVideoBuffer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    QList<QVideoFrame::PixelFormat> supportedPixelFormats(QAbstractVideoBuffer::HandleType handleType) const override = 0;$/;"	member	class:QSGVideoNodeFactoryPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    QSGVideoNode *createNode(const QVideoSurfaceFormat &format) override = 0;$/;"	member	class:QSGVideoNodeFactoryPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    qint64 readData(char *data, qint64 len) override;$/;"	member	class:PrivateSoundSource	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    qint64 writeData(const char *data, qint64 len) override;$/;"	member	class:PrivateSoundSource	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    bool setMediaObject(QMediaObject *object) override;$/;"	member	class:QVideoSurfaceOutput	access:protected
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    QMediaObject *mediaObject() const override;$/;"	member	class:QVideoSurfaceOutput	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    bool isSequential() const override;$/;"	member	class:QWaveDecoder	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    qint64 bytesAvailable() const override;$/;"	member	class:QWaveDecoder	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    qint64 readData(char *data, qint64 maxlen) override;$/;"	member	class:QWaveDecoder	access:private
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    qint64 size() const override;$/;"	member	class:QWaveDecoder	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    qint64 writeData(const char *data, qint64 len) override;$/;"	member	class:QWaveDecoder	access:private
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    uchar *map(MapMode mode, int *numBytes, int *bytesPerLine) override;$/;"	member	class:QAbstractPlanarVideoBuffer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    bool bind(QObject *) override;$/;"	member	class:QAudioDecoder	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void unbind(QObject *) override;$/;"	member	class:QAudioDecoder	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    QAbstractAudioDeviceInfo* createDeviceInfo(const QByteArray& device, QAudio::Mode mode) override = 0;$/;"	member	class:QAudioSystemPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    QAbstractAudioInput* createInput(const QByteArray& device) override = 0;$/;"	member	class:QAudioSystemPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    QAbstractAudioOutput* createOutput(const QByteArray& device) override = 0;$/;"	member	class:QAudioSystemPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    QList<QByteArray> availableDevices(QAudio::Mode) const override = 0;$/;"	member	class:QAudioSystemPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QMultimedia::AvailabilityStatus availability() const override;$/;"	member	class:QCamera	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    bool setMediaObject(QMediaObject *) override;$/;"	member	class:QCameraImageCapture	access:protected
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QMediaObject *mediaObject() const override;$/;"	member	class:QCameraImageCapture	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    bool bind(QObject *) override;$/;"	member	class:QMediaPlayer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QMultimedia::AvailabilityStatus availability() const override;$/;"	member	class:QMediaPlayer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void unbind(QObject *) override;$/;"	member	class:QMediaPlayer	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool setMediaObject(QMediaObject *object) override;$/;"	member	class:QMediaPlaylist	access:protected
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    QMediaObject *mediaObject() const override;$/;"	member	class:QMediaPlaylist	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    bool setMediaObject(QMediaObject *object) override;$/;"	member	class:QMediaRecorder	access:protected
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QMediaObject *mediaObject() const override;$/;"	member	class:QMediaRecorder	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaService* create(const QString& key) override = 0;$/;"	member	class:QMediaServiceProviderPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    void release(QMediaService *service) override = 0;$/;"	member	class:QMediaServiceProviderPlugin	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    bool setMediaObject(QMediaObject *) override;$/;"	member	class:QRadioData	access:protected
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QMediaObject *mediaObject() const override;$/;"	member	class:QRadioData	access:public
override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    QMultimedia::AvailabilityStatus availability() const override;$/;"	member	class:QRadioTuner	access:public
padBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    static GstPadProbeReturn padBufferProbe(GstPad *pad, GstPadProbeInfo *info, gpointer userData);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:private	signature:(GstPad *pad, GstPadProbeInfo *info, gpointer userData)
pad_probe_id	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    gulong pad_probe_id;$/;"	member	class:QGstreamerPlayerSession	access:private
parameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^    virtual QVariant parameter(ProcessingParameter parameter) const = 0;$/;"	prototype	class:QCameraImageProcessingControl	access:public	signature:(ProcessingParameter parameter) const
parameterRangeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    void parameterRangeChanged(int parameter);$/;"	prototype	class:QCameraExposureControl	access:public	signature:(int parameter)
parent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstVideoSink parent;$/;"	member	class:QGstVideoRendererSink	access:public
parent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    GstVideoSink parent;$/;"	member	class:QVideoSurfaceGstSink	access:public
ParentalRating	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ParentalRating;$/;"	member	namespace:QMediaMetaData
parent_class	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  GstElementClass parent_class;$/;"	member	struct:_GstVideoConnectorClass	access:public
parent_class	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstVideoSinkClass parent_class;$/;"	member	class:QGstVideoRendererSinkClass	access:public
ParserError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    enum ParserError$/;"	enum	class:QPlaylistFileParser	access:public
parsingError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    void parsingError();$/;"	prototype	class:QWaveDecoder	access:public	signature:()
parsingFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    void parsingFailed();$/;"	prototype	class:QWaveDecoder	access:private	signature:()
pause	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool pause();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
pause	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void pause();$/;"	prototype	class:QMediaPlayer	access:public	signature:()
pause	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void pause() = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:()
pause	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void pause();$/;"	prototype	class:QMediaRecorder	access:public	signature:()
PausedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        PausedState$/;"	enumerator	enum:QMediaPlayer::State
PausedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        PausedState$/;"	enumerator	enum:QMediaRecorder::State
PausedStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        PausedStatus,$/;"	enumerator	enum:QMediaRecorder::Status
PeakValue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString PeakValue;$/;"	member	namespace:QMediaMetaData
peekChunk	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    bool peekChunk(chunk* pChunk, bool handleEndianness = true);$/;"	prototype	class:QWaveDecoder	access:private	signature:(chunk* pChunk, bool handleEndianness = true)
pendingState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMediaPlayer::State pendingState() const { return m_pendingState; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
periodSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    int periodSize() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
periodSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    int periodSize() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
periodSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int periodSize() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
periodSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int periodSize() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
Personality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        ReligiousMusic, ReligiousTalk, Personality, Public,$/;"	enumerator	enum:QRadioData::ProgramType
PhoneIn	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PhoneIn, Travel, Leisure, JazzMusic, CountryMusic,$/;"	enumerator	enum:QRadioData::ProgramType
Pictures	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^        Pictures,$/;"	enumerator	enum:QMediaStorageLocation::MediaType
pipeline	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement *pipeline() const { return m_pipeline; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
pipelineChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void pipelineChanged();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
pixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    QSize pixelAspectRatio() const;$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:() const
PixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^        PixelAspectRatio,$/;"	enumerator	enum:QCameraViewfinderSettingsControl::ViewfinderParameter
PixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString PixelAspectRatio;$/;"	member	namespace:QMediaMetaData
pixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QSize pixelAspectRatio() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
pixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    virtual QVideoFrame::PixelFormat pixelFormat() const = 0;$/;"	prototype	class:QSGVideoNode	access:public	signature:() const
pixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    QVideoFrame::PixelFormat pixelFormat() const;$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:() const
PixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^        PixelFormat,$/;"	enumerator	enum:QCameraViewfinderSettingsControl::ViewfinderParameter
PixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    enum PixelFormat$/;"	enum	class:QVideoFrame	access:public
pixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    PixelFormat pixelFormat() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
pixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QVideoFrame::PixelFormat pixelFormat() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
pixelFormatFromImageFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    static PixelFormat pixelFormatFromImageFormat(QImage::Format format);$/;"	prototype	class:QVideoFrame	access:public	signature:(QImage::Format format)
planeCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    int planeCount() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool play();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void play();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void play();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void play();$/;"	prototype	class:QMediaPlayer	access:public	signature:()
play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void play() = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:()
play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    static void play(const QString &filename);$/;"	prototype	class:QSound	access:public	signature:(const QString &filename)
play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    void play();$/;"	prototype	class:QSound	access:public	signature:()
play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void play();$/;"	prototype	class:QSoundEffect	access:public	signature:()
playAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void playAvailable();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
playbackFinished	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void playbackFinished();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
playbackMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual QMediaPlaylist::PlaybackMode playbackMode() const = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:() const
playbackMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaPlaylist::PlaybackMode playbackMode() const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:() const
PlaybackMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum PlaybackMode { CurrentItemOnce, CurrentItemInLoop, Sequential, Loop, Random };$/;"	enum	class:QMediaPlaylist	access:public
playbackMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    PlaybackMode playbackMode() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
playbackModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    void playbackModeChanged(QMediaPlaylist::PlaybackMode mode);$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(QMediaPlaylist::PlaybackMode mode)
playbackModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void playbackModeChanged(QMediaPlaylist::PlaybackMode mode);$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(QMediaPlaylist::PlaybackMode mode)
playbackModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void playbackModeChanged(QMediaPlaylist::PlaybackMode mode);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(QMediaPlaylist::PlaybackMode mode)
playbackRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    qreal playbackRate() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
playbackRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    qreal playbackRate() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
playbackRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual qreal playbackRate() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
playbackRateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void playbackRateChanged(qreal);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(qreal)
playbackRateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void playbackRateChanged(qreal rate);$/;"	prototype	class:QMediaPlayer	access:public	signature:(qreal rate)
playbackRateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void playbackRateChanged(qreal rate);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(qreal rate)
playbin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement *playbin() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
playbinNotifySource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static void playbinNotifySource(GObject *o, GParamSpec *p, gpointer d);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GObject *o, GParamSpec *p, gpointer d)
playingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void playingChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
playingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void playingChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
playingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void playingChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
PlayingState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        PlayingState,$/;"	enumerator	enum:QMediaPlayer::State
playlist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaPlaylistProvider *playlist() const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:() const
playlist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistsourcecontrol_p.h	/^    virtual QMediaPlaylist *playlist() const = 0;$/;"	prototype	class:QMediaPlaylistSourceControl	access:public	signature:() const
playlist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaPlaylistProvider *playlist() const { return control->playlistProvider(); }$/;"	function	class:QMediaPlaylistPrivate	access:public	signature:() const
playlist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaPlaylist *playlist() const;$/;"	prototype	class:QMediaContent	access:public	signature:() const
playlist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QMediaPlaylist *playlist() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
playlistChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistsourcecontrol_p.h	/^    void playlistChanged(QMediaPlaylist* playlist);$/;"	prototype	class:QMediaPlaylistSourceControl	access:public	signature:(QMediaPlaylist* playlist)
playlistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual QMediaPlaylistProvider* playlistProvider() const = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:() const
playlistProviderChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    void playlistProviderChanged();$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:()
playOrPause	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void playOrPause(QMediaPlayer::State state);$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:(QMediaPlayer::State state)
playSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void playSample();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
PLS	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        PLS$/;"	enumerator	enum:QPlaylistFileParser::FileType
pool	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QGstBufferPoolInterface *pool() { return m_pool; }$/;"	function	class:QVideoSurfaceGstDelegate	access:public	signature:()
poolMutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QMutex *poolMutex() { return &m_poolMutex; }$/;"	function	class:QVideoSurfaceGstDelegate	access:public	signature:()
popAndNotifyState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void popAndNotifyState();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
PopMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PopMusic, RockMusic, EasyListening, LightClassical,$/;"	enumerator	enum:QRadioData::ProgramType
position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    qint64 position() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^        QCamera::Position position;$/;"	member	struct:QGstUtils::CameraInfo	access:public
position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    qint64 position() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual qint64 position() const = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:() const
Position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum Position$/;"	enum	class:QCamera	access:public
position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    QCamera::Position position() const;$/;"	prototype	class:QCameraInfo	access:public	signature:() const
position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    qint64 position() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual qint64 position() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
positionChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void positionChanged(qint64 position);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(qint64 position)
positionChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void positionChanged(qint64 position);$/;"	prototype	class:QAudioDecoder	access:public	signature:(qint64 position)
positionChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void positionChanged(qint64 position);$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(qint64 position)
positionChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void positionChanged(qint64 position);$/;"	prototype	class:QMediaPlayer	access:public	signature:(qint64 position)
positionChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void positionChanged(qint64 position);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(qint64 position)
PosterImage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString PosterImage;$/;"	member	namespace:QMediaMetaData
PosterUrl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString PosterUrl;$/;"	member	namespace:QMediaMetaData
preferredFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QAudioFormat preferredFormat() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
preferredFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QAudioFormat preferredFormat() const = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:() const
PreferredService	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        PreferredService$/;"	enumerator	enum:QMultimedia::SupportEstimate
prepare	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void prepare();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
prepareVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    virtual QAbstractVideoBuffer *prepareVideoBuffer(GstBuffer *buffer, int bytesPerLine) = 0;$/;"	prototype	class:QGstBufferPoolInterface	access:public	signature:(GstBuffer *buffer, int bytesPerLine)
present	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual bool present(QAbstractVideoSurface *surface, GstBuffer *buffer) = 0;$/;"	prototype	class:QGstVideoRenderer	access:public	signature:(QAbstractVideoSurface *surface, GstBuffer *buffer)
present	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    virtual bool present(const QVideoFrame &frame) = 0;$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(const QVideoFrame &frame)
PreserveAspectCrop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^        PreserveAspectCrop = Qt::KeepAspectRatioByExpanding$/;"	enumerator	enum:QDeclarativeVideoOutput::FillMode
PreserveAspectFit	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^        PreserveAspectFit  = Qt::KeepAspectRatio,$/;"	enumerator	enum:QDeclarativeVideoOutput::FillMode
previous	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual void previous() = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:()
previous	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void previous();$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:()
previous	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void previous();$/;"	prototype	class:QMediaPlaylist	access:public	signature:()
previousIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual int previousIndex(int steps) const = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(int steps) const
previousIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    int previousIndex(int steps = 1) const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(int steps = 1) const
previousIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    int previousIndex(int steps = 1) const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int steps = 1) const
previousItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaContent previousItem(int steps = 1) const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(int steps = 1) const
primaryCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    static QString primaryCamera() { return tr("Main camera"); }$/;"	function	class:QGstreamerVideoInputDeviceControl	access:public	signature:()
PrivateSoundSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    PrivateSoundSource(QSoundEffectPrivate *s);$/;"	prototype	class:PrivateSoundSource	access:public	signature:(QSoundEffectPrivate *s)
PrivateSoundSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^class PrivateSoundSource : public QIODevice$/;"	class	inherits:QIODevice
PrivateSoundSource::decoderError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void decoderError();$/;"	prototype	class:PrivateSoundSource	access:private	signature:()
PrivateSoundSource::m_audioOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QAudioOutput *m_audioOutput = nullptr;$/;"	member	class:PrivateSoundSource	access:private
PrivateSoundSource::m_category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QString m_category;$/;"	member	class:PrivateSoundSource	access:private
PrivateSoundSource::m_loopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    int m_loopCount = 1;$/;"	member	class:PrivateSoundSource	access:private
PrivateSoundSource::m_muted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    bool m_muted = false;$/;"	member	class:PrivateSoundSource	access:private
PrivateSoundSource::m_offset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    qint64 m_offset = 0;$/;"	member	class:PrivateSoundSource	access:private
PrivateSoundSource::m_playing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    bool m_playing = false;$/;"	member	class:PrivateSoundSource	access:private
PrivateSoundSource::m_runningCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    int m_runningCount = 0;$/;"	member	class:PrivateSoundSource	access:private
PrivateSoundSource::m_sample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QSample *m_sample = nullptr;$/;"	member	class:PrivateSoundSource	access:private
PrivateSoundSource::m_sampleReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    bool m_sampleReady = false;$/;"	member	class:PrivateSoundSource	access:private
PrivateSoundSource::m_status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QSoundEffect::Status  m_status = QSoundEffect::Null;$/;"	member	class:PrivateSoundSource	access:private
PrivateSoundSource::m_url	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QUrl m_url;$/;"	member	class:PrivateSoundSource	access:private
PrivateSoundSource::m_volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    qreal m_volume = 1.0;$/;"	member	class:PrivateSoundSource	access:private
PrivateSoundSource::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    qint64 readData(char *data, qint64 len) override;$/;"	member	class:PrivateSoundSource	access:public
PrivateSoundSource::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    qint64 writeData(const char *data, qint64 len) override;$/;"	member	class:PrivateSoundSource	access:public
PrivateSoundSource::PrivateSoundSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    PrivateSoundSource(QSoundEffectPrivate *s);$/;"	prototype	class:PrivateSoundSource	access:public	signature:(QSoundEffectPrivate *s)
PrivateSoundSource::sampleReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void sampleReady();$/;"	prototype	class:PrivateSoundSource	access:private	signature:()
PrivateSoundSource::soundeffect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QSoundEffectPrivate *soundeffect = nullptr;$/;"	member	class:PrivateSoundSource	access:private
PrivateSoundSource::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void stateChanged(QAudio::State);$/;"	prototype	class:PrivateSoundSource	access:private	signature:(QAudio::State)
PrivateSoundSource::~PrivateSoundSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    ~PrivateSoundSource() {}$/;"	function	class:PrivateSoundSource	access:public	signature:()
ProbablySupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        ProbablySupported,$/;"	enumerator	enum:QMultimedia::SupportEstimate
ProbeAll	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^        ProbeAll    = ProbeCaps | ProbeBuffers$/;"	enumerator	enum:QGstreamerBufferProbe::Flags
probeBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    virtual bool probeBuffer(GstBuffer *buffer);$/;"	prototype	class:QGstreamerBufferProbe	access:protected	signature:(GstBuffer *buffer)
ProbeBuffers	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^        ProbeBuffers    = 0x02,$/;"	enumerator	enum:QGstreamerBufferProbe::Flags
ProbeCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^        ProbeCaps       = 0x01,$/;"	enumerator	enum:QGstreamerBufferProbe::Flags
probeCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    virtual void probeCaps(GstCaps *caps);$/;"	prototype	class:QGstreamerBufferProbe	access:protected	signature:(GstCaps *caps)
processBusMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    virtual bool processBusMessage(const QGstreamerMessage &message) = 0;$/;"	prototype	class:QGstreamerBusMessageFilter	access:public	signature:(const QGstreamerMessage &message)
processedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    qint64 processedUSecs() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
processedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    qint64 processedUSecs() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
processedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual qint64 processedUSecs() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
processedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual qint64 processedUSecs() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
processEOS	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void processEOS();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
ProcessingParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^    enum ProcessingParameter {$/;"	enum	class:QCameraImageProcessingControl	access:public
processInvalidMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void processInvalidMedia(QMediaPlayer::Error errorCode, const QString& errorString);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(QMediaPlayer::Error errorCode, const QString& errorString)
processSyncMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    virtual bool processSyncMessage(const QGstreamerMessage &message) = 0;$/;"	prototype	class:QGstreamerSyncMessageFilter	access:public	signature:(const QGstreamerMessage &message)
ProgramType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum ProgramType { Undefined = 0, News, CurrentAffairs, Information,$/;"	enum	class:QRadioData	access:public
programType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    ProgramType programType() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
programType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual QRadioData::ProgramType programType() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
programTypeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void programTypeChanged(QRadioData::ProgramType programType);$/;"	prototype	class:QRadioData	access:public	signature:(QRadioData::ProgramType programType)
programTypeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    void programTypeChanged(QRadioData::ProgramType programType);$/;"	prototype	class:QRadioDataControl	access:public	signature:(QRadioData::ProgramType programType)
programTypeName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QString programTypeName() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
programTypeName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual QString programTypeName() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
programTypeNameChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void programTypeNameChanged(QString programTypeName);$/;"	prototype	class:QRadioData	access:public	signature:(QString programTypeName)
programTypeNameChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    void programTypeNameChanged(QString programTypeName);$/;"	prototype	class:QRadioDataControl	access:public	signature:(QString programTypeName)
ProgressiveFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        ProgressiveFrame,$/;"	enumerator	enum:QVideoFrame::FieldType
Property	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    enum Property$/;"	enum	class:QMediaResource	access:private
property	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QVariant property(const char *name) const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const char *name) const
PropertyChangeType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    enum PropertyChangeType {$/;"	enum	class:QCameraControl	access:public
propertyNames	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QList<QByteArray> propertyNames() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
proposeAllocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual bool proposeAllocation(GstQuery *query) = 0;    \/\/ may be called from a thread.$/;"	prototype	class:QGstVideoRenderer	access:public	signature:(GstQuery *query)
proposeAllocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool proposeAllocation(GstQuery *query);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:(GstQuery *query)
propose_allocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static gboolean propose_allocation(GstBaseSink *sink, GstQuery *query);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GstBaseSink *sink, GstQuery *query)
provider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QMediaServiceProvider *provider;$/;"	member	class:QCameraPrivate	access:public
Public	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        ReligiousMusic, ReligiousTalk, Personality, Public,$/;"	enumerator	enum:QRadioData::ProgramType
Publisher	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Publisher;$/;"	member	namespace:QMediaMetaData
pushDataToAppSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    void pushDataToAppSrc();$/;"	prototype	class:QGstAppSrc	access:private	signature:()
pushState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void pushState();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
q	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    QDeclarativeVideoOutput *q;$/;"	member	class:QDeclarativeVideoBackend	access:protected
QAbstractAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^class Q_MULTIMEDIA_EXPORT QAbstractAudioBuffer {$/;"	class
QAbstractAudioBuffer::clone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual QAbstractAudioBuffer *clone() const = 0;$/;"	prototype	class:QAbstractAudioBuffer	access:public	signature:() const
QAbstractAudioBuffer::constData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual void *constData() const = 0;$/;"	prototype	class:QAbstractAudioBuffer	access:public	signature:() const
QAbstractAudioBuffer::format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual QAudioFormat format() const = 0;$/;"	prototype	class:QAbstractAudioBuffer	access:public	signature:() const
QAbstractAudioBuffer::frameCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual int frameCount() const = 0;$/;"	prototype	class:QAbstractAudioBuffer	access:public	signature:() const
QAbstractAudioBuffer::release	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual void release() = 0;$/;"	prototype	class:QAbstractAudioBuffer	access:public	signature:()
QAbstractAudioBuffer::startTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual qint64 startTime() const = 0;$/;"	prototype	class:QAbstractAudioBuffer	access:public	signature:() const
QAbstractAudioBuffer::writableData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual void *writableData() = 0;$/;"	prototype	class:QAbstractAudioBuffer	access:public	signature:()
QAbstractAudioBuffer::~QAbstractAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual ~QAbstractAudioBuffer() {}$/;"	function	class:QAbstractAudioBuffer	access:public	signature:()
QAbstractAudioDeviceInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^class Q_MULTIMEDIA_EXPORT QAbstractAudioDeviceInfo : public QObject$/;"	class	inherits:QObject
QAbstractAudioDeviceInfo::deviceName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QString deviceName() const = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:() const
QAbstractAudioDeviceInfo::isFormatSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual bool isFormatSupported(const QAudioFormat &format) const = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:(const QAudioFormat &format) const
QAbstractAudioDeviceInfo::preferredFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QAudioFormat preferredFormat() const = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:() const
QAbstractAudioDeviceInfo::supportedByteOrders	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QList<QAudioFormat::Endian> supportedByteOrders() = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:()
QAbstractAudioDeviceInfo::supportedChannelCounts	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QList<int> supportedChannelCounts() = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:()
QAbstractAudioDeviceInfo::supportedCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QStringList supportedCodecs() = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:()
QAbstractAudioDeviceInfo::supportedSampleRates	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QList<int> supportedSampleRates() = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:()
QAbstractAudioDeviceInfo::supportedSampleSizes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QList<int> supportedSampleSizes() = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:()
QAbstractAudioDeviceInfo::supportedSampleTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QList<QAudioFormat::SampleType> supportedSampleTypes() = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:()
QAbstractAudioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^class Q_MULTIMEDIA_EXPORT QAbstractAudioInput : public QObject$/;"	class	inherits:QObject
QAbstractAudioInput::bufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int bufferSize() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
QAbstractAudioInput::bytesReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int bytesReady() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
QAbstractAudioInput::elapsedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual qint64 elapsedUSecs() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
QAbstractAudioInput::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QAudio::Error error() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
QAbstractAudioInput::errorChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    void errorChanged(QAudio::Error error);$/;"	prototype	class:QAbstractAudioInput	access:public	signature:(QAudio::Error error)
QAbstractAudioInput::format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QAudioFormat format() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
QAbstractAudioInput::notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    void notify();$/;"	prototype	class:QAbstractAudioInput	access:public	signature:()
QAbstractAudioInput::notifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int notifyInterval() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
QAbstractAudioInput::periodSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int periodSize() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
QAbstractAudioInput::processedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual qint64 processedUSecs() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
QAbstractAudioInput::reset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void reset() = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:()
QAbstractAudioInput::resume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void resume() = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:()
QAbstractAudioInput::setBufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setBufferSize(int value) = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:(int value)
QAbstractAudioInput::setFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setFormat(const QAudioFormat& fmt) = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:(const QAudioFormat& fmt)
QAbstractAudioInput::setNotifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setNotifyInterval(int milliSeconds) = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:(int milliSeconds)
QAbstractAudioInput::setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setVolume(qreal) = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:(qreal)
QAbstractAudioInput::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QIODevice* start() = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:()
QAbstractAudioInput::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void start(QIODevice *device) = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:(QIODevice *device)
QAbstractAudioInput::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QAudio::State state() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
QAbstractAudioInput::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    void stateChanged(QAudio::State state);$/;"	prototype	class:QAbstractAudioInput	access:public	signature:(QAudio::State state)
QAbstractAudioInput::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void stop() = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:()
QAbstractAudioInput::suspend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void suspend()  = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:()
QAbstractAudioInput::volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual qreal volume() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
QAbstractAudioOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^class Q_MULTIMEDIA_EXPORT QAbstractAudioOutput : public QObject$/;"	class	inherits:QObject
QAbstractAudioOutput::bufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int bufferSize() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
QAbstractAudioOutput::bytesFree	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int bytesFree() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
QAbstractAudioOutput::category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QString category() const { return QString(); }$/;"	function	class:QAbstractAudioOutput	access:public	signature:() const
QAbstractAudioOutput::elapsedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual qint64 elapsedUSecs() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
QAbstractAudioOutput::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QAudio::Error error() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
QAbstractAudioOutput::errorChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    void errorChanged(QAudio::Error error);$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:(QAudio::Error error)
QAbstractAudioOutput::format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QAudioFormat format() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
QAbstractAudioOutput::notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    void notify();$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:()
QAbstractAudioOutput::notifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int notifyInterval() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
QAbstractAudioOutput::periodSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual int periodSize() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
QAbstractAudioOutput::processedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual qint64 processedUSecs() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
QAbstractAudioOutput::reset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void reset() = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:()
QAbstractAudioOutput::resume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void resume() = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:()
QAbstractAudioOutput::setBufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setBufferSize(int value) = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:(int value)
QAbstractAudioOutput::setCategory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setCategory(const QString &) { }$/;"	function	class:QAbstractAudioOutput	access:public	signature:(const QString &)
QAbstractAudioOutput::setFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setFormat(const QAudioFormat& fmt) = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:(const QAudioFormat& fmt)
QAbstractAudioOutput::setNotifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setNotifyInterval(int milliSeconds) = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:(int milliSeconds)
QAbstractAudioOutput::setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setVolume(qreal) {}$/;"	function	class:QAbstractAudioOutput	access:public	signature:(qreal)
QAbstractAudioOutput::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QIODevice* start() = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:()
QAbstractAudioOutput::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void start(QIODevice *device) = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:(QIODevice *device)
QAbstractAudioOutput::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QAudio::State state() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
QAbstractAudioOutput::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    void stateChanged(QAudio::State state);$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:(QAudio::State state)
QAbstractAudioOutput::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void stop() = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:()
QAbstractAudioOutput::suspend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void suspend() = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:()
QAbstractAudioOutput::volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual qreal volume() const { return 1.0; }$/;"	function	class:QAbstractAudioOutput	access:public	signature:() const
QAbstractPlanarVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    QAbstractPlanarVideoBuffer(HandleType type);$/;"	prototype	class:QAbstractPlanarVideoBuffer	access:public	signature:(HandleType type)
QAbstractPlanarVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    QAbstractPlanarVideoBuffer(QAbstractPlanarVideoBufferPrivate &dd, HandleType type);$/;"	prototype	class:QAbstractPlanarVideoBuffer	access:protected	signature:(QAbstractPlanarVideoBufferPrivate &dd, HandleType type)
QAbstractPlanarVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^class Q_MULTIMEDIA_EXPORT QAbstractPlanarVideoBuffer : public QAbstractVideoBuffer$/;"	class	inherits:QAbstractVideoBuffer
QAbstractPlanarVideoBuffer::map	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual int map(MapMode mode, int *numBytes, int bytesPerLine[4], uchar *data[4]) = 0;$/;"	prototype	class:QAbstractPlanarVideoBuffer	access:public	signature:(MapMode mode, int *numBytes, int bytesPerLine[4], uchar *data[4])
QAbstractPlanarVideoBuffer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    uchar *map(MapMode mode, int *numBytes, int *bytesPerLine) override;$/;"	member	class:QAbstractPlanarVideoBuffer	access:public
QAbstractPlanarVideoBuffer::QAbstractPlanarVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    QAbstractPlanarVideoBuffer(HandleType type);$/;"	prototype	class:QAbstractPlanarVideoBuffer	access:public	signature:(HandleType type)
QAbstractPlanarVideoBuffer::QAbstractPlanarVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    QAbstractPlanarVideoBuffer(QAbstractPlanarVideoBufferPrivate &dd, HandleType type);$/;"	prototype	class:QAbstractPlanarVideoBuffer	access:protected	signature:(QAbstractPlanarVideoBufferPrivate &dd, HandleType type)
QAbstractPlanarVideoBuffer::~QAbstractPlanarVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual ~QAbstractPlanarVideoBuffer();$/;"	prototype	class:QAbstractPlanarVideoBuffer	access:public	signature:()
QAbstractPlanarVideoBufferPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qabstractvideobuffer_p.h	/^    QAbstractPlanarVideoBufferPrivate()$/;"	function	class:QAbstractPlanarVideoBufferPrivate	access:public	signature:()
QAbstractPlanarVideoBufferPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qabstractvideobuffer_p.h	/^class QAbstractPlanarVideoBufferPrivate : QAbstractVideoBufferPrivate$/;"	class	inherits:QAbstractVideoBufferPrivate
QAbstractPlanarVideoBufferPrivate::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qabstractvideobuffer_p.h	/^    int map(QAbstractVideoBuffer::MapMode mode, int *numBytes, int bytesPerLine[4], uchar *data[4]) override;$/;"	member	class:QAbstractPlanarVideoBufferPrivate	access:public
QAbstractPlanarVideoBufferPrivate::QAbstractPlanarVideoBufferPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qabstractvideobuffer_p.h	/^    QAbstractPlanarVideoBufferPrivate()$/;"	function	class:QAbstractPlanarVideoBufferPrivate	access:public	signature:()
QAbstractVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    QAbstractVideoBuffer(HandleType type);$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:(HandleType type)
QAbstractVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    QAbstractVideoBuffer(QAbstractVideoBufferPrivate &dd, HandleType type);$/;"	prototype	class:QAbstractVideoBuffer	access:protected	signature:(QAbstractVideoBufferPrivate &dd, HandleType type)
QAbstractVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^class Q_MULTIMEDIA_EXPORT QAbstractVideoBuffer$/;"	class
QAbstractVideoBuffer::CoreImageHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        CoreImageHandle,$/;"	enumerator	enum:QAbstractVideoBuffer::HandleType
QAbstractVideoBuffer::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    QAbstractVideoBufferPrivate *d_ptr;  \/\/ For expansion, not used currently$/;"	member	class:QAbstractVideoBuffer	access:protected
QAbstractVideoBuffer::EGLImageHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        EGLImageHandle,$/;"	enumerator	enum:QAbstractVideoBuffer::HandleType
QAbstractVideoBuffer::GLTextureHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        GLTextureHandle,$/;"	enumerator	enum:QAbstractVideoBuffer::HandleType
QAbstractVideoBuffer::handle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual QVariant handle() const;$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:() const
QAbstractVideoBuffer::HandleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    enum HandleType$/;"	enum	class:QAbstractVideoBuffer	access:public
QAbstractVideoBuffer::handleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    HandleType handleType() const;$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:() const
QAbstractVideoBuffer::map	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual uchar *map(MapMode mode, int *numBytes, int *bytesPerLine) = 0;$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:(MapMode mode, int *numBytes, int *bytesPerLine)
QAbstractVideoBuffer::MapMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    enum MapMode$/;"	enum	class:QAbstractVideoBuffer	access:public
QAbstractVideoBuffer::mapMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual MapMode mapMode() const = 0;$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:() const
QAbstractVideoBuffer::mapPlanes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    int mapPlanes(MapMode mode, int *numBytes, int bytesPerLine[4], uchar *data[4]);$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:(MapMode mode, int *numBytes, int bytesPerLine[4], uchar *data[4])
QAbstractVideoBuffer::m_type	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    HandleType m_type;$/;"	member	class:QAbstractVideoBuffer	access:protected
QAbstractVideoBuffer::NoHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        NoHandle,$/;"	enumerator	enum:QAbstractVideoBuffer::HandleType
QAbstractVideoBuffer::NotMapped	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        NotMapped = 0x00,$/;"	enumerator	enum:QAbstractVideoBuffer::MapMode
QAbstractVideoBuffer::QAbstractVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    QAbstractVideoBuffer(HandleType type);$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:(HandleType type)
QAbstractVideoBuffer::QAbstractVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    QAbstractVideoBuffer(QAbstractVideoBufferPrivate &dd, HandleType type);$/;"	prototype	class:QAbstractVideoBuffer	access:protected	signature:(QAbstractVideoBufferPrivate &dd, HandleType type)
QAbstractVideoBuffer::QPixmapHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        QPixmapHandle,$/;"	enumerator	enum:QAbstractVideoBuffer::HandleType
QAbstractVideoBuffer::ReadOnly	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        ReadOnly  = 0x01,$/;"	enumerator	enum:QAbstractVideoBuffer::MapMode
QAbstractVideoBuffer::ReadWrite	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        ReadWrite = ReadOnly | WriteOnly$/;"	enumerator	enum:QAbstractVideoBuffer::MapMode
QAbstractVideoBuffer::release	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual void release();$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:()
QAbstractVideoBuffer::unmap	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual void unmap() = 0;$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:()
QAbstractVideoBuffer::UserHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        UserHandle = 1000$/;"	enumerator	enum:QAbstractVideoBuffer::HandleType
QAbstractVideoBuffer::WriteOnly	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        WriteOnly = 0x02,$/;"	enumerator	enum:QAbstractVideoBuffer::MapMode
QAbstractVideoBuffer::XvShmImageHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        XvShmImageHandle,$/;"	enumerator	enum:QAbstractVideoBuffer::HandleType
QAbstractVideoBuffer::~QAbstractVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual ~QAbstractVideoBuffer();$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:()
QAbstractVideoBufferPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qabstractvideobuffer_p.h	/^    QAbstractVideoBufferPrivate()$/;"	function	class:QAbstractVideoBufferPrivate	access:public	signature:()
QAbstractVideoBufferPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qabstractvideobuffer_p.h	/^class QAbstractVideoBufferPrivate$/;"	class
QAbstractVideoBufferPrivate::map	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qabstractvideobuffer_p.h	/^    virtual int map($/;"	prototype	class:QAbstractVideoBufferPrivate	access:public	signature:( QAbstractVideoBuffer::MapMode mode, int *numBytes, int bytesPerLine[4], uchar *data[4])
QAbstractVideoBufferPrivate::QAbstractVideoBufferPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qabstractvideobuffer_p.h	/^    QAbstractVideoBufferPrivate()$/;"	function	class:QAbstractVideoBufferPrivate	access:public	signature:()
QAbstractVideoBufferPrivate::q_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qabstractvideobuffer_p.h	/^    QAbstractVideoBuffer *q_ptr;$/;"	member	class:QAbstractVideoBufferPrivate	access:public
QAbstractVideoBufferPrivate::~QAbstractVideoBufferPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qabstractvideobuffer_p.h	/^    virtual ~QAbstractVideoBufferPrivate()$/;"	function	class:QAbstractVideoBufferPrivate	access:public	signature:()
QAbstractVideoFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    explicit QAbstractVideoFilter(QObject *parent = nullptr);$/;"	prototype	class:QAbstractVideoFilter	access:public	signature:(QObject *parent = nullptr)
QAbstractVideoFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^class Q_MULTIMEDIA_EXPORT QAbstractVideoFilter : public QObject$/;"	class	inherits:QObject
QAbstractVideoFilter::activeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    void activeChanged();$/;"	prototype	class:QAbstractVideoFilter	access:public	signature:()
QAbstractVideoFilter::createFilterRunnable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    virtual QVideoFilterRunnable *createFilterRunnable() = 0;$/;"	prototype	class:QAbstractVideoFilter	access:public	signature:()
QAbstractVideoFilter::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    QAbstractVideoFilterPrivate *d_ptr;$/;"	member	class:QAbstractVideoFilter	access:private
QAbstractVideoFilter::isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    bool isActive() const;$/;"	prototype	class:QAbstractVideoFilter	access:public	signature:() const
QAbstractVideoFilter::QAbstractVideoFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    explicit QAbstractVideoFilter(QObject *parent = nullptr);$/;"	prototype	class:QAbstractVideoFilter	access:public	signature:(QObject *parent = nullptr)
QAbstractVideoFilter::setActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    void setActive(bool v);$/;"	prototype	class:QAbstractVideoFilter	access:public	signature:(bool v)
QAbstractVideoFilter::~QAbstractVideoFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    ~QAbstractVideoFilter();$/;"	prototype	class:QAbstractVideoFilter	access:public	signature:()
QAbstractVideoSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    explicit QAbstractVideoSurface(QObject *parent = nullptr);$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(QObject *parent = nullptr)
QAbstractVideoSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^class Q_MULTIMEDIA_EXPORT QAbstractVideoSurface : public QObject$/;"	class	inherits:QObject
QAbstractVideoSurface::activeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    void activeChanged(bool active);$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(bool active)
QAbstractVideoSurface::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    QScopedPointer<QAbstractVideoSurfacePrivate> d_ptr;$/;"	member	class:QAbstractVideoSurface	access:private
QAbstractVideoSurface::Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    enum Error$/;"	enum	class:QAbstractVideoSurface	access:public
QAbstractVideoSurface::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    Error error() const;$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:() const
QAbstractVideoSurface::IncorrectFormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^        IncorrectFormatError,$/;"	enumerator	enum:QAbstractVideoSurface::Error
QAbstractVideoSurface::isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    bool isActive() const;$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:() const
QAbstractVideoSurface::isFormatSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    virtual bool isFormatSupported(const QVideoSurfaceFormat &format) const;$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(const QVideoSurfaceFormat &format) const
QAbstractVideoSurface::nativeResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    QSize nativeResolution() const;$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:() const
QAbstractVideoSurface::nativeResolutionChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    void nativeResolutionChanged(const QSize &resolution);$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(const QSize &resolution)
QAbstractVideoSurface::nearestFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    virtual QVideoSurfaceFormat nearestFormat(const QVideoSurfaceFormat &format) const;$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(const QVideoSurfaceFormat &format) const
QAbstractVideoSurface::NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^        NoError,$/;"	enumerator	enum:QAbstractVideoSurface::Error
QAbstractVideoSurface::present	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    virtual bool present(const QVideoFrame &frame) = 0;$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(const QVideoFrame &frame)
QAbstractVideoSurface::QAbstractVideoSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    explicit QAbstractVideoSurface(QObject *parent = nullptr);$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(QObject *parent = nullptr)
QAbstractVideoSurface::ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^        ResourceError$/;"	enumerator	enum:QAbstractVideoSurface::Error
QAbstractVideoSurface::setError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    void setError(Error error);$/;"	prototype	class:QAbstractVideoSurface	access:protected	signature:(Error error)
QAbstractVideoSurface::setNativeResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    void setNativeResolution(const QSize &resolution);$/;"	prototype	class:QAbstractVideoSurface	access:protected	signature:(const QSize &resolution)
QAbstractVideoSurface::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    virtual bool start(const QVideoSurfaceFormat &format);$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(const QVideoSurfaceFormat &format)
QAbstractVideoSurface::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    virtual void stop();$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:()
QAbstractVideoSurface::StoppedError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^        StoppedError,$/;"	enumerator	enum:QAbstractVideoSurface::Error
QAbstractVideoSurface::supportedFormatsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    void supportedFormatsChanged();$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:()
QAbstractVideoSurface::supportedPixelFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    virtual QList<QVideoFrame::PixelFormat> supportedPixelFormats($/;"	prototype	class:QAbstractVideoSurface	access:public	signature:( QAbstractVideoBuffer::HandleType type = QAbstractVideoBuffer::NoHandle) const
QAbstractVideoSurface::surfaceFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    QVideoSurfaceFormat surfaceFormat() const;$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:() const
QAbstractVideoSurface::surfaceFormatChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    void surfaceFormatChanged(const QVideoSurfaceFormat &format);$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(const QVideoSurfaceFormat &format)
QAbstractVideoSurface::UnsupportedFormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^        UnsupportedFormatError,$/;"	enumerator	enum:QAbstractVideoSurface::Error
QAbstractVideoSurface::~QAbstractVideoSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    ~QAbstractVideoSurface();$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:()
QAudio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^namespace QAudio$/;"	namespace
QAudio::AccessibilityRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        AccessibilityRole,$/;"	enumerator	enum:QAudio::Role
QAudio::ActiveState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum State { ActiveState, SuspendedState, StoppedState, IdleState, InterruptedState };$/;"	enumerator	enum:QAudio::State
QAudio::AlarmRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        AlarmRole,$/;"	enumerator	enum:QAudio::Role
QAudio::AudioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Mode { AudioInput, AudioOutput };$/;"	enumerator	enum:QAudio::Mode
QAudio::AudioOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Mode { AudioInput, AudioOutput };$/;"	enumerator	enum:QAudio::Mode
QAudio::convertVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    Q_MULTIMEDIA_EXPORT qreal convertVolume(qreal volume, VolumeScale from, VolumeScale to);$/;"	prototype	namespace:QAudio	signature:(qreal volume, VolumeScale from, VolumeScale to)
QAudio::CubicVolumeScale	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        CubicVolumeScale,$/;"	enumerator	enum:QAudio::VolumeScale
QAudio::CustomRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        CustomRole$/;"	enumerator	enum:QAudio::Role
QAudio::DecibelVolumeScale	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        DecibelVolumeScale$/;"	enumerator	enum:QAudio::VolumeScale
QAudio::Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Error { NoError, OpenError, IOError, UnderrunError, FatalError };$/;"	enum	namespace:QAudio
QAudio::FatalError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Error { NoError, OpenError, IOError, UnderrunError, FatalError };$/;"	enumerator	enum:QAudio::Error
QAudio::GameRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        GameRole,$/;"	enumerator	enum:QAudio::Role
QAudio::IdleState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum State { ActiveState, SuspendedState, StoppedState, IdleState, InterruptedState };$/;"	enumerator	enum:QAudio::State
QAudio::InterruptedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum State { ActiveState, SuspendedState, StoppedState, IdleState, InterruptedState };$/;"	enumerator	enum:QAudio::State
QAudio::IOError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Error { NoError, OpenError, IOError, UnderrunError, FatalError };$/;"	enumerator	enum:QAudio::Error
QAudio::LinearVolumeScale	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        LinearVolumeScale,$/;"	enumerator	enum:QAudio::VolumeScale
QAudio::LogarithmicVolumeScale	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        LogarithmicVolumeScale,$/;"	enumerator	enum:QAudio::VolumeScale
QAudio::Mode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Mode { AudioInput, AudioOutput };$/;"	enum	namespace:QAudio
QAudio::MusicRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        MusicRole,$/;"	enumerator	enum:QAudio::Role
QAudio::NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Error { NoError, OpenError, IOError, UnderrunError, FatalError };$/;"	enumerator	enum:QAudio::Error
QAudio::NotificationRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        NotificationRole,$/;"	enumerator	enum:QAudio::Role
QAudio::OpenError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Error { NoError, OpenError, IOError, UnderrunError, FatalError };$/;"	enumerator	enum:QAudio::Error
QAudio::RingtoneRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        RingtoneRole,$/;"	enumerator	enum:QAudio::Role
QAudio::Role	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Role {$/;"	enum	namespace:QAudio
QAudio::SonificationRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        SonificationRole,$/;"	enumerator	enum:QAudio::Role
QAudio::State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum State { ActiveState, SuspendedState, StoppedState, IdleState, InterruptedState };$/;"	enum	namespace:QAudio
QAudio::StoppedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum State { ActiveState, SuspendedState, StoppedState, IdleState, InterruptedState };$/;"	enumerator	enum:QAudio::State
QAudio::SuspendedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum State { ActiveState, SuspendedState, StoppedState, IdleState, InterruptedState };$/;"	enumerator	enum:QAudio::State
QAudio::UnderrunError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Error { NoError, OpenError, IOError, UnderrunError, FatalError };$/;"	enumerator	enum:QAudio::Error
QAudio::UnknownRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        UnknownRole,$/;"	enumerator	enum:QAudio::Role
QAudio::VideoRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        VideoRole,$/;"	enumerator	enum:QAudio::Role
QAudio::VoiceCommunicationRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        VoiceCommunicationRole,$/;"	enumerator	enum:QAudio::Role
QAudio::VolumeScale	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum VolumeScale {$/;"	enum	namespace:QAudio
QAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioBuffer();$/;"	prototype	class:QAudioBuffer	access:public	signature:()
QAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioBuffer(const QAudioBuffer &other);$/;"	prototype	class:QAudioBuffer	access:public	signature:(const QAudioBuffer &other)
QAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioBuffer(const QByteArray &data, const QAudioFormat &format, qint64 startTime = -1);$/;"	prototype	class:QAudioBuffer	access:public	signature:(const QByteArray &data, const QAudioFormat &format, qint64 startTime = -1)
QAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioBuffer(int numFrames, const QAudioFormat &format, qint64 startTime = -1); \/\/ Initialized to empty$/;"	prototype	class:QAudioBuffer	access:public	signature:(int numFrames, const QAudioFormat &format, qint64 startTime = -1)
QAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioBuffer(QAbstractAudioBuffer *provider);$/;"	prototype	class:QAudioBuffer	access:public	signature:(QAbstractAudioBuffer *provider)
QAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^class Q_MULTIMEDIA_EXPORT QAudioBuffer$/;"	class
QAudioBuffer::byteCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    int byteCount() const;$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
QAudioBuffer::constData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    const void* constData() const; \/\/ Does not detach, preferred$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
QAudioBuffer::constData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    template <typename T> const T* constData() const {$/;"	function	class:QAudioBuffer	access:public	signature:() const
QAudioBuffer::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioBufferPrivate *d;$/;"	member	class:QAudioBuffer	access:private
QAudioBuffer::data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    const void* data() const; \/\/ Does not detach$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
QAudioBuffer::data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    template <typename T> const T* data() const {$/;"	function	class:QAudioBuffer	access:public	signature:() const
QAudioBuffer::data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    template <typename T> T* data() {$/;"	function	class:QAudioBuffer	access:public	signature:()
QAudioBuffer::data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    void *data(); \/\/ detaches$/;"	prototype	class:QAudioBuffer	access:public	signature:()
QAudioBuffer::duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    qint64 duration() const;$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
QAudioBuffer::format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioFormat format() const;$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
QAudioBuffer::frameCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    int frameCount() const;$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
QAudioBuffer::isValid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    bool isValid() const;$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
QAudioBuffer::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioBuffer& operator=(const QAudioBuffer &other);$/;"	prototype	class:QAudioBuffer	access:public	signature:(const QAudioBuffer &other)
QAudioBuffer::QAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioBuffer();$/;"	prototype	class:QAudioBuffer	access:public	signature:()
QAudioBuffer::QAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioBuffer(const QAudioBuffer &other);$/;"	prototype	class:QAudioBuffer	access:public	signature:(const QAudioBuffer &other)
QAudioBuffer::QAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioBuffer(const QByteArray &data, const QAudioFormat &format, qint64 startTime = -1);$/;"	prototype	class:QAudioBuffer	access:public	signature:(const QByteArray &data, const QAudioFormat &format, qint64 startTime = -1)
QAudioBuffer::QAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioBuffer(int numFrames, const QAudioFormat &format, qint64 startTime = -1); \/\/ Initialized to empty$/;"	prototype	class:QAudioBuffer	access:public	signature:(int numFrames, const QAudioFormat &format, qint64 startTime = -1)
QAudioBuffer::QAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    QAudioBuffer(QAbstractAudioBuffer *provider);$/;"	prototype	class:QAudioBuffer	access:public	signature:(QAbstractAudioBuffer *provider)
QAudioBuffer::S16S	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    typedef StereoFrame<signed short> S16S;$/;"	typedef	class:QAudioBuffer	access:public
QAudioBuffer::S16U	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    typedef StereoFrame<unsigned short> S16U;$/;"	typedef	class:QAudioBuffer	access:public
QAudioBuffer::S32F	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    typedef StereoFrame<float> S32F;$/;"	typedef	class:QAudioBuffer	access:public
QAudioBuffer::S8S	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    typedef StereoFrame<signed char> S8S;$/;"	typedef	class:QAudioBuffer	access:public
QAudioBuffer::S8U	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    typedef StereoFrame<unsigned char> S8U;$/;"	typedef	class:QAudioBuffer	access:public
QAudioBuffer::sampleCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    int sampleCount() const;$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
QAudioBuffer::startTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    qint64 startTime() const;$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
QAudioBuffer::StereoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    template <typename T> struct StereoFrame {$/;"	struct	class:QAudioBuffer	access:public
QAudioBuffer::StereoFrame::average	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^        T average() const {return (left + right) \/ 2;}$/;"	function	struct:QAudioBuffer::StereoFrame	access:public	signature:() const
QAudioBuffer::StereoFrame::clear	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^        void clear() {left = right = T(StereoFrameDefault<T>::Default);}$/;"	function	struct:QAudioBuffer::StereoFrame	access:public	signature:()
QAudioBuffer::StereoFrame::left	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^        T left;$/;"	member	struct:QAudioBuffer::StereoFrame	access:public
QAudioBuffer::StereoFrame::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^        StereoFrame& operator=(const StereoFrame &other)$/;"	function	struct:QAudioBuffer::StereoFrame	access:public	signature:(const StereoFrame &other)
QAudioBuffer::StereoFrame::right	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^        T right;$/;"	member	struct:QAudioBuffer::StereoFrame	access:public
QAudioBuffer::StereoFrame::StereoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^        StereoFrame()$/;"	function	struct:QAudioBuffer::StereoFrame	access:public	signature:()
QAudioBuffer::StereoFrame::StereoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^        StereoFrame(T leftSample, T rightSample)$/;"	function	struct:QAudioBuffer::StereoFrame	access:public	signature:(T leftSample, T rightSample)
QAudioBuffer::StereoFrameDefault	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    template <typename T> struct StereoFrameDefault { enum { Default = 0 }; };$/;"	struct	class:QAudioBuffer	access:public
QAudioBuffer::StereoFrameDefault	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^template <> struct QAudioBuffer::StereoFrameDefault<unsigned char> { enum { Default = 128 }; };$/;"	struct	class:QAudioBuffer
QAudioBuffer::StereoFrameDefault	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^template <> struct QAudioBuffer::StereoFrameDefault<unsigned short> { enum { Default = 32768 }; };$/;"	struct	class:QAudioBuffer
QAudioBuffer::StereoFrameDefault::Default	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    template <typename T> struct StereoFrameDefault { enum { Default = 0 }; };$/;"	enumerator	enum:QAudioBuffer::StereoFrameDefault::__anon3
QAudioBuffer::StereoFrameDefault::Default	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^template <> struct QAudioBuffer::StereoFrameDefault<unsigned char> { enum { Default = 128 }; };$/;"	enumerator	enum:QAudioBuffer::StereoFrameDefault::__anon4
QAudioBuffer::StereoFrameDefault::Default	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^template <> struct QAudioBuffer::StereoFrameDefault<unsigned short> { enum { Default = 32768 }; };$/;"	enumerator	enum:QAudioBuffer::StereoFrameDefault::__anon5
QAudioBuffer::~QAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    ~QAudioBuffer();$/;"	prototype	class:QAudioBuffer	access:public	signature:()
QAudioDecoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    explicit QAudioDecoder(QObject *parent = nullptr);$/;"	prototype	class:QAudioDecoder	access:public	signature:(QObject *parent = nullptr)
QAudioDecoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^class Q_MULTIMEDIA_EXPORT QAudioDecoder : public QMediaObject$/;"	class	inherits:QMediaObject
QAudioDecoder::AccessDeniedError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^        AccessDeniedError,$/;"	enumerator	enum:QAudioDecoder::Error
QAudioDecoder::audioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    QAudioFormat audioFormat() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
QAudioDecoder::bufferAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    bool bufferAvailable() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
QAudioDecoder::bufferAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void bufferAvailableChanged(bool);$/;"	prototype	class:QAudioDecoder	access:public	signature:(bool)
QAudioDecoder::bufferReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void bufferReady();$/;"	prototype	class:QAudioDecoder	access:public	signature:()
QAudioDecoder::DecodingState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^        DecodingState$/;"	enumerator	enum:QAudioDecoder::State
QAudioDecoder::duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    qint64 duration() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
QAudioDecoder::durationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void durationChanged(qint64 duration);$/;"	prototype	class:QAudioDecoder	access:public	signature:(qint64 duration)
QAudioDecoder::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_error(int, const QString &))$/;"	prototype	class:QAudioDecoder	access:private	signature:()
QAudioDecoder::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_stateChanged(QAudioDecoder::State))$/;"	prototype	class:QAudioDecoder	access:private	signature:()
QAudioDecoder::Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    enum Error$/;"	enum	class:QAudioDecoder	access:public
QAudioDecoder::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    Error error() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
QAudioDecoder::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void error(QAudioDecoder::Error error);$/;"	prototype	class:QAudioDecoder	access:public	signature:(QAudioDecoder::Error error)
QAudioDecoder::errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    QString errorString() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
QAudioDecoder::finished	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void finished();$/;"	prototype	class:QAudioDecoder	access:public	signature:()
QAudioDecoder::formatChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void formatChanged(const QAudioFormat &format);$/;"	prototype	class:QAudioDecoder	access:public	signature:(const QAudioFormat &format)
QAudioDecoder::FormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^        FormatError,$/;"	enumerator	enum:QAudioDecoder::Error
QAudioDecoder::hasSupport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    static QMultimedia::SupportEstimate hasSupport(const QString &mimeType, const QStringList& codecs = QStringList());$/;"	prototype	class:QAudioDecoder	access:public	signature:(const QString &mimeType, const QStringList& codecs = QStringList())
QAudioDecoder::NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^        NoError,$/;"	enumerator	enum:QAudioDecoder::Error
QAudioDecoder::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    bool bind(QObject *) override;$/;"	member	class:QAudioDecoder	access:public
QAudioDecoder::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void unbind(QObject *) override;$/;"	member	class:QAudioDecoder	access:public
QAudioDecoder::position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    qint64 position() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
QAudioDecoder::positionChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void positionChanged(qint64 position);$/;"	prototype	class:QAudioDecoder	access:public	signature:(qint64 position)
QAudioDecoder::QAudioDecoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    explicit QAudioDecoder(QObject *parent = nullptr);$/;"	prototype	class:QAudioDecoder	access:public	signature:(QObject *parent = nullptr)
QAudioDecoder::read	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    QAudioBuffer read() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
QAudioDecoder::ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^        ResourceError,$/;"	enumerator	enum:QAudioDecoder::Error
QAudioDecoder::ServiceMissingError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^        ServiceMissingError$/;"	enumerator	enum:QAudioDecoder::Error
QAudioDecoder::setAudioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void setAudioFormat(const QAudioFormat &format);$/;"	prototype	class:QAudioDecoder	access:public	signature:(const QAudioFormat &format)
QAudioDecoder::setSourceDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void setSourceDevice(QIODevice *device);$/;"	prototype	class:QAudioDecoder	access:public	signature:(QIODevice *device)
QAudioDecoder::setSourceFilename	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void setSourceFilename(const QString &fileName);$/;"	prototype	class:QAudioDecoder	access:public	signature:(const QString &fileName)
QAudioDecoder::sourceChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void sourceChanged();$/;"	prototype	class:QAudioDecoder	access:public	signature:()
QAudioDecoder::sourceDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    QIODevice* sourceDevice() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
QAudioDecoder::sourceFilename	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    QString sourceFilename() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
QAudioDecoder::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void start();$/;"	prototype	class:QAudioDecoder	access:public	signature:()
QAudioDecoder::State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    enum State$/;"	enum	class:QAudioDecoder	access:public
QAudioDecoder::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    State state() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
QAudioDecoder::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void stateChanged(QAudioDecoder::State newState);$/;"	prototype	class:QAudioDecoder	access:public	signature:(QAudioDecoder::State newState)
QAudioDecoder::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void stop();$/;"	prototype	class:QAudioDecoder	access:public	signature:()
QAudioDecoder::StoppedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^        StoppedState,$/;"	enumerator	enum:QAudioDecoder::State
QAudioDecoder::~QAudioDecoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    ~QAudioDecoder();$/;"	prototype	class:QAudioDecoder	access:public	signature:()
QAudioDecoderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    explicit QAudioDecoderControl(QObject *parent = nullptr);$/;"	prototype	class:QAudioDecoderControl	access:protected	signature:(QObject *parent = nullptr)
QAudioDecoderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^class Q_MULTIMEDIA_EXPORT QAudioDecoderControl : public QMediaControl$/;"	class	inherits:QMediaControl
QAudioDecoderControl::audioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual QAudioFormat audioFormat() const = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:() const
QAudioDecoderControl::bufferAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual bool bufferAvailable() const = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:() const
QAudioDecoderControl::bufferAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void bufferAvailableChanged(bool available);$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(bool available)
QAudioDecoderControl::bufferReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void bufferReady();$/;"	prototype	class:QAudioDecoderControl	access:public	signature:()
QAudioDecoderControl::duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual qint64 duration() const = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:() const
QAudioDecoderControl::durationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void durationChanged(qint64 duration);$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(qint64 duration)
QAudioDecoderControl::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void error(int error, const QString &errorString);$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(int error, const QString &errorString)
QAudioDecoderControl::finished	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void finished();$/;"	prototype	class:QAudioDecoderControl	access:public	signature:()
QAudioDecoderControl::formatChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void formatChanged(const QAudioFormat &format);$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(const QAudioFormat &format)
QAudioDecoderControl::position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual qint64 position() const = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:() const
QAudioDecoderControl::positionChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void positionChanged(qint64 position);$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(qint64 position)
QAudioDecoderControl::QAudioDecoderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    explicit QAudioDecoderControl(QObject *parent = nullptr);$/;"	prototype	class:QAudioDecoderControl	access:protected	signature:(QObject *parent = nullptr)
QAudioDecoderControl::read	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual QAudioBuffer read() = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:()
QAudioDecoderControl::setAudioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual void setAudioFormat(const QAudioFormat &format) = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(const QAudioFormat &format)
QAudioDecoderControl::setSourceDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual void setSourceDevice(QIODevice *device) = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(QIODevice *device)
QAudioDecoderControl::setSourceFilename	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual void setSourceFilename(const QString &fileName) = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(const QString &fileName)
QAudioDecoderControl::sourceChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void sourceChanged();$/;"	prototype	class:QAudioDecoderControl	access:public	signature:()
QAudioDecoderControl::sourceDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual QIODevice* sourceDevice() const = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:() const
QAudioDecoderControl::sourceFilename	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual QString sourceFilename() const = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:() const
QAudioDecoderControl::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual void start() = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:()
QAudioDecoderControl::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual QAudioDecoder::State state() const = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:() const
QAudioDecoderControl::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void stateChanged(QAudioDecoder::State newState);$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(QAudioDecoder::State newState)
QAudioDecoderControl::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual void stop() = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:()
QAudioDecoderControl::~QAudioDecoderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    ~QAudioDecoderControl();$/;"	prototype	class:QAudioDecoderControl	access:public	signature:()
QAudioDeviceFactory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^class QAudioDeviceFactory$/;"	class
QAudioDeviceFactory::audioDeviceInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAbstractAudioDeviceInfo* audioDeviceInfo(const QString &realm, const QByteArray &handle, QAudio::Mode mode);$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:(const QString &realm, const QByteArray &handle, QAudio::Mode mode)
QAudioDeviceFactory::availableDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QList<QAudioDeviceInfo> availableDevices(QAudio::Mode mode);$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:(QAudio::Mode mode)
QAudioDeviceFactory::createDefaultInputDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAbstractAudioInput* createDefaultInputDevice(QAudioFormat const &format);$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:(QAudioFormat const &format)
QAudioDeviceFactory::createDefaultOutputDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAbstractAudioOutput* createDefaultOutputDevice(QAudioFormat const &format);$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:(QAudioFormat const &format)
QAudioDeviceFactory::createInputDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAbstractAudioInput* createInputDevice(QAudioDeviceInfo const &device, QAudioFormat const &format);$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:(QAudioDeviceInfo const &device, QAudioFormat const &format)
QAudioDeviceFactory::createNullInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAbstractAudioInput* createNullInput();$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:()
QAudioDeviceFactory::createNullOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAbstractAudioOutput* createNullOutput();$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:()
QAudioDeviceFactory::createOutputDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAbstractAudioOutput* createOutputDevice(QAudioDeviceInfo const &device, QAudioFormat const &format);$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:(QAudioDeviceInfo const &device, QAudioFormat const &format)
QAudioDeviceFactory::defaultDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiodevicefactory_p.h	/^    static QAudioDeviceInfo defaultDevice(QAudio::Mode mode);$/;"	prototype	class:QAudioDeviceFactory	access:public	signature:(QAudio::Mode mode)
QAudioDeviceInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QAudioDeviceInfo();$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:()
QAudioDeviceInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QAudioDeviceInfo(const QAudioDeviceInfo& other);$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:(const QAudioDeviceInfo& other)
QAudioDeviceInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QAudioDeviceInfo(const QString &realm, const QByteArray &handle, QAudio::Mode mode);$/;"	prototype	class:QAudioDeviceInfo	access:private	signature:(const QString &realm, const QByteArray &handle, QAudio::Mode mode)
QAudioDeviceInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^class Q_MULTIMEDIA_EXPORT QAudioDeviceInfo$/;"	class
QAudioDeviceInfo::availableDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    static QList<QAudioDeviceInfo> availableDevices(QAudio::Mode mode);$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:(QAudio::Mode mode)
QAudioDeviceInfo::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QSharedDataPointer<QAudioDeviceInfoPrivate> d;$/;"	member	class:QAudioDeviceInfo	access:private
QAudioDeviceInfo::defaultInputDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    static QAudioDeviceInfo defaultInputDevice();$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:()
QAudioDeviceInfo::defaultOutputDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    static QAudioDeviceInfo defaultOutputDevice();$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:()
QAudioDeviceInfo::deviceName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QString deviceName() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
QAudioDeviceInfo::handle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QByteArray handle() const;$/;"	prototype	class:QAudioDeviceInfo	access:private	signature:() const
QAudioDeviceInfo::isFormatSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    bool isFormatSupported(const QAudioFormat &format) const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:(const QAudioFormat &format) const
QAudioDeviceInfo::isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    bool isNull() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
QAudioDeviceInfo::mode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QAudio::Mode mode() const;$/;"	prototype	class:QAudioDeviceInfo	access:private	signature:() const
QAudioDeviceInfo::nearestFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QAudioFormat nearestFormat(const QAudioFormat &format) const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:(const QAudioFormat &format) const
QAudioDeviceInfo::operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    bool operator!=(const QAudioDeviceInfo &other) const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:(const QAudioDeviceInfo &other) const
QAudioDeviceInfo::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QAudioDeviceInfo& operator=(const QAudioDeviceInfo& other);$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:(const QAudioDeviceInfo& other)
QAudioDeviceInfo::operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    bool operator==(const QAudioDeviceInfo &other) const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:(const QAudioDeviceInfo &other) const
QAudioDeviceInfo::preferredFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QAudioFormat preferredFormat() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
QAudioDeviceInfo::QAudioDeviceInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QAudioDeviceInfo();$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:()
QAudioDeviceInfo::QAudioDeviceInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QAudioDeviceInfo(const QAudioDeviceInfo& other);$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:(const QAudioDeviceInfo& other)
QAudioDeviceInfo::QAudioDeviceInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QAudioDeviceInfo(const QString &realm, const QByteArray &handle, QAudio::Mode mode);$/;"	prototype	class:QAudioDeviceInfo	access:private	signature:(const QString &realm, const QByteArray &handle, QAudio::Mode mode)
QAudioDeviceInfo::realm	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QString realm() const;$/;"	prototype	class:QAudioDeviceInfo	access:private	signature:() const
QAudioDeviceInfo::supportedByteOrders	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QList<QAudioFormat::Endian> supportedByteOrders() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
QAudioDeviceInfo::supportedChannelCounts	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QList<int> supportedChannelCounts() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
QAudioDeviceInfo::supportedCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QStringList supportedCodecs() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
QAudioDeviceInfo::supportedSampleRates	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QList<int> supportedSampleRates() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
QAudioDeviceInfo::supportedSampleSizes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QList<int> supportedSampleSizes() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
QAudioDeviceInfo::supportedSampleTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QList<QAudioFormat::SampleType> supportedSampleTypes() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
QAudioDeviceInfo::~QAudioDeviceInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    ~QAudioDeviceInfo();$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:()
QAudioEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QAudioEncoderSettings();$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:()
QAudioEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QAudioEncoderSettings(const QAudioEncoderSettings& other);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QAudioEncoderSettings& other)
QAudioEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^class Q_MULTIMEDIA_EXPORT QAudioEncoderSettings$/;"	class
QAudioEncoderSettings::bitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    int bitRate() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
QAudioEncoderSettings::channelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    int channelCount() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
QAudioEncoderSettings::codec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QString codec() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
QAudioEncoderSettings::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QSharedDataPointer<QAudioEncoderSettingsPrivate> d;$/;"	member	class:QAudioEncoderSettings	access:private
QAudioEncoderSettings::encodingMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QMultimedia::EncodingMode encodingMode() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
QAudioEncoderSettings::encodingOption	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVariant encodingOption(const QString &option) const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QString &option) const
QAudioEncoderSettings::encodingOptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVariantMap encodingOptions() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
QAudioEncoderSettings::isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool isNull() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
QAudioEncoderSettings::operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool operator!=(const QAudioEncoderSettings &other) const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QAudioEncoderSettings &other) const
QAudioEncoderSettings::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QAudioEncoderSettings& operator=(const QAudioEncoderSettings &other);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QAudioEncoderSettings &other)
QAudioEncoderSettings::operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool operator==(const QAudioEncoderSettings &other) const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QAudioEncoderSettings &other) const
QAudioEncoderSettings::QAudioEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QAudioEncoderSettings();$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:()
QAudioEncoderSettings::QAudioEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QAudioEncoderSettings(const QAudioEncoderSettings& other);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QAudioEncoderSettings& other)
QAudioEncoderSettings::quality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QMultimedia::EncodingQuality quality() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
QAudioEncoderSettings::sampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    int sampleRate() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
QAudioEncoderSettings::setBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setBitRate(int bitrate);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(int bitrate)
QAudioEncoderSettings::setChannelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setChannelCount(int channels);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(int channels)
QAudioEncoderSettings::setCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setCodec(const QString& codec);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QString& codec)
QAudioEncoderSettings::setEncodingMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingMode(QMultimedia::EncodingMode);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(QMultimedia::EncodingMode)
QAudioEncoderSettings::setEncodingOption	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingOption(const QString &option, const QVariant &value);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QString &option, const QVariant &value)
QAudioEncoderSettings::setEncodingOptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingOptions(const QVariantMap &options);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QVariantMap &options)
QAudioEncoderSettings::setQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setQuality(QMultimedia::EncodingQuality quality);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(QMultimedia::EncodingQuality quality)
QAudioEncoderSettings::setSampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setSampleRate(int rate);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(int rate)
QAudioEncoderSettings::~QAudioEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    ~QAudioEncoderSettings();$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:()
QAudioEncoderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^    explicit QAudioEncoderSettingsControl(QObject *parent = nullptr);$/;"	prototype	class:QAudioEncoderSettingsControl	access:protected	signature:(QObject *parent = nullptr)
QAudioEncoderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^class Q_MULTIMEDIA_EXPORT QAudioEncoderSettingsControl : public QMediaControl$/;"	class	inherits:QMediaControl
QAudioEncoderSettingsControl::audioSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^    virtual QAudioEncoderSettings audioSettings() const = 0;$/;"	prototype	class:QAudioEncoderSettingsControl	access:public	signature:() const
QAudioEncoderSettingsControl::codecDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^    virtual QString codecDescription(const QString &codecName) const = 0;$/;"	prototype	class:QAudioEncoderSettingsControl	access:public	signature:(const QString &codecName) const
QAudioEncoderSettingsControl::QAudioEncoderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^    explicit QAudioEncoderSettingsControl(QObject *parent = nullptr);$/;"	prototype	class:QAudioEncoderSettingsControl	access:protected	signature:(QObject *parent = nullptr)
QAudioEncoderSettingsControl::setAudioSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^    virtual void setAudioSettings(const QAudioEncoderSettings &settings) = 0;$/;"	prototype	class:QAudioEncoderSettingsControl	access:public	signature:(const QAudioEncoderSettings &settings)
QAudioEncoderSettingsControl::supportedAudioCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^    virtual QStringList supportedAudioCodecs() const = 0;$/;"	prototype	class:QAudioEncoderSettingsControl	access:public	signature:() const
QAudioEncoderSettingsControl::supportedSampleRates	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^    virtual QList<int> supportedSampleRates(const QAudioEncoderSettings &settings,$/;"	prototype	class:QAudioEncoderSettingsControl	access:public	signature:(const QAudioEncoderSettings &settings, bool *continuous = nullptr) const
QAudioEncoderSettingsControl::~QAudioEncoderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^    virtual ~QAudioEncoderSettingsControl();$/;"	prototype	class:QAudioEncoderSettingsControl	access:public	signature:()
QAudioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    QAudioFormat();$/;"	prototype	class:QAudioFormat	access:public	signature:()
QAudioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    QAudioFormat(const QAudioFormat &other);$/;"	prototype	class:QAudioFormat	access:public	signature:(const QAudioFormat &other)
QAudioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^class Q_MULTIMEDIA_EXPORT QAudioFormat$/;"	class
QAudioFormat::BigEndian	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum Endian { BigEndian = QSysInfo::BigEndian, LittleEndian = QSysInfo::LittleEndian };$/;"	enumerator	enum:QAudioFormat::Endian
QAudioFormat::byteOrder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    QAudioFormat::Endian byteOrder() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
QAudioFormat::bytesForDuration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    qint32 bytesForDuration(qint64 duration) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(qint64 duration) const
QAudioFormat::bytesForFrames	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    qint32 bytesForFrames(qint32 frameCount) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(qint32 frameCount) const
QAudioFormat::bytesPerFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    int bytesPerFrame() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
QAudioFormat::channelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    int channelCount() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
QAudioFormat::codec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    QString codec() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
QAudioFormat::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    QSharedDataPointer<QAudioFormatPrivate> d;$/;"	member	class:QAudioFormat	access:private
QAudioFormat::durationForBytes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    qint64 durationForBytes(qint32 byteCount) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(qint32 byteCount) const
QAudioFormat::durationForFrames	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    qint64 durationForFrames(qint32 frameCount) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(qint32 frameCount) const
QAudioFormat::Endian	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum Endian { BigEndian = QSysInfo::BigEndian, LittleEndian = QSysInfo::LittleEndian };$/;"	enum	class:QAudioFormat	access:public
QAudioFormat::Float	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum SampleType { Unknown, SignedInt, UnSignedInt, Float };$/;"	enumerator	enum:QAudioFormat::SampleType
QAudioFormat::framesForBytes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    qint32 framesForBytes(qint32 byteCount) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(qint32 byteCount) const
QAudioFormat::framesForDuration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    qint32 framesForDuration(qint64 duration) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(qint64 duration) const
QAudioFormat::isValid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    bool isValid() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
QAudioFormat::LittleEndian	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum Endian { BigEndian = QSysInfo::BigEndian, LittleEndian = QSysInfo::LittleEndian };$/;"	enumerator	enum:QAudioFormat::Endian
QAudioFormat::operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    bool operator!=(const QAudioFormat &other) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(const QAudioFormat &other) const
QAudioFormat::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    QAudioFormat& operator=(const QAudioFormat &other);$/;"	prototype	class:QAudioFormat	access:public	signature:(const QAudioFormat &other)
QAudioFormat::operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    bool operator==(const QAudioFormat &other) const;$/;"	prototype	class:QAudioFormat	access:public	signature:(const QAudioFormat &other) const
QAudioFormat::QAudioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    QAudioFormat();$/;"	prototype	class:QAudioFormat	access:public	signature:()
QAudioFormat::QAudioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    QAudioFormat(const QAudioFormat &other);$/;"	prototype	class:QAudioFormat	access:public	signature:(const QAudioFormat &other)
QAudioFormat::sampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    int sampleRate() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
QAudioFormat::sampleSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    int sampleSize() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
QAudioFormat::SampleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum SampleType { Unknown, SignedInt, UnSignedInt, Float };$/;"	enum	class:QAudioFormat	access:public
QAudioFormat::sampleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    QAudioFormat::SampleType sampleType() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
QAudioFormat::setByteOrder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    void setByteOrder(QAudioFormat::Endian byteOrder);$/;"	prototype	class:QAudioFormat	access:public	signature:(QAudioFormat::Endian byteOrder)
QAudioFormat::setChannelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    void setChannelCount(int channelCount);$/;"	prototype	class:QAudioFormat	access:public	signature:(int channelCount)
QAudioFormat::setCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    void setCodec(const QString &codec);$/;"	prototype	class:QAudioFormat	access:public	signature:(const QString &codec)
QAudioFormat::setSampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    void setSampleRate(int sampleRate);$/;"	prototype	class:QAudioFormat	access:public	signature:(int sampleRate)
QAudioFormat::setSampleSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    void setSampleSize(int sampleSize);$/;"	prototype	class:QAudioFormat	access:public	signature:(int sampleSize)
QAudioFormat::setSampleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    void setSampleType(QAudioFormat::SampleType sampleType);$/;"	prototype	class:QAudioFormat	access:public	signature:(QAudioFormat::SampleType sampleType)
QAudioFormat::SignedInt	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum SampleType { Unknown, SignedInt, UnSignedInt, Float };$/;"	enumerator	enum:QAudioFormat::SampleType
QAudioFormat::Unknown	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum SampleType { Unknown, SignedInt, UnSignedInt, Float };$/;"	enumerator	enum:QAudioFormat::SampleType
QAudioFormat::UnSignedInt	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum SampleType { Unknown, SignedInt, UnSignedInt, Float };$/;"	enumerator	enum:QAudioFormat::SampleType
QAudioFormat::~QAudioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    ~QAudioFormat();$/;"	prototype	class:QAudioFormat	access:public	signature:()
QAudioHelperInternal	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiohelpers_p.h	/^namespace QAudioHelperInternal$/;"	namespace
QAudioHelperInternal::qMultiplySamples	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiohelpers_p.h	/^Q_MULTIMEDIA_EXPORT void qMultiplySamples(qreal factor, const QAudioFormat& format, const void *src, void* dest, int len);$/;"	prototype	namespace:QAudioHelperInternal	signature:(qreal factor, const QAudioFormat& format, const void *src, void* dest, int len)
QAudioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    explicit QAudioInput(const QAudioDeviceInfo &audioDeviceInfo, const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr);$/;"	prototype	class:QAudioInput	access:public	signature:(const QAudioDeviceInfo &audioDeviceInfo, const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr)
QAudioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    explicit QAudioInput(const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr);$/;"	prototype	class:QAudioInput	access:public	signature:(const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr)
QAudioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^class Q_MULTIMEDIA_EXPORT QAudioInput : public QObject$/;"	class	inherits:QObject
QAudioInput::bufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    int bufferSize() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
QAudioInput::bytesReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    int bytesReady() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
QAudioInput::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    QAbstractAudioInput* d;$/;"	member	class:QAudioInput	access:private
QAudioInput::elapsedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    qint64 elapsedUSecs() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
QAudioInput::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    QAudio::Error error() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
QAudioInput::format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    QAudioFormat format() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
QAudioInput::notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void notify();$/;"	prototype	class:QAudioInput	access:public	signature:()
QAudioInput::notifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    int notifyInterval() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
QAudioInput::periodSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    int periodSize() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
QAudioInput::processedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    qint64 processedUSecs() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
QAudioInput::QAudioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    explicit QAudioInput(const QAudioDeviceInfo &audioDeviceInfo, const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr);$/;"	prototype	class:QAudioInput	access:public	signature:(const QAudioDeviceInfo &audioDeviceInfo, const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr)
QAudioInput::QAudioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    explicit QAudioInput(const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr);$/;"	prototype	class:QAudioInput	access:public	signature:(const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr)
QAudioInput::reset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void reset();$/;"	prototype	class:QAudioInput	access:public	signature:()
QAudioInput::resume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void resume();$/;"	prototype	class:QAudioInput	access:public	signature:()
QAudioInput::setBufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void setBufferSize(int bytes);$/;"	prototype	class:QAudioInput	access:public	signature:(int bytes)
QAudioInput::setNotifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void setNotifyInterval(int milliSeconds);$/;"	prototype	class:QAudioInput	access:public	signature:(int milliSeconds)
QAudioInput::setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void setVolume(qreal volume);$/;"	prototype	class:QAudioInput	access:public	signature:(qreal volume)
QAudioInput::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    QIODevice* start();$/;"	prototype	class:QAudioInput	access:public	signature:()
QAudioInput::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void start(QIODevice *device);$/;"	prototype	class:QAudioInput	access:public	signature:(QIODevice *device)
QAudioInput::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    QAudio::State state() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
QAudioInput::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void stateChanged(QAudio::State state);$/;"	prototype	class:QAudioInput	access:public	signature:(QAudio::State state)
QAudioInput::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void stop();$/;"	prototype	class:QAudioInput	access:public	signature:()
QAudioInput::suspend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void suspend();$/;"	prototype	class:QAudioInput	access:public	signature:()
QAudioInput::volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    qreal volume() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
QAudioInput::~QAudioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    ~QAudioInput();$/;"	prototype	class:QAudioInput	access:public	signature:()
QAudioInputSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    explicit QAudioInputSelectorControl(QObject *parent = nullptr);$/;"	prototype	class:QAudioInputSelectorControl	access:protected	signature:(QObject *parent = nullptr)
QAudioInputSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^class Q_MULTIMEDIA_EXPORT QAudioInputSelectorControl : public QMediaControl$/;"	class	inherits:QMediaControl
QAudioInputSelectorControl::activeInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    virtual QString activeInput() const = 0;$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:() const
QAudioInputSelectorControl::activeInputChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    void activeInputChanged(const QString& name);$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:(const QString& name)
QAudioInputSelectorControl::availableInputs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    virtual QList<QString> availableInputs() const = 0;$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:() const
QAudioInputSelectorControl::availableInputsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    void availableInputsChanged();$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:()
QAudioInputSelectorControl::defaultInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    virtual QString defaultInput() const = 0;$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:() const
QAudioInputSelectorControl::inputDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    virtual QString inputDescription(const QString& name) const = 0;$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:(const QString& name) const
QAudioInputSelectorControl::QAudioInputSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    explicit QAudioInputSelectorControl(QObject *parent = nullptr);$/;"	prototype	class:QAudioInputSelectorControl	access:protected	signature:(QObject *parent = nullptr)
QAudioInputSelectorControl::setActiveInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    virtual void setActiveInput(const QString& name) = 0;$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:(const QString& name)
QAudioInputSelectorControl::~QAudioInputSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    virtual ~QAudioInputSelectorControl();$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:()
QAudioOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    explicit QAudioOutput(const QAudioDeviceInfo &audioDeviceInfo, const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr);$/;"	prototype	class:QAudioOutput	access:public	signature:(const QAudioDeviceInfo &audioDeviceInfo, const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr)
QAudioOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    explicit QAudioOutput(const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr);$/;"	prototype	class:QAudioOutput	access:public	signature:(const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr)
QAudioOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^class Q_MULTIMEDIA_EXPORT QAudioOutput : public QObject$/;"	class	inherits:QObject
QAudioOutput::bufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    int bufferSize() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
QAudioOutput::bytesFree	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    int bytesFree() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
QAudioOutput::category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    QString category() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
QAudioOutput::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    QAbstractAudioOutput* d;$/;"	member	class:QAudioOutput	access:private
QAudioOutput::elapsedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    qint64 elapsedUSecs() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
QAudioOutput::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    QAudio::Error error() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
QAudioOutput::format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    QAudioFormat format() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
QAudioOutput::notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void notify();$/;"	prototype	class:QAudioOutput	access:public	signature:()
QAudioOutput::notifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    int notifyInterval() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
QAudioOutput::periodSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    int periodSize() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
QAudioOutput::processedUSecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    qint64 processedUSecs() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
QAudioOutput::QAudioOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    explicit QAudioOutput(const QAudioDeviceInfo &audioDeviceInfo, const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr);$/;"	prototype	class:QAudioOutput	access:public	signature:(const QAudioDeviceInfo &audioDeviceInfo, const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr)
QAudioOutput::QAudioOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    explicit QAudioOutput(const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr);$/;"	prototype	class:QAudioOutput	access:public	signature:(const QAudioFormat &format = QAudioFormat(), QObject *parent = nullptr)
QAudioOutput::reset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void reset();$/;"	prototype	class:QAudioOutput	access:public	signature:()
QAudioOutput::resume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void resume();$/;"	prototype	class:QAudioOutput	access:public	signature:()
QAudioOutput::setBufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void setBufferSize(int bytes);$/;"	prototype	class:QAudioOutput	access:public	signature:(int bytes)
QAudioOutput::setCategory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void setCategory(const QString &category);$/;"	prototype	class:QAudioOutput	access:public	signature:(const QString &category)
QAudioOutput::setNotifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void setNotifyInterval(int milliSeconds);$/;"	prototype	class:QAudioOutput	access:public	signature:(int milliSeconds)
QAudioOutput::setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void setVolume(qreal);$/;"	prototype	class:QAudioOutput	access:public	signature:(qreal)
QAudioOutput::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    QIODevice* start();$/;"	prototype	class:QAudioOutput	access:public	signature:()
QAudioOutput::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void start(QIODevice *device);$/;"	prototype	class:QAudioOutput	access:public	signature:(QIODevice *device)
QAudioOutput::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    QAudio::State state() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
QAudioOutput::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void stateChanged(QAudio::State state);$/;"	prototype	class:QAudioOutput	access:public	signature:(QAudio::State state)
QAudioOutput::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void stop();$/;"	prototype	class:QAudioOutput	access:public	signature:()
QAudioOutput::suspend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void suspend();$/;"	prototype	class:QAudioOutput	access:public	signature:()
QAudioOutput::volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    qreal volume() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
QAudioOutput::~QAudioOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    ~QAudioOutput();$/;"	prototype	class:QAudioOutput	access:public	signature:()
QAudioOutputSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    explicit QAudioOutputSelectorControl(QObject *parent = nullptr);$/;"	prototype	class:QAudioOutputSelectorControl	access:protected	signature:(QObject *parent = nullptr)
QAudioOutputSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^class Q_MULTIMEDIA_EXPORT QAudioOutputSelectorControl : public QMediaControl$/;"	class	inherits:QMediaControl
QAudioOutputSelectorControl::activeOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    virtual QString activeOutput() const = 0;$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:() const
QAudioOutputSelectorControl::activeOutputChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    void activeOutputChanged(const QString& name);$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:(const QString& name)
QAudioOutputSelectorControl::availableOutputs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    virtual QList<QString> availableOutputs() const = 0;$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:() const
QAudioOutputSelectorControl::availableOutputsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    void availableOutputsChanged();$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:()
QAudioOutputSelectorControl::defaultOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    virtual QString defaultOutput() const = 0;$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:() const
QAudioOutputSelectorControl::outputDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    virtual QString outputDescription(const QString& name) const = 0;$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:(const QString& name) const
QAudioOutputSelectorControl::QAudioOutputSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    explicit QAudioOutputSelectorControl(QObject *parent = nullptr);$/;"	prototype	class:QAudioOutputSelectorControl	access:protected	signature:(QObject *parent = nullptr)
QAudioOutputSelectorControl::setActiveOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    virtual void setActiveOutput(const QString& name) = 0;$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:(const QString& name)
QAudioOutputSelectorControl::~QAudioOutputSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    virtual ~QAudioOutputSelectorControl();$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:()
QAudioProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    explicit QAudioProbe(QObject *parent = nullptr);$/;"	prototype	class:QAudioProbe	access:public	signature:(QObject *parent = nullptr)
QAudioProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^class Q_MULTIMEDIA_EXPORT QAudioProbe : public QObject$/;"	class	inherits:QObject
QAudioProbe::audioBufferProbed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    void audioBufferProbed(const QAudioBuffer &buffer);$/;"	prototype	class:QAudioProbe	access:public	signature:(const QAudioBuffer &buffer)
QAudioProbe::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    QAudioProbePrivate *d;$/;"	member	class:QAudioProbe	access:private
QAudioProbe::flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    void flush();$/;"	prototype	class:QAudioProbe	access:public	signature:()
QAudioProbe::isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    bool isActive() const;$/;"	prototype	class:QAudioProbe	access:public	signature:() const
QAudioProbe::QAudioProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    explicit QAudioProbe(QObject *parent = nullptr);$/;"	prototype	class:QAudioProbe	access:public	signature:(QObject *parent = nullptr)
QAudioProbe::setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    bool setSource(QMediaObject *source);$/;"	prototype	class:QAudioProbe	access:public	signature:(QMediaObject *source)
QAudioProbe::setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    bool setSource(QMediaRecorder *source);$/;"	prototype	class:QAudioProbe	access:public	signature:(QMediaRecorder *source)
QAudioProbe::~QAudioProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    ~QAudioProbe();$/;"	prototype	class:QAudioProbe	access:public	signature:()
QAudioRecorder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    explicit QAudioRecorder(QObject *parent = nullptr);$/;"	prototype	class:QAudioRecorder	access:public	signature:(QObject *parent = nullptr)
QAudioRecorder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^class Q_MULTIMEDIA_EXPORT QAudioRecorder : public QMediaRecorder$/;"	class	inherits:QMediaRecorder
QAudioRecorder::audioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    QString audioInput() const;$/;"	prototype	class:QAudioRecorder	access:public	signature:() const
QAudioRecorder::audioInputChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    void audioInputChanged(const QString& name);$/;"	prototype	class:QAudioRecorder	access:public	signature:(const QString& name)
QAudioRecorder::audioInputDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    QString audioInputDescription(const QString& name) const;$/;"	prototype	class:QAudioRecorder	access:public	signature:(const QString& name) const
QAudioRecorder::audioInputs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    QStringList audioInputs() const;$/;"	prototype	class:QAudioRecorder	access:public	signature:() const
QAudioRecorder::availableAudioInputsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    void availableAudioInputsChanged();$/;"	prototype	class:QAudioRecorder	access:public	signature:()
QAudioRecorder::defaultAudioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    QString defaultAudioInput() const;$/;"	prototype	class:QAudioRecorder	access:public	signature:() const
QAudioRecorder::QAudioRecorder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    explicit QAudioRecorder(QObject *parent = nullptr);$/;"	prototype	class:QAudioRecorder	access:public	signature:(QObject *parent = nullptr)
QAudioRecorder::setAudioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    void setAudioInput(const QString& name);$/;"	prototype	class:QAudioRecorder	access:public	signature:(const QString& name)
QAudioRecorder::~QAudioRecorder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    ~QAudioRecorder();$/;"	prototype	class:QAudioRecorder	access:public	signature:()
QAudioRoleControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorolecontrol.h	/^    explicit QAudioRoleControl(QObject *parent = nullptr);$/;"	prototype	class:QAudioRoleControl	access:protected	signature:(QObject *parent = nullptr)
QAudioRoleControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorolecontrol.h	/^class Q_MULTIMEDIA_EXPORT QAudioRoleControl : public QMediaControl$/;"	class	inherits:QMediaControl
QAudioRoleControl::audioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorolecontrol.h	/^    virtual QAudio::Role audioRole() const = 0;$/;"	prototype	class:QAudioRoleControl	access:public	signature:() const
QAudioRoleControl::audioRoleChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorolecontrol.h	/^    void audioRoleChanged(QAudio::Role role);$/;"	prototype	class:QAudioRoleControl	access:public	signature:(QAudio::Role role)
QAudioRoleControl::QAudioRoleControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorolecontrol.h	/^    explicit QAudioRoleControl(QObject *parent = nullptr);$/;"	prototype	class:QAudioRoleControl	access:protected	signature:(QObject *parent = nullptr)
QAudioRoleControl::setAudioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorolecontrol.h	/^    virtual void setAudioRole(QAudio::Role role) = 0;$/;"	prototype	class:QAudioRoleControl	access:public	signature:(QAudio::Role role)
QAudioRoleControl::supportedAudioRoles	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorolecontrol.h	/^    virtual QList<QAudio::Role> supportedAudioRoles() const = 0;$/;"	prototype	class:QAudioRoleControl	access:public	signature:() const
QAudioRoleControl::~QAudioRoleControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorolecontrol.h	/^    virtual ~QAudioRoleControl();$/;"	prototype	class:QAudioRoleControl	access:public	signature:()
QAudioSystemFactoryInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^struct Q_MULTIMEDIA_EXPORT QAudioSystemFactoryInterface$/;"	struct
QAudioSystemFactoryInterface::availableDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    virtual QList<QByteArray> availableDevices(QAudio::Mode) const = 0;$/;"	prototype	struct:QAudioSystemFactoryInterface	access:public	signature:(QAudio::Mode) const
QAudioSystemFactoryInterface::createDeviceInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    virtual QAbstractAudioDeviceInfo* createDeviceInfo(const QByteArray& device, QAudio::Mode mode) = 0;$/;"	prototype	struct:QAudioSystemFactoryInterface	access:public	signature:(const QByteArray& device, QAudio::Mode mode)
QAudioSystemFactoryInterface::createInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    virtual QAbstractAudioInput* createInput(const QByteArray& device) = 0;$/;"	prototype	struct:QAudioSystemFactoryInterface	access:public	signature:(const QByteArray& device)
QAudioSystemFactoryInterface::createOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    virtual QAbstractAudioOutput* createOutput(const QByteArray& device) = 0;$/;"	prototype	struct:QAudioSystemFactoryInterface	access:public	signature:(const QByteArray& device)
QAudioSystemFactoryInterface::~QAudioSystemFactoryInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    virtual ~QAudioSystemFactoryInterface();$/;"	prototype	struct:QAudioSystemFactoryInterface	access:public	signature:()
QAudioSystemPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    explicit QAudioSystemPlugin(QObject *parent = nullptr);$/;"	prototype	class:QAudioSystemPlugin	access:public	signature:(QObject *parent = nullptr)
QAudioSystemPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^class Q_MULTIMEDIA_EXPORT QAudioSystemPlugin : public QObject, public QAudioSystemFactoryInterface$/;"	class	inherits:QObject,QAudioSystemFactoryInterface
QAudioSystemPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    QAbstractAudioDeviceInfo* createDeviceInfo(const QByteArray& device, QAudio::Mode mode) override = 0;$/;"	member	class:QAudioSystemPlugin	access:public
QAudioSystemPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    QAbstractAudioInput* createInput(const QByteArray& device) override = 0;$/;"	member	class:QAudioSystemPlugin	access:public
QAudioSystemPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    QAbstractAudioOutput* createOutput(const QByteArray& device) override = 0;$/;"	member	class:QAudioSystemPlugin	access:public
QAudioSystemPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    QList<QByteArray> availableDevices(QAudio::Mode) const override = 0;$/;"	member	class:QAudioSystemPlugin	access:public
QAudioSystemPlugin::QAudioSystemPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    explicit QAudioSystemPlugin(QObject *parent = nullptr);$/;"	prototype	class:QAudioSystemPlugin	access:public	signature:(QObject *parent = nullptr)
QAudioSystemPlugin::~QAudioSystemPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    ~QAudioSystemPlugin();$/;"	prototype	class:QAudioSystemPlugin	access:public	signature:()
QAudioSystemPluginExtension	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiosystempluginext_p.h	/^struct Q_MULTIMEDIA_EXPORT QAudioSystemPluginExtension$/;"	struct
QAudioSystemPluginExtension::defaultDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiosystempluginext_p.h	/^    virtual QByteArray defaultDevice(QAudio::Mode) const = 0;$/;"	prototype	struct:QAudioSystemPluginExtension	access:public	signature:(QAudio::Mode) const
QAudioSystemPluginExtension::~QAudioSystemPluginExtension	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiosystempluginext_p.h	/^    virtual ~QAudioSystemPluginExtension();$/;"	prototype	struct:QAudioSystemPluginExtension	access:public	signature:()
QCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    explicit QCamera(const QByteArray& deviceName, QObject *parent = nullptr);$/;"	prototype	class:QCamera	access:public	signature:(const QByteArray& deviceName, QObject *parent = nullptr)
QCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    explicit QCamera(const QCameraInfo& cameraInfo, QObject *parent = nullptr);$/;"	prototype	class:QCamera	access:public	signature:(const QCameraInfo& cameraInfo, QObject *parent = nullptr)
QCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    explicit QCamera(QCamera::Position position, QObject *parent = nullptr);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::Position position, QObject *parent = nullptr)
QCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    explicit QCamera(QObject *parent = nullptr);$/;"	prototype	class:QCamera	access:public	signature:(QObject *parent = nullptr)
QCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^class Q_MULTIMEDIA_EXPORT QCamera : public QMediaObject$/;"	class	inherits:QMediaObject
QCamera::ActiveState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        ActiveState$/;"	enumerator	enum:QCamera::State
QCamera::ActiveStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        ActiveStatus$/;"	enumerator	enum:QCamera::Status
QCamera::availableDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QT_DEPRECATED static QList<QByteArray> availableDevices();$/;"	prototype	class:QCamera	access:public	signature:()
QCamera::BackFace	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        BackFace,$/;"	enumerator	enum:QCamera::Position
QCamera::CameraError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        CameraError,$/;"	enumerator	enum:QCamera::Error
QCamera::captureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    CaptureModes captureMode() const;$/;"	prototype	class:QCamera	access:public	signature:() const
QCamera::CaptureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum CaptureMode$/;"	enum	class:QCamera	access:public
QCamera::captureModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void captureModeChanged(QCamera::CaptureModes);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::CaptureModes)
QCamera::CaptureStillImage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        CaptureStillImage = 0x01,$/;"	enumerator	enum:QCamera::CaptureMode
QCamera::CaptureVideo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        CaptureVideo = 0x02$/;"	enumerator	enum:QCamera::CaptureMode
QCamera::CaptureViewfinder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        CaptureViewfinder = 0,$/;"	enumerator	enum:QCamera::CaptureMode
QCamera::deviceDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QT_DEPRECATED static QString deviceDescription(const QByteArray &device);$/;"	prototype	class:QCamera	access:public	signature:(const QByteArray &device)
QCamera::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_error(int, const QString &))$/;"	prototype	class:QCamera	access:private	signature:()
QCamera::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_preparePropertyChange(int))$/;"	prototype	class:QCamera	access:private	signature:()
QCamera::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_restartCamera())$/;"	prototype	class:QCamera	access:private	signature:()
QCamera::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_updateLockStatus(QCamera::LockType, QCamera::LockStatus, QCamera::LockChangeReason))$/;"	prototype	class:QCamera	access:private	signature:()
QCamera::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_updateState(QCamera::State))$/;"	prototype	class:QCamera	access:private	signature:()
QCamera::Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum Error$/;"	enum	class:QCamera	access:public
QCamera::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    Error error() const;$/;"	prototype	class:QCamera	access:public	signature:() const
QCamera::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void error(QCamera::Error);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::Error)
QCamera::errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QString errorString() const;$/;"	prototype	class:QCamera	access:public	signature:() const
QCamera::exposure	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCameraExposure *exposure() const;$/;"	prototype	class:QCamera	access:public	signature:() const
QCamera::focus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCameraFocus *focus() const;$/;"	prototype	class:QCamera	access:public	signature:() const
QCamera::FrameRateRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    struct FrameRateRange$/;"	struct	class:QCamera	access:public
QCamera::FrameRateRange::maximumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^            , maximumFrameRate(maximum)$/;"	function	struct:QCamera::FrameRateRange	access:public	signature:(maximum)
QCamera::FrameRateRange::maximumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        qreal maximumFrameRate;$/;"	member	struct:QCamera::FrameRateRange	access:public
QCamera::FrameRateRange::minimumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        qreal minimumFrameRate;$/;"	member	struct:QCamera::FrameRateRange	access:public
QCamera::FrameRateRange::Q_DECL_NOTHROW	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        Q_DECL_CONSTEXPR FrameRateRange() Q_DECL_NOTHROW$/;"	member	struct:QCamera::FrameRateRange	access:public
QCamera::FrameRateRange::Q_DECL_NOTHROW	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        Q_DECL_CONSTEXPR FrameRateRange(qreal minimum, qreal maximum) Q_DECL_NOTHROW$/;"	member	struct:QCamera::FrameRateRange	access:public
QCamera::FrontFace	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        FrontFace$/;"	enumerator	enum:QCamera::Position
QCamera::imageProcessing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCameraImageProcessing *imageProcessing() const;$/;"	prototype	class:QCamera	access:public	signature:() const
QCamera::InvalidRequestError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        InvalidRequestError,$/;"	enumerator	enum:QCamera::Error
QCamera::isCaptureModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    bool isCaptureModeSupported(CaptureModes mode) const;$/;"	prototype	class:QCamera	access:public	signature:(CaptureModes mode) const
QCamera::load	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void load();$/;"	prototype	class:QCamera	access:public	signature:()
QCamera::LoadedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LoadedState,$/;"	enumerator	enum:QCamera::State
QCamera::LoadedStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LoadedStatus,$/;"	enumerator	enum:QCamera::Status
QCamera::LoadingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LoadingStatus,$/;"	enumerator	enum:QCamera::Status
QCamera::LockAcquired	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LockAcquired,$/;"	enumerator	enum:QCamera::LockChangeReason
QCamera::LockChangeReason	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum LockChangeReason {$/;"	enum	class:QCamera	access:public
QCamera::Locked	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        Locked$/;"	enumerator	enum:QCamera::LockStatus
QCamera::locked	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void locked();$/;"	prototype	class:QCamera	access:public	signature:()
QCamera::LockExposure	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LockExposure = 0x01,$/;"	enumerator	enum:QCamera::LockType
QCamera::LockFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LockFailed,$/;"	enumerator	enum:QCamera::LockChangeReason
QCamera::lockFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void lockFailed();$/;"	prototype	class:QCamera	access:public	signature:()
QCamera::LockFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LockFocus = 0x04$/;"	enumerator	enum:QCamera::LockType
QCamera::LockLost	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LockLost,$/;"	enumerator	enum:QCamera::LockChangeReason
QCamera::LockStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum LockStatus$/;"	enum	class:QCamera	access:public
QCamera::lockStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCamera::LockStatus lockStatus() const;$/;"	prototype	class:QCamera	access:public	signature:() const
QCamera::lockStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCamera::LockStatus lockStatus(QCamera::LockType lock) const;$/;"	prototype	class:QCamera	access:public	signature:(QCamera::LockType lock) const
QCamera::lockStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void lockStatusChanged(QCamera::LockStatus status, QCamera::LockChangeReason reason);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::LockStatus status, QCamera::LockChangeReason reason)
QCamera::lockStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void lockStatusChanged(QCamera::LockType lock, QCamera::LockStatus status, QCamera::LockChangeReason reason);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::LockType lock, QCamera::LockStatus status, QCamera::LockChangeReason reason)
QCamera::LockTemporaryLost	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LockTemporaryLost$/;"	enumerator	enum:QCamera::LockChangeReason
QCamera::LockType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum LockType$/;"	enum	class:QCamera	access:public
QCamera::LockWhiteBalance	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        LockWhiteBalance = 0x02,$/;"	enumerator	enum:QCamera::LockType
QCamera::NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        NoError,$/;"	enumerator	enum:QCamera::Error
QCamera::NoLock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        NoLock = 0,$/;"	enumerator	enum:QCamera::LockType
QCamera::NotSupportedFeatureError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        NotSupportedFeatureError$/;"	enumerator	enum:QCamera::Error
QCamera::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QMultimedia::AvailabilityStatus availability() const override;$/;"	member	class:QCamera	access:public
QCamera::Position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum Position$/;"	enum	class:QCamera	access:public
QCamera::QCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    explicit QCamera(const QByteArray& deviceName, QObject *parent = nullptr);$/;"	prototype	class:QCamera	access:public	signature:(const QByteArray& deviceName, QObject *parent = nullptr)
QCamera::QCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    explicit QCamera(const QCameraInfo& cameraInfo, QObject *parent = nullptr);$/;"	prototype	class:QCamera	access:public	signature:(const QCameraInfo& cameraInfo, QObject *parent = nullptr)
QCamera::QCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    explicit QCamera(QCamera::Position position, QObject *parent = nullptr);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::Position position, QObject *parent = nullptr)
QCamera::QCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    explicit QCamera(QObject *parent = nullptr);$/;"	prototype	class:QCamera	access:public	signature:(QObject *parent = nullptr)
QCamera::requestedLocks	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCamera::LockTypes requestedLocks() const;$/;"	prototype	class:QCamera	access:public	signature:() const
QCamera::searchAndLock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void searchAndLock();$/;"	prototype	class:QCamera	access:public	signature:()
QCamera::searchAndLock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void searchAndLock(QCamera::LockTypes locks);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::LockTypes locks)
QCamera::Searching	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        Searching,$/;"	enumerator	enum:QCamera::LockStatus
QCamera::ServiceMissingError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        ServiceMissingError,$/;"	enumerator	enum:QCamera::Error
QCamera::setCaptureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void setCaptureMode(QCamera::CaptureModes mode);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::CaptureModes mode)
QCamera::setViewfinder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void setViewfinder(QAbstractVideoSurface *surface);$/;"	prototype	class:QCamera	access:public	signature:(QAbstractVideoSurface *surface)
QCamera::setViewfinder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void setViewfinder(QGraphicsVideoItem *viewfinder);$/;"	prototype	class:QCamera	access:public	signature:(QGraphicsVideoItem *viewfinder)
QCamera::setViewfinder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void setViewfinder(QVideoWidget *viewfinder);$/;"	prototype	class:QCamera	access:public	signature:(QVideoWidget *viewfinder)
QCamera::setViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void setViewfinderSettings(const QCameraViewfinderSettings &settings);$/;"	prototype	class:QCamera	access:public	signature:(const QCameraViewfinderSettings &settings)
QCamera::StandbyStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        StandbyStatus,$/;"	enumerator	enum:QCamera::Status
QCamera::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void start();$/;"	prototype	class:QCamera	access:public	signature:()
QCamera::StartingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        StartingStatus,$/;"	enumerator	enum:QCamera::Status
QCamera::State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum State {$/;"	enum	class:QCamera	access:public
QCamera::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    State state() const;$/;"	prototype	class:QCamera	access:public	signature:() const
QCamera::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void stateChanged(QCamera::State state);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::State state)
QCamera::Status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum Status {$/;"	enum	class:QCamera	access:public
QCamera::status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    Status status() const;$/;"	prototype	class:QCamera	access:public	signature:() const
QCamera::statusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void statusChanged(QCamera::Status status);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::Status status)
QCamera::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void stop();$/;"	prototype	class:QCamera	access:public	signature:()
QCamera::StoppingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        StoppingStatus,$/;"	enumerator	enum:QCamera::Status
QCamera::supportedLocks	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCamera::LockTypes supportedLocks() const;$/;"	prototype	class:QCamera	access:public	signature:() const
QCamera::supportedViewfinderFrameRateRanges	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QList<FrameRateRange> supportedViewfinderFrameRateRanges($/;"	prototype	class:QCamera	access:public	signature:( const QCameraViewfinderSettings &settings = QCameraViewfinderSettings()) const
QCamera::supportedViewfinderPixelFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QList<QVideoFrame::PixelFormat> supportedViewfinderPixelFormats($/;"	prototype	class:QCamera	access:public	signature:( const QCameraViewfinderSettings &settings = QCameraViewfinderSettings()) const
QCamera::supportedViewfinderResolutions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QList<QSize> supportedViewfinderResolutions($/;"	prototype	class:QCamera	access:public	signature:( const QCameraViewfinderSettings &settings = QCameraViewfinderSettings()) const
QCamera::supportedViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QList<QCameraViewfinderSettings> supportedViewfinderSettings($/;"	prototype	class:QCamera	access:public	signature:( const QCameraViewfinderSettings &settings = QCameraViewfinderSettings()) const
QCamera::UnavailableStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        UnavailableStatus,$/;"	enumerator	enum:QCamera::Status
QCamera::unload	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void unload();$/;"	prototype	class:QCamera	access:public	signature:()
QCamera::UnloadedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        UnloadedState,$/;"	enumerator	enum:QCamera::State
QCamera::UnloadedStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        UnloadedStatus,$/;"	enumerator	enum:QCamera::Status
QCamera::UnloadingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        UnloadingStatus,$/;"	enumerator	enum:QCamera::Status
QCamera::unlock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void unlock();$/;"	prototype	class:QCamera	access:public	signature:()
QCamera::unlock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void unlock(QCamera::LockTypes locks);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::LockTypes locks)
QCamera::Unlocked	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        Unlocked,$/;"	enumerator	enum:QCamera::LockStatus
QCamera::UnspecifiedPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        UnspecifiedPosition,$/;"	enumerator	enum:QCamera::Position
QCamera::UserRequest	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        UserRequest,$/;"	enumerator	enum:QCamera::LockChangeReason
QCamera::viewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCameraViewfinderSettings viewfinderSettings() const;$/;"	prototype	class:QCamera	access:public	signature:() const
QCamera::~QCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    ~QCamera();$/;"	prototype	class:QCamera	access:public	signature:()
QCameraCaptureBufferFormatControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturebufferformatcontrol.h	/^    explicit QCameraCaptureBufferFormatControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraCaptureBufferFormatControl	access:protected	signature:(QObject *parent = nullptr)
QCameraCaptureBufferFormatControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturebufferformatcontrol.h	/^class Q_MULTIMEDIA_EXPORT QCameraCaptureBufferFormatControl : public QMediaControl$/;"	class	inherits:QMediaControl
QCameraCaptureBufferFormatControl::bufferFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturebufferformatcontrol.h	/^    virtual QVideoFrame::PixelFormat bufferFormat() const = 0;$/;"	prototype	class:QCameraCaptureBufferFormatControl	access:public	signature:() const
QCameraCaptureBufferFormatControl::bufferFormatChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturebufferformatcontrol.h	/^    void bufferFormatChanged(QVideoFrame::PixelFormat format);$/;"	prototype	class:QCameraCaptureBufferFormatControl	access:public	signature:(QVideoFrame::PixelFormat format)
QCameraCaptureBufferFormatControl::QCameraCaptureBufferFormatControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturebufferformatcontrol.h	/^    explicit QCameraCaptureBufferFormatControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraCaptureBufferFormatControl	access:protected	signature:(QObject *parent = nullptr)
QCameraCaptureBufferFormatControl::setBufferFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturebufferformatcontrol.h	/^    virtual void setBufferFormat(QVideoFrame::PixelFormat format) = 0;$/;"	prototype	class:QCameraCaptureBufferFormatControl	access:public	signature:(QVideoFrame::PixelFormat format)
QCameraCaptureBufferFormatControl::supportedBufferFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturebufferformatcontrol.h	/^    virtual QList<QVideoFrame::PixelFormat> supportedBufferFormats() const = 0;$/;"	prototype	class:QCameraCaptureBufferFormatControl	access:public	signature:() const
QCameraCaptureBufferFormatControl::~QCameraCaptureBufferFormatControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturebufferformatcontrol.h	/^    ~QCameraCaptureBufferFormatControl();$/;"	prototype	class:QCameraCaptureBufferFormatControl	access:public	signature:()
QCameraCaptureDestinationControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturedestinationcontrol.h	/^    explicit QCameraCaptureDestinationControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraCaptureDestinationControl	access:protected	signature:(QObject *parent = nullptr)
QCameraCaptureDestinationControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturedestinationcontrol.h	/^class Q_MULTIMEDIA_EXPORT QCameraCaptureDestinationControl : public QMediaControl$/;"	class	inherits:QMediaControl
QCameraCaptureDestinationControl::captureDestination	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturedestinationcontrol.h	/^    virtual QCameraImageCapture::CaptureDestinations captureDestination() const = 0;$/;"	prototype	class:QCameraCaptureDestinationControl	access:public	signature:() const
QCameraCaptureDestinationControl::captureDestinationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturedestinationcontrol.h	/^    void captureDestinationChanged(QCameraImageCapture::CaptureDestinations destination);$/;"	prototype	class:QCameraCaptureDestinationControl	access:public	signature:(QCameraImageCapture::CaptureDestinations destination)
QCameraCaptureDestinationControl::isCaptureDestinationSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturedestinationcontrol.h	/^    virtual bool isCaptureDestinationSupported(QCameraImageCapture::CaptureDestinations destination) const = 0;$/;"	prototype	class:QCameraCaptureDestinationControl	access:public	signature:(QCameraImageCapture::CaptureDestinations destination) const
QCameraCaptureDestinationControl::QCameraCaptureDestinationControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturedestinationcontrol.h	/^    explicit QCameraCaptureDestinationControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraCaptureDestinationControl	access:protected	signature:(QObject *parent = nullptr)
QCameraCaptureDestinationControl::setCaptureDestination	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturedestinationcontrol.h	/^    virtual void setCaptureDestination(QCameraImageCapture::CaptureDestinations destination) = 0;$/;"	prototype	class:QCameraCaptureDestinationControl	access:public	signature:(QCameraImageCapture::CaptureDestinations destination)
QCameraCaptureDestinationControl::~QCameraCaptureDestinationControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturedestinationcontrol.h	/^    ~QCameraCaptureDestinationControl();$/;"	prototype	class:QCameraCaptureDestinationControl	access:public	signature:()
QCameraControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    explicit QCameraControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraControl	access:protected	signature:(QObject *parent = nullptr)
QCameraControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^class Q_MULTIMEDIA_EXPORT QCameraControl : public QMediaControl$/;"	class	inherits:QMediaControl
QCameraControl::canChangeProperty	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    virtual bool canChangeProperty(PropertyChangeType changeType, QCamera::Status status) const = 0;$/;"	prototype	class:QCameraControl	access:public	signature:(PropertyChangeType changeType, QCamera::Status status) const
QCameraControl::CaptureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^        CaptureMode = 1,$/;"	enumerator	enum:QCameraControl::PropertyChangeType
QCameraControl::captureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    virtual QCamera::CaptureModes captureMode() const = 0;$/;"	prototype	class:QCameraControl	access:public	signature:() const
QCameraControl::captureModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    void captureModeChanged(QCamera::CaptureModes mode);$/;"	prototype	class:QCameraControl	access:public	signature:(QCamera::CaptureModes mode)
QCameraControl::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    void error(int error, const QString &errorString);$/;"	prototype	class:QCameraControl	access:public	signature:(int error, const QString &errorString)
QCameraControl::ImageEncodingSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^        ImageEncodingSettings = 2,$/;"	enumerator	enum:QCameraControl::PropertyChangeType
QCameraControl::isCaptureModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    virtual bool isCaptureModeSupported(QCamera::CaptureModes mode) const = 0;$/;"	prototype	class:QCameraControl	access:public	signature:(QCamera::CaptureModes mode) const
QCameraControl::PropertyChangeType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    enum PropertyChangeType {$/;"	enum	class:QCameraControl	access:public
QCameraControl::QCameraControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    explicit QCameraControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraControl	access:protected	signature:(QObject *parent = nullptr)
QCameraControl::setCaptureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    virtual void setCaptureMode(QCamera::CaptureModes) = 0;$/;"	prototype	class:QCameraControl	access:public	signature:(QCamera::CaptureModes)
QCameraControl::setState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    virtual void setState(QCamera::State state) = 0;$/;"	prototype	class:QCameraControl	access:public	signature:(QCamera::State state)
QCameraControl::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    virtual QCamera::State state() const = 0;$/;"	prototype	class:QCameraControl	access:public	signature:() const
QCameraControl::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    void stateChanged(QCamera::State);$/;"	prototype	class:QCameraControl	access:public	signature:(QCamera::State)
QCameraControl::status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    virtual QCamera::Status status() const = 0;$/;"	prototype	class:QCameraControl	access:public	signature:() const
QCameraControl::statusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    void statusChanged(QCamera::Status);$/;"	prototype	class:QCameraControl	access:public	signature:(QCamera::Status)
QCameraControl::VideoEncodingSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^        VideoEncodingSettings = 3,$/;"	enumerator	enum:QCameraControl::PropertyChangeType
QCameraControl::Viewfinder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^        Viewfinder = 4,$/;"	enumerator	enum:QCameraControl::PropertyChangeType
QCameraControl::ViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^        ViewfinderSettings = 5$/;"	enumerator	enum:QCameraControl::PropertyChangeType
QCameraControl::~QCameraControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    ~QCameraControl();$/;"	prototype	class:QCameraControl	access:public	signature:()
QCameraExposure	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    explicit QCameraExposure(QCamera *parent = nullptr);$/;"	prototype	class:QCameraExposure	access:private	signature:(QCamera *parent = nullptr)
QCameraExposure	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^class Q_MULTIMEDIA_EXPORT QCameraExposure : public QObject$/;"	class	inherits:QObject
QCameraExposure::aperture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    qreal aperture() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
QCameraExposure::apertureChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void apertureChanged(qreal);$/;"	prototype	class:QCameraExposure	access:public	signature:(qreal)
QCameraExposure::apertureRangeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void apertureRangeChanged();$/;"	prototype	class:QCameraExposure	access:public	signature:()
QCameraExposure::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_exposureParameterChanged(int))$/;"	prototype	class:QCameraExposure	access:private	signature:()
QCameraExposure::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_exposureParameterRangeChanged(int))$/;"	prototype	class:QCameraExposure	access:private	signature:()
QCameraExposure::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    QCameraExposurePrivate *d_ptr;$/;"	member	class:QCameraExposure	access:private
QCameraExposure::ExposureAction	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureAction = 11,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureAuto	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureAuto = 0,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureBacklight	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureBacklight = 4,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureBarcode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureBarcode = 20,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureBeach	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureBeach = 8,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureCandlelight	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureCandlelight = 19,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::exposureCompensation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    qreal exposureCompensation() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
QCameraExposure::exposureCompensationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void exposureCompensationChanged(qreal);$/;"	prototype	class:QCameraExposure	access:public	signature:(qreal)
QCameraExposure::ExposureFireworks	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureFireworks = 17,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureLandscape	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureLandscape = 12,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureLargeAperture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureLargeAperture = 9,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureManual	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureManual = 1,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    enum ExposureMode {$/;"	enum	class:QCameraExposure	access:public
QCameraExposure::exposureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    ExposureMode exposureMode() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
QCameraExposure::ExposureModeVendor	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureModeVendor = 1000$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureNight	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureNight = 3,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureNightPortrait	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureNightPortrait = 13,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureParty	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureParty = 18,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposurePortrait	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposurePortrait = 2,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureSmallAperture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureSmallAperture = 10,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureSnow	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureSnow = 7,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureSports	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureSports = 6,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureSpotlight	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureSpotlight = 5,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureSteadyPhoto	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureSteadyPhoto = 16,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureSunset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureSunset = 15,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::ExposureTheatre	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        ExposureTheatre = 14,$/;"	enumerator	enum:QCameraExposure::ExposureMode
QCameraExposure::FlashAuto	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashAuto = 0x1,$/;"	enumerator	enum:QCameraExposure::FlashMode
QCameraExposure::FlashFill	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashFill = 0x10,$/;"	enumerator	enum:QCameraExposure::FlashMode
QCameraExposure::FlashManual	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashManual = 0x200$/;"	enumerator	enum:QCameraExposure::FlashMode
QCameraExposure::FlashMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    enum FlashMode {$/;"	enum	class:QCameraExposure	access:public
QCameraExposure::flashMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    FlashModes flashMode() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
QCameraExposure::FlashOff	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashOff = 0x2,$/;"	enumerator	enum:QCameraExposure::FlashMode
QCameraExposure::FlashOn	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashOn = 0x4,$/;"	enumerator	enum:QCameraExposure::FlashMode
QCameraExposure::flashReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void flashReady(bool);$/;"	prototype	class:QCameraExposure	access:public	signature:(bool)
QCameraExposure::FlashRedEyeReduction	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashRedEyeReduction  = 0x8,$/;"	enumerator	enum:QCameraExposure::FlashMode
QCameraExposure::FlashSlowSyncFrontCurtain	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashSlowSyncFrontCurtain = 0x80,$/;"	enumerator	enum:QCameraExposure::FlashMode
QCameraExposure::FlashSlowSyncRearCurtain	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashSlowSyncRearCurtain = 0x100,$/;"	enumerator	enum:QCameraExposure::FlashMode
QCameraExposure::FlashTorch	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashTorch = 0x20,$/;"	enumerator	enum:QCameraExposure::FlashMode
QCameraExposure::FlashVideoLight	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        FlashVideoLight = 0x40,$/;"	enumerator	enum:QCameraExposure::FlashMode
QCameraExposure::isAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    bool isAvailable() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
QCameraExposure::isExposureModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    bool isExposureModeSupported(ExposureMode mode) const;$/;"	prototype	class:QCameraExposure	access:public	signature:(ExposureMode mode) const
QCameraExposure::isFlashModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    bool isFlashModeSupported(FlashModes mode) const;$/;"	prototype	class:QCameraExposure	access:public	signature:(FlashModes mode) const
QCameraExposure::isFlashReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    bool isFlashReady() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
QCameraExposure::isMeteringModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    bool isMeteringModeSupported(MeteringMode mode) const;$/;"	prototype	class:QCameraExposure	access:public	signature:(MeteringMode mode) const
QCameraExposure::isoSensitivity	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    int isoSensitivity() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
QCameraExposure::isoSensitivityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void isoSensitivityChanged(int);$/;"	prototype	class:QCameraExposure	access:public	signature:(int)
QCameraExposure::MeteringAverage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        MeteringAverage = 2,$/;"	enumerator	enum:QCameraExposure::MeteringMode
QCameraExposure::MeteringMatrix	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        MeteringMatrix = 1,$/;"	enumerator	enum:QCameraExposure::MeteringMode
QCameraExposure::MeteringMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    enum MeteringMode {$/;"	enum	class:QCameraExposure	access:public
QCameraExposure::meteringMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    MeteringMode meteringMode() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
QCameraExposure::MeteringSpot	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^        MeteringSpot = 3$/;"	enumerator	enum:QCameraExposure::MeteringMode
QCameraExposure::QCameraExposure	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    explicit QCameraExposure(QCamera *parent = nullptr);$/;"	prototype	class:QCameraExposure	access:private	signature:(QCamera *parent = nullptr)
QCameraExposure::requestedAperture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    qreal requestedAperture() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
QCameraExposure::requestedIsoSensitivity	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    int requestedIsoSensitivity() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
QCameraExposure::requestedShutterSpeed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    qreal requestedShutterSpeed() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
QCameraExposure::setAutoAperture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setAutoAperture();$/;"	prototype	class:QCameraExposure	access:public	signature:()
QCameraExposure::setAutoIsoSensitivity	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setAutoIsoSensitivity();$/;"	prototype	class:QCameraExposure	access:public	signature:()
QCameraExposure::setAutoShutterSpeed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setAutoShutterSpeed();$/;"	prototype	class:QCameraExposure	access:public	signature:()
QCameraExposure::setExposureCompensation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setExposureCompensation(qreal ev);$/;"	prototype	class:QCameraExposure	access:public	signature:(qreal ev)
QCameraExposure::setExposureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setExposureMode(ExposureMode mode);$/;"	prototype	class:QCameraExposure	access:public	signature:(ExposureMode mode)
QCameraExposure::setFlashMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setFlashMode(FlashModes mode);$/;"	prototype	class:QCameraExposure	access:public	signature:(FlashModes mode)
QCameraExposure::setManualAperture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setManualAperture(qreal aperture);$/;"	prototype	class:QCameraExposure	access:public	signature:(qreal aperture)
QCameraExposure::setManualIsoSensitivity	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setManualIsoSensitivity(int iso);$/;"	prototype	class:QCameraExposure	access:public	signature:(int iso)
QCameraExposure::setManualShutterSpeed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setManualShutterSpeed(qreal seconds);$/;"	prototype	class:QCameraExposure	access:public	signature:(qreal seconds)
QCameraExposure::setMeteringMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setMeteringMode(MeteringMode mode);$/;"	prototype	class:QCameraExposure	access:public	signature:(MeteringMode mode)
QCameraExposure::setSpotMeteringPoint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setSpotMeteringPoint(const QPointF &point);$/;"	prototype	class:QCameraExposure	access:public	signature:(const QPointF &point)
QCameraExposure::shutterSpeed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    qreal shutterSpeed() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
QCameraExposure::shutterSpeedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void shutterSpeedChanged(qreal speed);$/;"	prototype	class:QCameraExposure	access:public	signature:(qreal speed)
QCameraExposure::shutterSpeedRangeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void shutterSpeedRangeChanged();$/;"	prototype	class:QCameraExposure	access:public	signature:()
QCameraExposure::spotMeteringPoint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    QPointF spotMeteringPoint() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
QCameraExposure::supportedApertures	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    QList<qreal> supportedApertures(bool *continuous = nullptr) const;$/;"	prototype	class:QCameraExposure	access:public	signature:(bool *continuous = nullptr) const
QCameraExposure::supportedIsoSensitivities	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    QList<int> supportedIsoSensitivities(bool *continuous = nullptr) const;$/;"	prototype	class:QCameraExposure	access:public	signature:(bool *continuous = nullptr) const
QCameraExposure::supportedShutterSpeeds	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    QList<qreal> supportedShutterSpeeds(bool *continuous = nullptr) const;$/;"	prototype	class:QCameraExposure	access:public	signature:(bool *continuous = nullptr) const
QCameraExposure::~QCameraExposure	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    virtual ~QCameraExposure();$/;"	prototype	class:QCameraExposure	access:private	signature:()
QCameraExposureControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    explicit QCameraExposureControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraExposureControl	access:protected	signature:(QObject *parent = nullptr)
QCameraExposureControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^class Q_MULTIMEDIA_EXPORT QCameraExposureControl : public QMediaControl$/;"	class	inherits:QMediaControl
QCameraExposureControl::actualValue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    virtual QVariant actualValue(ExposureParameter parameter) const = 0;$/;"	prototype	class:QCameraExposureControl	access:public	signature:(ExposureParameter parameter) const
QCameraExposureControl::actualValueChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    void actualValueChanged(int parameter);$/;"	prototype	class:QCameraExposureControl	access:public	signature:(int parameter)
QCameraExposureControl::Aperture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        Aperture,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
QCameraExposureControl::ExposureCompensation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        ExposureCompensation,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
QCameraExposureControl::ExposureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        ExposureMode,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
QCameraExposureControl::ExposureParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    enum ExposureParameter {$/;"	enum	class:QCameraExposureControl	access:public
QCameraExposureControl::ExtendedExposureParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        ExtendedExposureParameter = 1000$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
QCameraExposureControl::FlashCompensation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        FlashCompensation,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
QCameraExposureControl::FlashPower	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        FlashPower,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
QCameraExposureControl::ISO	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        ISO,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
QCameraExposureControl::isParameterSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    virtual bool isParameterSupported(ExposureParameter parameter) const = 0;$/;"	prototype	class:QCameraExposureControl	access:public	signature:(ExposureParameter parameter) const
QCameraExposureControl::MeteringMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        MeteringMode,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
QCameraExposureControl::parameterRangeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    void parameterRangeChanged(int parameter);$/;"	prototype	class:QCameraExposureControl	access:public	signature:(int parameter)
QCameraExposureControl::QCameraExposureControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    explicit QCameraExposureControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraExposureControl	access:protected	signature:(QObject *parent = nullptr)
QCameraExposureControl::requestedValue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    virtual QVariant requestedValue(ExposureParameter parameter) const = 0;$/;"	prototype	class:QCameraExposureControl	access:public	signature:(ExposureParameter parameter) const
QCameraExposureControl::requestedValueChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    void requestedValueChanged(int parameter);$/;"	prototype	class:QCameraExposureControl	access:public	signature:(int parameter)
QCameraExposureControl::setValue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    virtual bool setValue(ExposureParameter parameter, const QVariant& value) = 0;$/;"	prototype	class:QCameraExposureControl	access:public	signature:(ExposureParameter parameter, const QVariant& value)
QCameraExposureControl::ShutterSpeed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        ShutterSpeed,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
QCameraExposureControl::SpotMeteringPoint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        SpotMeteringPoint,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
QCameraExposureControl::supportedParameterRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    virtual QVariantList supportedParameterRange(ExposureParameter parameter, bool *continuous) const = 0;$/;"	prototype	class:QCameraExposureControl	access:public	signature:(ExposureParameter parameter, bool *continuous) const
QCameraExposureControl::TorchPower	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        TorchPower,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
QCameraExposureControl::~QCameraExposureControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    ~QCameraExposureControl();$/;"	prototype	class:QCameraExposureControl	access:public	signature:()
QCameraFeedbackControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    explicit QCameraFeedbackControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraFeedbackControl	access:protected	signature:(QObject *parent = nullptr)
QCameraFeedbackControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^class Q_MULTIMEDIA_EXPORT QCameraFeedbackControl : public QMediaControl$/;"	class	inherits:QMediaControl
QCameraFeedbackControl::AutoFocusFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        AutoFocusFailed$/;"	enumerator	enum:QCameraFeedbackControl::EventType
QCameraFeedbackControl::AutoFocusInProgress	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        AutoFocusInProgress,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
QCameraFeedbackControl::AutoFocusLocked	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        AutoFocusLocked,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
QCameraFeedbackControl::EventType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    enum EventType {$/;"	enum	class:QCameraFeedbackControl	access:public
QCameraFeedbackControl::ImageCaptured	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        ImageCaptured,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
QCameraFeedbackControl::ImageError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        ImageError,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
QCameraFeedbackControl::ImageSaved	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        ImageSaved,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
QCameraFeedbackControl::isEventFeedbackEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    virtual bool isEventFeedbackEnabled(EventType) const = 0;$/;"	prototype	class:QCameraFeedbackControl	access:public	signature:(EventType) const
QCameraFeedbackControl::isEventFeedbackLocked	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    virtual bool isEventFeedbackLocked(EventType) const = 0;$/;"	prototype	class:QCameraFeedbackControl	access:public	signature:(EventType) const
QCameraFeedbackControl::QCameraFeedbackControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    explicit QCameraFeedbackControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraFeedbackControl	access:protected	signature:(QObject *parent = nullptr)
QCameraFeedbackControl::RecordingInProgress	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        RecordingInProgress,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
QCameraFeedbackControl::RecordingStarted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        RecordingStarted,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
QCameraFeedbackControl::RecordingStopped	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        RecordingStopped,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
QCameraFeedbackControl::resetEventFeedback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    virtual void resetEventFeedback(EventType) = 0;$/;"	prototype	class:QCameraFeedbackControl	access:public	signature:(EventType)
QCameraFeedbackControl::setEventFeedbackEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    virtual bool setEventFeedbackEnabled(EventType, bool) = 0;$/;"	prototype	class:QCameraFeedbackControl	access:public	signature:(EventType, bool)
QCameraFeedbackControl::setEventFeedbackSound	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    virtual bool setEventFeedbackSound(EventType, const QString &filePath) = 0;$/;"	prototype	class:QCameraFeedbackControl	access:public	signature:(EventType, const QString &filePath)
QCameraFeedbackControl::ViewfinderStarted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        ViewfinderStarted = 1,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
QCameraFeedbackControl::ViewfinderStopped	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        ViewfinderStopped,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
QCameraFeedbackControl::~QCameraFeedbackControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    ~QCameraFeedbackControl();$/;"	prototype	class:QCameraFeedbackControl	access:public	signature:()
QCameraFlashControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^    explicit QCameraFlashControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraFlashControl	access:protected	signature:(QObject *parent = nullptr)
QCameraFlashControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^class Q_MULTIMEDIA_EXPORT QCameraFlashControl : public QMediaControl$/;"	class	inherits:QMediaControl
QCameraFlashControl::flashMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^    virtual QCameraExposure::FlashModes flashMode() const = 0;$/;"	prototype	class:QCameraFlashControl	access:public	signature:() const
QCameraFlashControl::flashReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^    void flashReady(bool);$/;"	prototype	class:QCameraFlashControl	access:public	signature:(bool)
QCameraFlashControl::isFlashModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^    virtual bool isFlashModeSupported(QCameraExposure::FlashModes mode) const = 0;$/;"	prototype	class:QCameraFlashControl	access:public	signature:(QCameraExposure::FlashModes mode) const
QCameraFlashControl::isFlashReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^    virtual bool isFlashReady() const = 0;$/;"	prototype	class:QCameraFlashControl	access:public	signature:() const
QCameraFlashControl::QCameraFlashControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^    explicit QCameraFlashControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraFlashControl	access:protected	signature:(QObject *parent = nullptr)
QCameraFlashControl::setFlashMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^    virtual void setFlashMode(QCameraExposure::FlashModes mode) = 0;$/;"	prototype	class:QCameraFlashControl	access:public	signature:(QCameraExposure::FlashModes mode)
QCameraFlashControl::~QCameraFlashControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^    ~QCameraFlashControl();$/;"	prototype	class:QCameraFlashControl	access:public	signature:()
QCameraFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QCameraFocus(QCamera *camera);$/;"	prototype	class:QCameraFocus	access:private	signature:(QCamera *camera)
QCameraFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^class Q_MULTIMEDIA_EXPORT QCameraFocus : public QObject$/;"	class	inherits:QObject
QCameraFocus::AutoFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        AutoFocus = 0x8,$/;"	enumerator	enum:QCameraFocus::FocusMode
QCameraFocus::ContinuousFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        ContinuousFocus = 0x10,$/;"	enumerator	enum:QCameraFocus::FocusMode
QCameraFocus::customFocusPoint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QPointF customFocusPoint() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
QCameraFocus::digitalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    qreal digitalZoom() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
QCameraFocus::digitalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void digitalZoomChanged(qreal);$/;"	prototype	class:QCameraFocus	access:public	signature:(qreal)
QCameraFocus::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QCameraFocusPrivate *d_ptr;$/;"	member	class:QCameraFocus	access:private
QCameraFocus::FocusMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    enum FocusMode {$/;"	enum	class:QCameraFocus	access:public
QCameraFocus::focusMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    FocusModes focusMode() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
QCameraFocus::FocusPointAuto	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        FocusPointAuto,$/;"	enumerator	enum:QCameraFocus::FocusPointMode
QCameraFocus::FocusPointCenter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        FocusPointCenter,$/;"	enumerator	enum:QCameraFocus::FocusPointMode
QCameraFocus::FocusPointCustom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        FocusPointCustom$/;"	enumerator	enum:QCameraFocus::FocusPointMode
QCameraFocus::FocusPointFaceDetection	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        FocusPointFaceDetection,$/;"	enumerator	enum:QCameraFocus::FocusPointMode
QCameraFocus::FocusPointMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    enum FocusPointMode {$/;"	enum	class:QCameraFocus	access:public
QCameraFocus::focusPointMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    FocusPointMode focusPointMode() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
QCameraFocus::focusZones	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QCameraFocusZoneList focusZones() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
QCameraFocus::focusZonesChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void focusZonesChanged();$/;"	prototype	class:QCameraFocus	access:public	signature:()
QCameraFocus::HyperfocalFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        HyperfocalFocus = 0x02,$/;"	enumerator	enum:QCameraFocus::FocusMode
QCameraFocus::InfinityFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        InfinityFocus = 0x04,$/;"	enumerator	enum:QCameraFocus::FocusMode
QCameraFocus::isAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    bool isAvailable() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
QCameraFocus::isFocusModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    bool isFocusModeSupported(FocusModes mode) const;$/;"	prototype	class:QCameraFocus	access:public	signature:(FocusModes mode) const
QCameraFocus::isFocusPointModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    bool isFocusPointModeSupported(FocusPointMode) const;$/;"	prototype	class:QCameraFocus	access:public	signature:(FocusPointMode) const
QCameraFocus::MacroFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        MacroFocus = 0x20$/;"	enumerator	enum:QCameraFocus::FocusMode
QCameraFocus::ManualFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        ManualFocus = 0x1,$/;"	enumerator	enum:QCameraFocus::FocusMode
QCameraFocus::maximumDigitalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    qreal maximumDigitalZoom() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
QCameraFocus::maximumDigitalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void maximumDigitalZoomChanged(qreal);$/;"	prototype	class:QCameraFocus	access:public	signature:(qreal)
QCameraFocus::maximumOpticalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    qreal maximumOpticalZoom() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
QCameraFocus::maximumOpticalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void maximumOpticalZoomChanged(qreal);$/;"	prototype	class:QCameraFocus	access:public	signature:(qreal)
QCameraFocus::opticalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    qreal opticalZoom() const;$/;"	prototype	class:QCameraFocus	access:public	signature:() const
QCameraFocus::opticalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void opticalZoomChanged(qreal);$/;"	prototype	class:QCameraFocus	access:public	signature:(qreal)
QCameraFocus::QCameraFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QCameraFocus(QCamera *camera);$/;"	prototype	class:QCameraFocus	access:private	signature:(QCamera *camera)
QCameraFocus::setCustomFocusPoint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void setCustomFocusPoint(const QPointF &point);$/;"	prototype	class:QCameraFocus	access:public	signature:(const QPointF &point)
QCameraFocus::setFocusMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void setFocusMode(FocusModes mode);$/;"	prototype	class:QCameraFocus	access:public	signature:(FocusModes mode)
QCameraFocus::setFocusPointMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void setFocusPointMode(FocusPointMode mode);$/;"	prototype	class:QCameraFocus	access:public	signature:(FocusPointMode mode)
QCameraFocus::zoomTo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void zoomTo(qreal opticalZoom, qreal digitalZoom);$/;"	prototype	class:QCameraFocus	access:public	signature:(qreal opticalZoom, qreal digitalZoom)
QCameraFocus::~QCameraFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    ~QCameraFocus();$/;"	prototype	class:QCameraFocus	access:private	signature:()
QCameraFocusControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    explicit QCameraFocusControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraFocusControl	access:protected	signature:(QObject *parent = nullptr)
QCameraFocusControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^class Q_MULTIMEDIA_EXPORT QCameraFocusControl : public QMediaControl$/;"	class	inherits:QMediaControl
QCameraFocusControl::customFocusPoint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual QPointF customFocusPoint() const = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:() const
QCameraFocusControl::customFocusPointChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    void customFocusPointChanged(const QPointF &point);$/;"	prototype	class:QCameraFocusControl	access:public	signature:(const QPointF &point)
QCameraFocusControl::focusMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual QCameraFocus::FocusModes focusMode() const = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:() const
QCameraFocusControl::focusModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    void focusModeChanged(QCameraFocus::FocusModes mode);$/;"	prototype	class:QCameraFocusControl	access:public	signature:(QCameraFocus::FocusModes mode)
QCameraFocusControl::focusPointMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual QCameraFocus::FocusPointMode focusPointMode() const = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:() const
QCameraFocusControl::focusPointModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    void focusPointModeChanged(QCameraFocus::FocusPointMode mode);$/;"	prototype	class:QCameraFocusControl	access:public	signature:(QCameraFocus::FocusPointMode mode)
QCameraFocusControl::focusZones	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual QCameraFocusZoneList focusZones() const = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:() const
QCameraFocusControl::focusZonesChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    void focusZonesChanged();$/;"	prototype	class:QCameraFocusControl	access:public	signature:()
QCameraFocusControl::isFocusModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual bool isFocusModeSupported(QCameraFocus::FocusModes mode) const = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:(QCameraFocus::FocusModes mode) const
QCameraFocusControl::isFocusPointModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual bool isFocusPointModeSupported(QCameraFocus::FocusPointMode mode) const = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:(QCameraFocus::FocusPointMode mode) const
QCameraFocusControl::QCameraFocusControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    explicit QCameraFocusControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraFocusControl	access:protected	signature:(QObject *parent = nullptr)
QCameraFocusControl::setCustomFocusPoint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual void setCustomFocusPoint(const QPointF &point) = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:(const QPointF &point)
QCameraFocusControl::setFocusMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual void setFocusMode(QCameraFocus::FocusModes mode) = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:(QCameraFocus::FocusModes mode)
QCameraFocusControl::setFocusPointMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual void setFocusPointMode(QCameraFocus::FocusPointMode mode) = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:(QCameraFocus::FocusPointMode mode)
QCameraFocusControl::~QCameraFocusControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    ~QCameraFocusControl();$/;"	prototype	class:QCameraFocusControl	access:public	signature:()
QCameraFocusZone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QCameraFocusZone();$/;"	prototype	class:QCameraFocusZone	access:public	signature:()
QCameraFocusZone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QCameraFocusZone(const QCameraFocusZone &other);$/;"	prototype	class:QCameraFocusZone	access:public	signature:(const QCameraFocusZone &other)
QCameraFocusZone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QCameraFocusZone(const QRectF &area, FocusZoneStatus status = Selected);$/;"	prototype	class:QCameraFocusZone	access:public	signature:(const QRectF &area, FocusZoneStatus status = Selected)
QCameraFocusZone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^class Q_MULTIMEDIA_EXPORT QCameraFocusZone {$/;"	class
QCameraFocusZone::area	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QRectF area() const;$/;"	prototype	class:QCameraFocusZone	access:public	signature:() const
QCameraFocusZone::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^     QSharedDataPointer<QCameraFocusZoneData> d;$/;"	member	class:QCameraFocusZone	access:private
QCameraFocusZone::Focused	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        Focused$/;"	enumerator	enum:QCameraFocusZone::FocusZoneStatus
QCameraFocusZone::FocusZoneStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    enum FocusZoneStatus {$/;"	enum	class:QCameraFocusZone	access:public
QCameraFocusZone::Invalid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        Invalid,$/;"	enumerator	enum:QCameraFocusZone::FocusZoneStatus
QCameraFocusZone::isValid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    bool isValid() const;$/;"	prototype	class:QCameraFocusZone	access:public	signature:() const
QCameraFocusZone::operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    bool operator!=(const QCameraFocusZone &other) const;$/;"	prototype	class:QCameraFocusZone	access:public	signature:(const QCameraFocusZone &other) const
QCameraFocusZone::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QCameraFocusZone& operator=(const QCameraFocusZone &other);$/;"	prototype	class:QCameraFocusZone	access:public	signature:(const QCameraFocusZone &other)
QCameraFocusZone::operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    bool operator==(const QCameraFocusZone &other) const;$/;"	prototype	class:QCameraFocusZone	access:public	signature:(const QCameraFocusZone &other) const
QCameraFocusZone::QCameraFocusZone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QCameraFocusZone();$/;"	prototype	class:QCameraFocusZone	access:public	signature:()
QCameraFocusZone::QCameraFocusZone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QCameraFocusZone(const QCameraFocusZone &other);$/;"	prototype	class:QCameraFocusZone	access:public	signature:(const QCameraFocusZone &other)
QCameraFocusZone::QCameraFocusZone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    QCameraFocusZone(const QRectF &area, FocusZoneStatus status = Selected);$/;"	prototype	class:QCameraFocusZone	access:public	signature:(const QRectF &area, FocusZoneStatus status = Selected)
QCameraFocusZone::Selected	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        Selected,$/;"	enumerator	enum:QCameraFocusZone::FocusZoneStatus
QCameraFocusZone::setStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void setStatus(FocusZoneStatus status);$/;"	prototype	class:QCameraFocusZone	access:public	signature:(FocusZoneStatus status)
QCameraFocusZone::status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    FocusZoneStatus status() const;$/;"	prototype	class:QCameraFocusZone	access:public	signature:() const
QCameraFocusZone::Unused	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        Unused,$/;"	enumerator	enum:QCameraFocusZone::FocusZoneStatus
QCameraFocusZone::~QCameraFocusZone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    ~QCameraFocusZone();$/;"	prototype	class:QCameraFocusZone	access:public	signature:()
QCameraFocusZoneList	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^typedef QList<QCameraFocusZone> QCameraFocusZoneList;$/;"	typedef
QCameraImageCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    explicit QCameraImageCapture(QMediaObject *mediaObject, QObject *parent = nullptr);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(QMediaObject *mediaObject, QObject *parent = nullptr)
QCameraImageCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^class Q_MULTIMEDIA_EXPORT QCameraImageCapture : public QObject, public QMediaBindableInterface$/;"	class	inherits:QObject,QMediaBindableInterface
QCameraImageCapture::availability	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QMultimedia::AvailabilityStatus availability() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
QCameraImageCapture::bufferFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QVideoFrame::PixelFormat bufferFormat() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
QCameraImageCapture::bufferFormatChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void bufferFormatChanged(QVideoFrame::PixelFormat format);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(QVideoFrame::PixelFormat format)
QCameraImageCapture::cancelCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void cancelCapture();$/;"	prototype	class:QCameraImageCapture	access:public	signature:()
QCameraImageCapture::capture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    int capture(const QString &location = QString());$/;"	prototype	class:QCameraImageCapture	access:public	signature:(const QString &location = QString())
QCameraImageCapture::captureDestination	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    CaptureDestinations captureDestination() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
QCameraImageCapture::CaptureDestination	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    enum CaptureDestination$/;"	enum	class:QCameraImageCapture	access:public
QCameraImageCapture::captureDestinationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void captureDestinationChanged(QCameraImageCapture::CaptureDestinations destination);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(QCameraImageCapture::CaptureDestinations destination)
QCameraImageCapture::CaptureToBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        CaptureToBuffer = 0x02$/;"	enumerator	enum:QCameraImageCapture::CaptureDestination
QCameraImageCapture::CaptureToFile	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        CaptureToFile = 0x01,$/;"	enumerator	enum:QCameraImageCapture::CaptureDestination
QCameraImageCapture::DriveMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    enum DriveMode$/;"	enum	class:QCameraImageCapture	access:public
QCameraImageCapture::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_error(int, int, const QString &))$/;"	prototype	class:QCameraImageCapture	access:private	signature:()
QCameraImageCapture::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_readyChanged(bool))$/;"	prototype	class:QCameraImageCapture	access:private	signature:()
QCameraImageCapture::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_serviceDestroyed())$/;"	prototype	class:QCameraImageCapture	access:private	signature:()
QCameraImageCapture::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QCameraImageCapturePrivate *d_ptr;$/;"	member	class:QCameraImageCapture	access:protected
QCameraImageCapture::encodingSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QImageEncoderSettings encodingSettings() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
QCameraImageCapture::Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    enum Error$/;"	enum	class:QCameraImageCapture	access:public
QCameraImageCapture::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    Error error() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
QCameraImageCapture::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void error(int id, QCameraImageCapture::Error error, const QString &errorString);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(int id, QCameraImageCapture::Error error, const QString &errorString)
QCameraImageCapture::errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QString errorString() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
QCameraImageCapture::FormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        FormatError$/;"	enumerator	enum:QCameraImageCapture::Error
QCameraImageCapture::imageAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void imageAvailable(int id, const QVideoFrame &frame);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(int id, const QVideoFrame &frame)
QCameraImageCapture::imageCaptured	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void imageCaptured(int id, const QImage &preview);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(int id, const QImage &preview)
QCameraImageCapture::imageCodecDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QString imageCodecDescription(const QString &codecName) const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:(const QString &codecName) const
QCameraImageCapture::imageExposed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void imageExposed(int id);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(int id)
QCameraImageCapture::imageMetadataAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void imageMetadataAvailable(int id, const QString &key, const QVariant &value);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(int id, const QString &key, const QVariant &value)
QCameraImageCapture::imageSaved	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void imageSaved(int id, const QString &fileName);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(int id, const QString &fileName)
QCameraImageCapture::isAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    bool isAvailable() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
QCameraImageCapture::isCaptureDestinationSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    bool isCaptureDestinationSupported(CaptureDestinations destination) const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:(CaptureDestinations destination) const
QCameraImageCapture::isReadyForCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    bool isReadyForCapture() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
QCameraImageCapture::NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        NoError,$/;"	enumerator	enum:QCameraImageCapture::Error
QCameraImageCapture::NotReadyError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        NotReadyError,$/;"	enumerator	enum:QCameraImageCapture::Error
QCameraImageCapture::NotSupportedFeatureError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        NotSupportedFeatureError,$/;"	enumerator	enum:QCameraImageCapture::Error
QCameraImageCapture::OutOfSpaceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        OutOfSpaceError,$/;"	enumerator	enum:QCameraImageCapture::Error
QCameraImageCapture::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    bool setMediaObject(QMediaObject *) override;$/;"	member	class:QCameraImageCapture	access:protected
QCameraImageCapture::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QMediaObject *mediaObject() const override;$/;"	member	class:QCameraImageCapture	access:public
QCameraImageCapture::QCameraImageCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    explicit QCameraImageCapture(QMediaObject *mediaObject, QObject *parent = nullptr);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(QMediaObject *mediaObject, QObject *parent = nullptr)
QCameraImageCapture::readyForCaptureChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void readyForCaptureChanged(bool ready);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(bool ready)
QCameraImageCapture::ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        ResourceError,$/;"	enumerator	enum:QCameraImageCapture::Error
QCameraImageCapture::setBufferFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void setBufferFormat(const QVideoFrame::PixelFormat format);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(const QVideoFrame::PixelFormat format)
QCameraImageCapture::setCaptureDestination	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void setCaptureDestination(CaptureDestinations destination);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(CaptureDestinations destination)
QCameraImageCapture::setEncodingSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void setEncodingSettings(const QImageEncoderSettings& settings);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(const QImageEncoderSettings& settings)
QCameraImageCapture::SingleImageCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        SingleImageCapture$/;"	enumerator	enum:QCameraImageCapture::DriveMode
QCameraImageCapture::supportedBufferFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QList<QVideoFrame::PixelFormat> supportedBufferFormats() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
QCameraImageCapture::supportedImageCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QStringList supportedImageCodecs() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
QCameraImageCapture::supportedResolutions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QList<QSize> supportedResolutions(const QImageEncoderSettings &settings = QImageEncoderSettings(),$/;"	prototype	class:QCameraImageCapture	access:public	signature:(const QImageEncoderSettings &settings = QImageEncoderSettings(), bool *continuous = nullptr) const
QCameraImageCapture::~QCameraImageCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    ~QCameraImageCapture();$/;"	prototype	class:QCameraImageCapture	access:public	signature:()
QCameraImageCaptureControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    explicit QCameraImageCaptureControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraImageCaptureControl	access:protected	signature:(QObject *parent = nullptr)
QCameraImageCaptureControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^class Q_MULTIMEDIA_EXPORT QCameraImageCaptureControl : public QMediaControl$/;"	class	inherits:QMediaControl
QCameraImageCaptureControl::cancelCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    virtual void cancelCapture() = 0;$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:()
QCameraImageCaptureControl::capture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    virtual int capture(const QString &fileName) = 0;$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(const QString &fileName)
QCameraImageCaptureControl::driveMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    virtual QCameraImageCapture::DriveMode driveMode() const = 0;$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:() const
QCameraImageCaptureControl::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    void error(int id, int error, const QString &errorString);$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(int id, int error, const QString &errorString)
QCameraImageCaptureControl::imageAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    void imageAvailable(int requestId, const QVideoFrame &buffer);$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(int requestId, const QVideoFrame &buffer)
QCameraImageCaptureControl::imageCaptured	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    void imageCaptured(int requestId, const QImage &preview);$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(int requestId, const QImage &preview)
QCameraImageCaptureControl::imageExposed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    void imageExposed(int requestId);$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(int requestId)
QCameraImageCaptureControl::imageMetadataAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    void imageMetadataAvailable(int id, const QString &key, const QVariant &value);$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(int id, const QString &key, const QVariant &value)
QCameraImageCaptureControl::imageSaved	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    void imageSaved(int requestId, const QString &fileName);$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(int requestId, const QString &fileName)
QCameraImageCaptureControl::isReadyForCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    virtual bool isReadyForCapture() const = 0;$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:() const
QCameraImageCaptureControl::QCameraImageCaptureControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    explicit QCameraImageCaptureControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraImageCaptureControl	access:protected	signature:(QObject *parent = nullptr)
QCameraImageCaptureControl::readyForCaptureChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    void readyForCaptureChanged(bool ready);$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(bool ready)
QCameraImageCaptureControl::setDriveMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    virtual void setDriveMode(QCameraImageCapture::DriveMode mode) = 0;$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(QCameraImageCapture::DriveMode mode)
QCameraImageCaptureControl::~QCameraImageCaptureControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    ~QCameraImageCaptureControl();$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:()
QCameraImageProcessing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    QCameraImageProcessing(QCamera *camera);$/;"	prototype	class:QCameraImageProcessing	access:private	signature:(QCamera *camera)
QCameraImageProcessing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^class Q_MULTIMEDIA_EXPORT QCameraImageProcessing : public QObject$/;"	class	inherits:QObject
QCameraImageProcessing::brightness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    qreal brightness() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
QCameraImageProcessing::colorFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    ColorFilter colorFilter() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
QCameraImageProcessing::ColorFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    enum ColorFilter {$/;"	enum	class:QCameraImageProcessing	access:public
QCameraImageProcessing::ColorFilterAqua	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterAqua,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
QCameraImageProcessing::ColorFilterBlackboard	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterBlackboard,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
QCameraImageProcessing::ColorFilterGrayscale	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterGrayscale,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
QCameraImageProcessing::ColorFilterNegative	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterNegative,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
QCameraImageProcessing::ColorFilterNone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterNone,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
QCameraImageProcessing::ColorFilterPosterize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterPosterize,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
QCameraImageProcessing::ColorFilterSepia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterSepia,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
QCameraImageProcessing::ColorFilterSolarize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterSolarize,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
QCameraImageProcessing::ColorFilterVendor	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterVendor = 1000$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
QCameraImageProcessing::ColorFilterWhiteboard	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        ColorFilterWhiteboard,$/;"	enumerator	enum:QCameraImageProcessing::ColorFilter
QCameraImageProcessing::contrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    qreal contrast() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
QCameraImageProcessing::denoisingLevel	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    qreal denoisingLevel() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
QCameraImageProcessing::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    QCameraImageProcessingPrivate *d_ptr;$/;"	member	class:QCameraImageProcessing	access:private
QCameraImageProcessing::isAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    bool isAvailable() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
QCameraImageProcessing::isColorFilterSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    bool isColorFilterSupported(ColorFilter filter) const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(ColorFilter filter) const
QCameraImageProcessing::isWhiteBalanceModeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    bool isWhiteBalanceModeSupported(WhiteBalanceMode mode) const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(WhiteBalanceMode mode) const
QCameraImageProcessing::manualWhiteBalance	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    qreal manualWhiteBalance() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
QCameraImageProcessing::QCameraImageProcessing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    QCameraImageProcessing(QCamera *camera);$/;"	prototype	class:QCameraImageProcessing	access:private	signature:(QCamera *camera)
QCameraImageProcessing::saturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    qreal saturation() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
QCameraImageProcessing::setBrightness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setBrightness(qreal value);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(qreal value)
QCameraImageProcessing::setColorFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setColorFilter(ColorFilter filter);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(ColorFilter filter)
QCameraImageProcessing::setContrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setContrast(qreal value);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(qreal value)
QCameraImageProcessing::setDenoisingLevel	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setDenoisingLevel(qreal value);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(qreal value)
QCameraImageProcessing::setManualWhiteBalance	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setManualWhiteBalance(qreal colorTemperature);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(qreal colorTemperature)
QCameraImageProcessing::setSaturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setSaturation(qreal value);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(qreal value)
QCameraImageProcessing::setSharpeningLevel	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setSharpeningLevel(qreal value);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(qreal value)
QCameraImageProcessing::setWhiteBalanceMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setWhiteBalanceMode(WhiteBalanceMode mode);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(WhiteBalanceMode mode)
QCameraImageProcessing::sharpeningLevel	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    qreal sharpeningLevel() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
QCameraImageProcessing::WhiteBalanceAuto	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceAuto = 0,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
QCameraImageProcessing::WhiteBalanceCloudy	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceCloudy = 3,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
QCameraImageProcessing::WhiteBalanceFlash	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceFlash = 7,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
QCameraImageProcessing::WhiteBalanceFluorescent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceFluorescent = 6,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
QCameraImageProcessing::WhiteBalanceManual	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceManual = 1,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
QCameraImageProcessing::WhiteBalanceMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    enum WhiteBalanceMode {$/;"	enum	class:QCameraImageProcessing	access:public
QCameraImageProcessing::whiteBalanceMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    WhiteBalanceMode whiteBalanceMode() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
QCameraImageProcessing::WhiteBalanceShade	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceShade = 4,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
QCameraImageProcessing::WhiteBalanceSunlight	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceSunlight = 2,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
QCameraImageProcessing::WhiteBalanceSunset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceSunset = 8,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
QCameraImageProcessing::WhiteBalanceTungsten	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceTungsten = 5,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
QCameraImageProcessing::WhiteBalanceVendor	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceVendor = 1000$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
QCameraImageProcessing::~QCameraImageProcessing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    ~QCameraImageProcessing();$/;"	prototype	class:QCameraImageProcessing	access:private	signature:()
QCameraImageProcessingControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^    explicit QCameraImageProcessingControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraImageProcessingControl	access:protected	signature:(QObject *parent = nullptr)
QCameraImageProcessingControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^class Q_MULTIMEDIA_EXPORT QCameraImageProcessingControl : public QMediaControl$/;"	class	inherits:QMediaControl
QCameraImageProcessingControl::Brightness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        Brightness,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
QCameraImageProcessingControl::BrightnessAdjustment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        BrightnessAdjustment,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
QCameraImageProcessingControl::ColorFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        ColorFilter,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
QCameraImageProcessingControl::ColorTemperature	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        ColorTemperature,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
QCameraImageProcessingControl::Contrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        Contrast,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
QCameraImageProcessingControl::ContrastAdjustment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        ContrastAdjustment,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
QCameraImageProcessingControl::Denoising	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        Denoising,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
QCameraImageProcessingControl::DenoisingAdjustment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        DenoisingAdjustment,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
QCameraImageProcessingControl::ExtendedParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        ExtendedParameter = 1000$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
QCameraImageProcessingControl::isParameterSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^    virtual bool isParameterSupported(ProcessingParameter) const = 0;$/;"	prototype	class:QCameraImageProcessingControl	access:public	signature:(ProcessingParameter) const
QCameraImageProcessingControl::isParameterValueSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^    virtual bool isParameterValueSupported(ProcessingParameter parameter, const QVariant &value) const = 0;$/;"	prototype	class:QCameraImageProcessingControl	access:public	signature:(ProcessingParameter parameter, const QVariant &value) const
QCameraImageProcessingControl::parameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^    virtual QVariant parameter(ProcessingParameter parameter) const = 0;$/;"	prototype	class:QCameraImageProcessingControl	access:public	signature:(ProcessingParameter parameter) const
QCameraImageProcessingControl::ProcessingParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^    enum ProcessingParameter {$/;"	enum	class:QCameraImageProcessingControl	access:public
QCameraImageProcessingControl::QCameraImageProcessingControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^    explicit QCameraImageProcessingControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraImageProcessingControl	access:protected	signature:(QObject *parent = nullptr)
QCameraImageProcessingControl::Saturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        Saturation,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
QCameraImageProcessingControl::SaturationAdjustment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        SaturationAdjustment,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
QCameraImageProcessingControl::setParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^    virtual void setParameter(ProcessingParameter parameter, const QVariant &value) = 0;$/;"	prototype	class:QCameraImageProcessingControl	access:public	signature:(ProcessingParameter parameter, const QVariant &value)
QCameraImageProcessingControl::Sharpening	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        Sharpening,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
QCameraImageProcessingControl::SharpeningAdjustment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        SharpeningAdjustment,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
QCameraImageProcessingControl::WhiteBalancePreset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        WhiteBalancePreset,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
QCameraImageProcessingControl::~QCameraImageProcessingControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^    ~QCameraImageProcessingControl();$/;"	prototype	class:QCameraImageProcessingControl	access:public	signature:()
QCameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    explicit QCameraInfo(const QByteArray &name = QByteArray());$/;"	prototype	class:QCameraInfo	access:public	signature:(const QByteArray &name = QByteArray())
QCameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    explicit QCameraInfo(const QCamera &camera);$/;"	prototype	class:QCameraInfo	access:public	signature:(const QCamera &camera)
QCameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    QCameraInfo(const QCameraInfo& other);$/;"	prototype	class:QCameraInfo	access:public	signature:(const QCameraInfo& other)
QCameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^class Q_MULTIMEDIA_EXPORT QCameraInfo$/;"	class
QCameraInfo::availableCameras	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    static QList<QCameraInfo> availableCameras(QCamera::Position position = QCamera::UnspecifiedPosition);$/;"	prototype	class:QCameraInfo	access:public	signature:(QCamera::Position position = QCamera::UnspecifiedPosition)
QCameraInfo::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    QSharedPointer<QCameraInfoPrivate> d;$/;"	member	class:QCameraInfo	access:private
QCameraInfo::defaultCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    static QCameraInfo defaultCamera();$/;"	prototype	class:QCameraInfo	access:public	signature:()
QCameraInfo::description	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    QString description() const;$/;"	prototype	class:QCameraInfo	access:public	signature:() const
QCameraInfo::deviceName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    QString deviceName() const;$/;"	prototype	class:QCameraInfo	access:public	signature:() const
QCameraInfo::isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    bool isNull() const;$/;"	prototype	class:QCameraInfo	access:public	signature:() const
QCameraInfo::operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    inline bool operator!=(const QCameraInfo &other) const;$/;"	prototype	class:QCameraInfo	access:public	signature:(const QCameraInfo &other) const
QCameraInfo::operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^bool QCameraInfo::operator!=(const QCameraInfo &other) const { return !operator==(other); }$/;"	function	class:QCameraInfo	signature:(const QCameraInfo &other) const
QCameraInfo::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    QCameraInfo& operator=(const QCameraInfo& other);$/;"	prototype	class:QCameraInfo	access:public	signature:(const QCameraInfo& other)
QCameraInfo::operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    bool operator==(const QCameraInfo &other) const;$/;"	prototype	class:QCameraInfo	access:public	signature:(const QCameraInfo &other) const
QCameraInfo::orientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    int orientation() const;$/;"	prototype	class:QCameraInfo	access:public	signature:() const
QCameraInfo::position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    QCamera::Position position() const;$/;"	prototype	class:QCameraInfo	access:public	signature:() const
QCameraInfo::QCameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    explicit QCameraInfo(const QByteArray &name = QByteArray());$/;"	prototype	class:QCameraInfo	access:public	signature:(const QByteArray &name = QByteArray())
QCameraInfo::QCameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    explicit QCameraInfo(const QCamera &camera);$/;"	prototype	class:QCameraInfo	access:public	signature:(const QCamera &camera)
QCameraInfo::QCameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    QCameraInfo(const QCameraInfo& other);$/;"	prototype	class:QCameraInfo	access:public	signature:(const QCameraInfo& other)
QCameraInfo::~QCameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    ~QCameraInfo();$/;"	prototype	class:QCameraInfo	access:public	signature:()
QCameraInfoControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfocontrol.h	/^    explicit QCameraInfoControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraInfoControl	access:protected	signature:(QObject *parent = nullptr)
QCameraInfoControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfocontrol.h	/^class Q_MULTIMEDIA_EXPORT QCameraInfoControl : public QMediaControl$/;"	class	inherits:QMediaControl
QCameraInfoControl::cameraOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfocontrol.h	/^    virtual int cameraOrientation(const QString &deviceName) const = 0;$/;"	prototype	class:QCameraInfoControl	access:public	signature:(const QString &deviceName) const
QCameraInfoControl::cameraPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfocontrol.h	/^    virtual QCamera::Position cameraPosition(const QString &deviceName) const = 0;$/;"	prototype	class:QCameraInfoControl	access:public	signature:(const QString &deviceName) const
QCameraInfoControl::QCameraInfoControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfocontrol.h	/^    explicit QCameraInfoControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraInfoControl	access:protected	signature:(QObject *parent = nullptr)
QCameraInfoControl::~QCameraInfoControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfocontrol.h	/^    virtual ~QCameraInfoControl();$/;"	prototype	class:QCameraInfoControl	access:public	signature:()
QCameraLocksControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^    explicit QCameraLocksControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraLocksControl	access:protected	signature:(QObject *parent = nullptr)
QCameraLocksControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^class Q_MULTIMEDIA_EXPORT QCameraLocksControl : public QMediaControl$/;"	class	inherits:QMediaControl
QCameraLocksControl::lockStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^    virtual QCamera::LockStatus lockStatus(QCamera::LockType lock) const = 0;$/;"	prototype	class:QCameraLocksControl	access:public	signature:(QCamera::LockType lock) const
QCameraLocksControl::lockStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^    void lockStatusChanged(QCamera::LockType type, QCamera::LockStatus status, QCamera::LockChangeReason reason);$/;"	prototype	class:QCameraLocksControl	access:public	signature:(QCamera::LockType type, QCamera::LockStatus status, QCamera::LockChangeReason reason)
QCameraLocksControl::QCameraLocksControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^    explicit QCameraLocksControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraLocksControl	access:protected	signature:(QObject *parent = nullptr)
QCameraLocksControl::searchAndLock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^    virtual void searchAndLock(QCamera::LockTypes locks) = 0;$/;"	prototype	class:QCameraLocksControl	access:public	signature:(QCamera::LockTypes locks)
QCameraLocksControl::supportedLocks	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^    virtual QCamera::LockTypes supportedLocks() const = 0;$/;"	prototype	class:QCameraLocksControl	access:public	signature:() const
QCameraLocksControl::unlock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^    virtual void unlock(QCamera::LockTypes locks) = 0;$/;"	prototype	class:QCameraLocksControl	access:public	signature:(QCamera::LockTypes locks)
QCameraLocksControl::~QCameraLocksControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^    ~QCameraLocksControl();$/;"	prototype	class:QCameraLocksControl	access:public	signature:()
QCameraPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraPrivate():$/;"	function	class:QCameraPrivate	access:public	signature:()
QCameraPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^class QCameraPrivate : public QMediaObjectPrivate$/;"	class	inherits:QMediaObjectPrivate
QCameraPrivate::cameraExposure	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraExposure *cameraExposure;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::cameraFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraFocus *cameraFocus;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::capture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QObject *capture;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::clear	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void clear();$/;"	prototype	class:QCameraPrivate	access:public	signature:()
QCameraPrivate::control	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraControl *control;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::deviceControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QVideoDeviceSelectorControl *deviceControl;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCamera::Error error;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QString errorString;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::imageProcessing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraImageProcessing *imageProcessing;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::infoControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraInfoControl *infoControl;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void init();$/;"	prototype	class:QCameraPrivate	access:public	signature:()
QCameraPrivate::initControls	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void initControls();$/;"	prototype	class:QCameraPrivate	access:public	signature:()
QCameraPrivate::lockChangeReason	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCamera::LockChangeReason lockChangeReason;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::locksControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraLocksControl *locksControl;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::lockStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCamera::LockStatus lockStatus;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::provider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QMediaServiceProvider *provider;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::QCameraPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraPrivate():$/;"	function	class:QCameraPrivate	access:public	signature:()
QCameraPrivate::requestedLocks	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCamera::LockTypes requestedLocks;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::restartPending	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    bool restartPending;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::setState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void setState(QCamera::State);$/;"	prototype	class:QCameraPrivate	access:public	signature:(QCamera::State)
QCameraPrivate::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCamera::State state;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::supressLockChangedSignal	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    bool supressLockChangedSignal;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::surfaceViewfinder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QVideoSurfaceOutput surfaceViewfinder;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::unsetError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void unsetError() { error = QCamera::NoError; errorString.clear(); }$/;"	function	class:QCameraPrivate	access:public	signature:()
QCameraPrivate::updateLockStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void updateLockStatus();$/;"	prototype	class:QCameraPrivate	access:public	signature:()
QCameraPrivate::viewfinder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QObject *viewfinder;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::viewfinderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraViewfinderSettingsControl *viewfinderSettingsControl;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::viewfinderSettingsControl2	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraViewfinderSettingsControl2 *viewfinderSettingsControl2;$/;"	member	class:QCameraPrivate	access:public
QCameraPrivate::_q_error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void _q_error(int error, const QString &errorString);$/;"	prototype	class:QCameraPrivate	access:public	signature:(int error, const QString &errorString)
QCameraPrivate::_q_preparePropertyChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void _q_preparePropertyChange(int changeType);$/;"	prototype	class:QCameraPrivate	access:public	signature:(int changeType)
QCameraPrivate::_q_restartCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void _q_restartCamera();$/;"	prototype	class:QCameraPrivate	access:public	signature:()
QCameraPrivate::_q_updateLockStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void _q_updateLockStatus(QCamera::LockType, QCamera::LockStatus, QCamera::LockChangeReason);$/;"	prototype	class:QCameraPrivate	access:public	signature:(QCamera::LockType, QCamera::LockStatus, QCamera::LockChangeReason)
QCameraPrivate::_q_updateState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void _q_updateState(QCamera::State newState);$/;"	prototype	class:QCameraPrivate	access:public	signature:(QCamera::State newState)
QCameraViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    QCameraViewfinderSettings();$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:()
QCameraViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    QCameraViewfinderSettings(const QCameraViewfinderSettings& other);$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:(const QCameraViewfinderSettings& other)
QCameraViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^class Q_MULTIMEDIA_EXPORT QCameraViewfinderSettings$/;"	class
QCameraViewfinderSettings::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    QSharedDataPointer<QCameraViewfinderSettingsPrivate> d;$/;"	member	class:QCameraViewfinderSettings	access:private
QCameraViewfinderSettings::isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    bool isNull() const;$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:() const
QCameraViewfinderSettings::maximumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    qreal maximumFrameRate() const;$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:() const
QCameraViewfinderSettings::minimumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    qreal minimumFrameRate() const;$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:() const
QCameraViewfinderSettings::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    QCameraViewfinderSettings& operator=(const QCameraViewfinderSettings &other);$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:(const QCameraViewfinderSettings &other)
QCameraViewfinderSettings::pixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    QSize pixelAspectRatio() const;$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:() const
QCameraViewfinderSettings::pixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    QVideoFrame::PixelFormat pixelFormat() const;$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:() const
QCameraViewfinderSettings::QCameraViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    QCameraViewfinderSettings();$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:()
QCameraViewfinderSettings::QCameraViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    QCameraViewfinderSettings(const QCameraViewfinderSettings& other);$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:(const QCameraViewfinderSettings& other)
QCameraViewfinderSettings::Q_DECL_NOTHROW	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    friend Q_MULTIMEDIA_EXPORT bool operator==(const QCameraViewfinderSettings &lhs, const QCameraViewfinderSettings &rhs) Q_DECL_NOTHROW;$/;"	member	class:QCameraViewfinderSettings	access:public
QCameraViewfinderSettings::resolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    QSize resolution() const;$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:() const
QCameraViewfinderSettings::setMaximumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    void setMaximumFrameRate(qreal rate);$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:(qreal rate)
QCameraViewfinderSettings::setMinimumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    void setMinimumFrameRate(qreal rate);$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:(qreal rate)
QCameraViewfinderSettings::setPixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    inline void setPixelAspectRatio(int horizontal, int vertical)$/;"	function	class:QCameraViewfinderSettings	access:public	signature:(int horizontal, int vertical)
QCameraViewfinderSettings::setPixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    void setPixelAspectRatio(const QSize &ratio);$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:(const QSize &ratio)
QCameraViewfinderSettings::setPixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    void setPixelFormat(QVideoFrame::PixelFormat format);$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:(QVideoFrame::PixelFormat format)
QCameraViewfinderSettings::setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    inline void setResolution(int width, int height)$/;"	function	class:QCameraViewfinderSettings	access:public	signature:(int width, int height)
QCameraViewfinderSettings::setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    void setResolution(const QSize &);$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:(const QSize &)
QCameraViewfinderSettings::~QCameraViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    ~QCameraViewfinderSettings();$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:()
QCameraViewfinderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    explicit QCameraViewfinderSettingsControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraViewfinderSettingsControl	access:protected	signature:(QObject *parent = nullptr)
QCameraViewfinderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^class Q_MULTIMEDIA_EXPORT QCameraViewfinderSettingsControl : public QMediaControl$/;"	class	inherits:QMediaControl
QCameraViewfinderSettingsControl2	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    explicit QCameraViewfinderSettingsControl2(QObject *parent = nullptr);$/;"	prototype	class:QCameraViewfinderSettingsControl2	access:protected	signature:(QObject *parent = nullptr)
QCameraViewfinderSettingsControl2	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^class Q_MULTIMEDIA_EXPORT QCameraViewfinderSettingsControl2 : public QMediaControl$/;"	class	inherits:QMediaControl
QCameraViewfinderSettingsControl2::QCameraViewfinderSettingsControl2	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    explicit QCameraViewfinderSettingsControl2(QObject *parent = nullptr);$/;"	prototype	class:QCameraViewfinderSettingsControl2	access:protected	signature:(QObject *parent = nullptr)
QCameraViewfinderSettingsControl2::setViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    virtual void setViewfinderSettings(const QCameraViewfinderSettings &settings) = 0;$/;"	prototype	class:QCameraViewfinderSettingsControl2	access:public	signature:(const QCameraViewfinderSettings &settings)
QCameraViewfinderSettingsControl2::supportedViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    virtual QList<QCameraViewfinderSettings> supportedViewfinderSettings() const = 0;$/;"	prototype	class:QCameraViewfinderSettingsControl2	access:public	signature:() const
QCameraViewfinderSettingsControl2::viewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    virtual QCameraViewfinderSettings viewfinderSettings() const = 0;$/;"	prototype	class:QCameraViewfinderSettingsControl2	access:public	signature:() const
QCameraViewfinderSettingsControl2::~QCameraViewfinderSettingsControl2	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    virtual ~QCameraViewfinderSettingsControl2();$/;"	prototype	class:QCameraViewfinderSettingsControl2	access:public	signature:()
QCameraViewfinderSettingsControl::isViewfinderParameterSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    virtual bool isViewfinderParameterSupported(ViewfinderParameter parameter) const = 0;$/;"	prototype	class:QCameraViewfinderSettingsControl	access:public	signature:(ViewfinderParameter parameter) const
QCameraViewfinderSettingsControl::MaximumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^        MaximumFrameRate,$/;"	enumerator	enum:QCameraViewfinderSettingsControl::ViewfinderParameter
QCameraViewfinderSettingsControl::MinimumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^        MinimumFrameRate,$/;"	enumerator	enum:QCameraViewfinderSettingsControl::ViewfinderParameter
QCameraViewfinderSettingsControl::PixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^        PixelAspectRatio,$/;"	enumerator	enum:QCameraViewfinderSettingsControl::ViewfinderParameter
QCameraViewfinderSettingsControl::PixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^        PixelFormat,$/;"	enumerator	enum:QCameraViewfinderSettingsControl::ViewfinderParameter
QCameraViewfinderSettingsControl::QCameraViewfinderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    explicit QCameraViewfinderSettingsControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraViewfinderSettingsControl	access:protected	signature:(QObject *parent = nullptr)
QCameraViewfinderSettingsControl::Resolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^        Resolution,$/;"	enumerator	enum:QCameraViewfinderSettingsControl::ViewfinderParameter
QCameraViewfinderSettingsControl::setViewfinderParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    virtual void setViewfinderParameter(ViewfinderParameter parameter, const QVariant &value) = 0;$/;"	prototype	class:QCameraViewfinderSettingsControl	access:public	signature:(ViewfinderParameter parameter, const QVariant &value)
QCameraViewfinderSettingsControl::UserParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^        UserParameter = 1000$/;"	enumerator	enum:QCameraViewfinderSettingsControl::ViewfinderParameter
QCameraViewfinderSettingsControl::ViewfinderParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    enum ViewfinderParameter {$/;"	enum	class:QCameraViewfinderSettingsControl	access:public
QCameraViewfinderSettingsControl::viewfinderParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    virtual QVariant viewfinderParameter(ViewfinderParameter parameter) const = 0;$/;"	prototype	class:QCameraViewfinderSettingsControl	access:public	signature:(ViewfinderParameter parameter) const
QCameraViewfinderSettingsControl::~QCameraViewfinderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    ~QCameraViewfinderSettingsControl();$/;"	prototype	class:QCameraViewfinderSettingsControl	access:public	signature:()
QCameraZoomControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    explicit QCameraZoomControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraZoomControl	access:protected	signature:(QObject *parent = nullptr)
QCameraZoomControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^class Q_MULTIMEDIA_EXPORT QCameraZoomControl : public QMediaControl$/;"	class	inherits:QMediaControl
QCameraZoomControl::currentDigitalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    virtual qreal currentDigitalZoom() const = 0;$/;"	prototype	class:QCameraZoomControl	access:public	signature:() const
QCameraZoomControl::currentDigitalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    void currentDigitalZoomChanged(qreal digitalZoom);$/;"	prototype	class:QCameraZoomControl	access:public	signature:(qreal digitalZoom)
QCameraZoomControl::currentOpticalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    virtual qreal currentOpticalZoom() const = 0;$/;"	prototype	class:QCameraZoomControl	access:public	signature:() const
QCameraZoomControl::currentOpticalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    void currentOpticalZoomChanged(qreal opticalZoom);$/;"	prototype	class:QCameraZoomControl	access:public	signature:(qreal opticalZoom)
QCameraZoomControl::maximumDigitalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    virtual qreal maximumDigitalZoom() const = 0;$/;"	prototype	class:QCameraZoomControl	access:public	signature:() const
QCameraZoomControl::maximumDigitalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    void maximumDigitalZoomChanged(qreal);$/;"	prototype	class:QCameraZoomControl	access:public	signature:(qreal)
QCameraZoomControl::maximumOpticalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    virtual qreal maximumOpticalZoom() const = 0;$/;"	prototype	class:QCameraZoomControl	access:public	signature:() const
QCameraZoomControl::maximumOpticalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    void maximumOpticalZoomChanged(qreal);$/;"	prototype	class:QCameraZoomControl	access:public	signature:(qreal)
QCameraZoomControl::QCameraZoomControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    explicit QCameraZoomControl(QObject *parent = nullptr);$/;"	prototype	class:QCameraZoomControl	access:protected	signature:(QObject *parent = nullptr)
QCameraZoomControl::requestedDigitalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    virtual qreal requestedDigitalZoom() const = 0;$/;"	prototype	class:QCameraZoomControl	access:public	signature:() const
QCameraZoomControl::requestedDigitalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    void requestedDigitalZoomChanged(qreal digitalZoom);$/;"	prototype	class:QCameraZoomControl	access:public	signature:(qreal digitalZoom)
QCameraZoomControl::requestedOpticalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    virtual qreal requestedOpticalZoom() const = 0;$/;"	prototype	class:QCameraZoomControl	access:public	signature:() const
QCameraZoomControl::requestedOpticalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    void requestedOpticalZoomChanged(qreal opticalZoom);$/;"	prototype	class:QCameraZoomControl	access:public	signature:(qreal opticalZoom)
QCameraZoomControl::zoomTo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    virtual void zoomTo(qreal optical, qreal digital) = 0;$/;"	prototype	class:QCameraZoomControl	access:public	signature:(qreal optical, qreal digital)
QCameraZoomControl::~QCameraZoomControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    ~QCameraZoomControl();$/;"	prototype	class:QCameraZoomControl	access:public	signature:()
qConvertBGR24ToARGB32	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideoframeconversionhelper_p.h	/^inline quint32 qConvertBGR24ToARGB32(const uchar *bgr)$/;"	function	signature:(const uchar *bgr)
qConvertBGR555ToARGB32	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideoframeconversionhelper_p.h	/^inline quint32 qConvertBGR555ToARGB32(quint16 bgr)$/;"	function	signature:(quint16 bgr)
qConvertBGR565ToARGB32	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideoframeconversionhelper_p.h	/^inline quint32 qConvertBGR565ToARGB32(quint16 bgr)$/;"	function	signature:(quint16 bgr)
qConvertBGRA32ToARGB32	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideoframeconversionhelper_p.h	/^inline quint32 qConvertBGRA32ToARGB32(quint32 bgra)$/;"	function	signature:(quint32 bgra)
QCustomAudioRoleControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcustomaudiorolecontrol.h	/^    explicit QCustomAudioRoleControl(QObject *parent = nullptr);$/;"	prototype	class:QCustomAudioRoleControl	access:protected	signature:(QObject *parent = nullptr)
QCustomAudioRoleControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcustomaudiorolecontrol.h	/^class Q_MULTIMEDIA_EXPORT QCustomAudioRoleControl : public QMediaControl$/;"	class	inherits:QMediaControl
QCustomAudioRoleControl::customAudioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcustomaudiorolecontrol.h	/^    virtual QString customAudioRole() const = 0;$/;"	prototype	class:QCustomAudioRoleControl	access:public	signature:() const
QCustomAudioRoleControl::customAudioRoleChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcustomaudiorolecontrol.h	/^    void customAudioRoleChanged(const QString &role);$/;"	prototype	class:QCustomAudioRoleControl	access:public	signature:(const QString &role)
QCustomAudioRoleControl::QCustomAudioRoleControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcustomaudiorolecontrol.h	/^    explicit QCustomAudioRoleControl(QObject *parent = nullptr);$/;"	prototype	class:QCustomAudioRoleControl	access:protected	signature:(QObject *parent = nullptr)
QCustomAudioRoleControl::setCustomAudioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcustomaudiorolecontrol.h	/^    virtual void setCustomAudioRole(const QString &role) = 0;$/;"	prototype	class:QCustomAudioRoleControl	access:public	signature:(const QString &role)
QCustomAudioRoleControl::supportedCustomAudioRoles	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcustomaudiorolecontrol.h	/^    virtual QStringList supportedCustomAudioRoles() const = 0;$/;"	prototype	class:QCustomAudioRoleControl	access:public	signature:() const
QCustomAudioRoleControl::~QCustomAudioRoleControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcustomaudiorolecontrol.h	/^    virtual ~QCustomAudioRoleControl();$/;"	prototype	class:QCustomAudioRoleControl	access:public	signature:()
QDeclarativeVideoBackend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    explicit QDeclarativeVideoBackend(QDeclarativeVideoOutput *parent)$/;"	function	class:QDeclarativeVideoBackend	access:public	signature:(QDeclarativeVideoOutput *parent)
QDeclarativeVideoBackend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^class Q_MULTIMEDIAQUICK_EXPORT QDeclarativeVideoBackend$/;"	class
QDeclarativeVideoBackend::adjustedViewport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual QRectF adjustedViewport() const = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:() const
QDeclarativeVideoBackend::appendFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void appendFilter(QAbstractVideoFilter *filter) { Q_UNUSED(filter); }$/;"	function	class:QDeclarativeVideoBackend	access:public	signature:(QAbstractVideoFilter *filter)
QDeclarativeVideoBackend::clearFilters	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void clearFilters() { }$/;"	function	class:QDeclarativeVideoBackend	access:public	signature:()
QDeclarativeVideoBackend::init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual bool init(QMediaService *service) = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:(QMediaService *service)
QDeclarativeVideoBackend::invalidateSceneGraph	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void invalidateSceneGraph() { }$/;"	function	class:QDeclarativeVideoBackend	access:public	signature:()
QDeclarativeVideoBackend::itemChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void itemChange(QQuickItem::ItemChange change,$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:(QQuickItem::ItemChange change, const QQuickItem::ItemChangeData &changeData)
QDeclarativeVideoBackend::m_service	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    QPointer<QMediaService> m_service;$/;"	member	class:QDeclarativeVideoBackend	access:protected
QDeclarativeVideoBackend::nativeSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual QSize nativeSize() const = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:() const
QDeclarativeVideoBackend::q	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    QDeclarativeVideoOutput *q;$/;"	member	class:QDeclarativeVideoBackend	access:protected
QDeclarativeVideoBackend::QDeclarativeVideoBackend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    explicit QDeclarativeVideoBackend(QDeclarativeVideoOutput *parent)$/;"	function	class:QDeclarativeVideoBackend	access:public	signature:(QDeclarativeVideoOutput *parent)
QDeclarativeVideoBackend::releaseControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void releaseControl() = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:()
QDeclarativeVideoBackend::releaseResources	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void releaseResources() { }$/;"	function	class:QDeclarativeVideoBackend	access:public	signature:()
QDeclarativeVideoBackend::releaseSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void releaseSource() = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:()
QDeclarativeVideoBackend::updateGeometry	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void updateGeometry() = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:()
QDeclarativeVideoBackend::updatePaintNode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual QSGNode *updatePaintNode(QSGNode *oldNode, QQuickItem::UpdatePaintNodeData *data) = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:(QSGNode *oldNode, QQuickItem::UpdatePaintNodeData *data)
QDeclarativeVideoBackend::videoSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual QAbstractVideoSurface *videoSurface() const = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:() const
QDeclarativeVideoBackend::~QDeclarativeVideoBackend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual ~QDeclarativeVideoBackend()$/;"	function	class:QDeclarativeVideoBackend	access:public	signature:()
QDeclarativeVideoBackendFactoryInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^class QDeclarativeVideoBackendFactoryInterface$/;"	class
QDeclarativeVideoBackendFactoryInterface::create	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual QDeclarativeVideoBackend *create(QDeclarativeVideoOutput *parent) = 0;$/;"	prototype	class:QDeclarativeVideoBackendFactoryInterface	access:public	signature:(QDeclarativeVideoOutput *parent)
QDeclarativeVideoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QDeclarativeVideoOutput(QQuickItem *parent = 0);$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(QQuickItem *parent = 0)
QDeclarativeVideoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^class Q_MULTIMEDIAQUICK_EXPORT QDeclarativeVideoOutput : public QQuickItem$/;"	class	inherits:QQuickItem
QDeclarativeVideoOutput::autoOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    bool autoOrientation() const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:() const
QDeclarativeVideoOutput::autoOrientationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void autoOrientationChanged();$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:()
QDeclarativeVideoOutput::contentRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QRectF contentRect() const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:() const
QDeclarativeVideoOutput::contentRectChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void contentRectChanged();$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:()
QDeclarativeVideoOutput::createBackend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    bool createBackend(QMediaService *service);$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:(QMediaService *service)
QDeclarativeVideoOutput::FillMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    enum FillMode$/;"	enum	class:QDeclarativeVideoOutput	access:public
QDeclarativeVideoOutput::fillMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    FillMode fillMode() const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:() const
QDeclarativeVideoOutput::fillModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void fillModeChanged(QDeclarativeVideoOutput::FillMode);$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(QDeclarativeVideoOutput::FillMode)
QDeclarativeVideoOutput::filters	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QQmlListProperty<QAbstractVideoFilter> filters();$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:()
QDeclarativeVideoOutput::filter_append	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    static void filter_append(QQmlListProperty<QAbstractVideoFilter> *property, QAbstractVideoFilter *value);$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:(QQmlListProperty<QAbstractVideoFilter> *property, QAbstractVideoFilter *value)
QDeclarativeVideoOutput::filter_at	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    static QAbstractVideoFilter *filter_at(QQmlListProperty<QAbstractVideoFilter> *property, int index);$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:(QQmlListProperty<QAbstractVideoFilter> *property, int index)
QDeclarativeVideoOutput::filter_clear	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    static void filter_clear(QQmlListProperty<QAbstractVideoFilter> *property);$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:(QQmlListProperty<QAbstractVideoFilter> *property)
QDeclarativeVideoOutput::filter_count	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    static int filter_count(QQmlListProperty<QAbstractVideoFilter> *property);$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:(QQmlListProperty<QAbstractVideoFilter> *property)
QDeclarativeVideoOutput::mapNormalizedPointToItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QPointF mapNormalizedPointToItem(const QPointF &point) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QPointF &point) const
QDeclarativeVideoOutput::mapNormalizedRectToItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QRectF mapNormalizedRectToItem(const QRectF &rectangle) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QRectF &rectangle) const
QDeclarativeVideoOutput::mapPointToItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QPointF mapPointToItem(const QPointF &point) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QPointF &point) const
QDeclarativeVideoOutput::mapPointToSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QPointF mapPointToSource(const QPointF &point) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QPointF &point) const
QDeclarativeVideoOutput::mapPointToSourceNormalized	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QPointF mapPointToSourceNormalized(const QPointF &point) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QPointF &point) const
QDeclarativeVideoOutput::mapRectToItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QRectF mapRectToItem(const QRectF &rectangle) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QRectF &rectangle) const
QDeclarativeVideoOutput::mapRectToSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QRectF mapRectToSource(const QRectF &rectangle) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QRectF &rectangle) const
QDeclarativeVideoOutput::mapRectToSourceNormalized	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_INVOKABLE QRectF mapRectToSourceNormalized(const QRectF &rectangle) const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(const QRectF &rectangle) const
QDeclarativeVideoOutput::MediaObjectSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^        MediaObjectSource,$/;"	enumerator	enum:QDeclarativeVideoOutput::SourceType
QDeclarativeVideoOutput::m_autoOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    bool m_autoOrientation;$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::m_backend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QScopedPointer<QDeclarativeVideoBackend> m_backend;$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::m_cameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QCameraInfo m_cameraInfo;$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::m_contentRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QRectF m_contentRect;   \/\/ Destination pixel coordinates, unclipped$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::m_fillMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    FillMode m_fillMode;$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::m_filters	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QList<QAbstractVideoFilter *> m_filters;$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::m_geometryDirty	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    bool m_geometryDirty;$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::m_lastRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QRectF m_lastRect;      \/\/ Cache of last rect to avoid recalculating geometry$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::m_mediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QPointer<QMediaObject> m_mediaObject;$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::m_nativeSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QSize m_nativeSize;$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::m_orientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    int m_orientation;$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::m_screenOrientationHandler	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QVideoOutputOrientationHandler *m_screenOrientationHandler;$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::m_service	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QPointer<QMediaService> m_service;$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::m_source	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QPointer<QObject> m_source;$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::m_sourceType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    SourceType m_sourceType;$/;"	member	class:QDeclarativeVideoOutput	access:private
QDeclarativeVideoOutput::NoSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^        NoSource,$/;"	enumerator	enum:QDeclarativeVideoOutput::SourceType
QDeclarativeVideoOutput::orientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    int orientation() const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:() const
QDeclarativeVideoOutput::orientationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void orientationChanged();$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:()
QDeclarativeVideoOutput::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QSGNode *updatePaintNode(QSGNode *, UpdatePaintNodeData *) override;$/;"	member	class:QDeclarativeVideoOutput	access:protected
QDeclarativeVideoOutput::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void geometryChanged(const QRectF &newGeometry, const QRectF &oldGeometry) override;$/;"	member	class:QDeclarativeVideoOutput	access:protected
QDeclarativeVideoOutput::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void itemChange(ItemChange change, const ItemChangeData &changeData) override;$/;"	member	class:QDeclarativeVideoOutput	access:protected
QDeclarativeVideoOutput::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void releaseResources() override;$/;"	member	class:QDeclarativeVideoOutput	access:protected
QDeclarativeVideoOutput::PreserveAspectCrop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^        PreserveAspectCrop = Qt::KeepAspectRatioByExpanding$/;"	enumerator	enum:QDeclarativeVideoOutput::FillMode
QDeclarativeVideoOutput::PreserveAspectFit	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^        PreserveAspectFit  = Qt::KeepAspectRatio,$/;"	enumerator	enum:QDeclarativeVideoOutput::FillMode
QDeclarativeVideoOutput::QDeclarativeVideoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QDeclarativeVideoOutput(QQuickItem *parent = 0);$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(QQuickItem *parent = 0)
QDeclarativeVideoOutput::Q_PROPERTY	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_PROPERTY(QQmlListProperty<QAbstractVideoFilter> filters READ filters);$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:(QQmlListProperty<QAbstractVideoFilter> filters READ filters)
QDeclarativeVideoOutput::setAutoOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void setAutoOrientation(bool);$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(bool)
QDeclarativeVideoOutput::setFillMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void setFillMode(FillMode mode);$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(FillMode mode)
QDeclarativeVideoOutput::setOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void setOrientation(int);$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(int)
QDeclarativeVideoOutput::setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void setSource(QObject *source);$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(QObject *source)
QDeclarativeVideoOutput::source	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QObject *source() const { return m_source.data(); }$/;"	function	class:QDeclarativeVideoOutput	access:public	signature:() const
QDeclarativeVideoOutput::sourceChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void sourceChanged();$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:()
QDeclarativeVideoOutput::sourceRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QRectF sourceRect() const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:() const
QDeclarativeVideoOutput::sourceRectChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void sourceRectChanged();$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:()
QDeclarativeVideoOutput::SourceType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    enum SourceType {$/;"	enum	class:QDeclarativeVideoOutput	access:public
QDeclarativeVideoOutput::sourceType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    SourceType sourceType() const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:() const
QDeclarativeVideoOutput::Stretch	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^        Stretch            = Qt::IgnoreAspectRatio,$/;"	enumerator	enum:QDeclarativeVideoOutput::FillMode
QDeclarativeVideoOutput::VideoSurfaceSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^        VideoSurfaceSource$/;"	enumerator	enum:QDeclarativeVideoOutput::SourceType
QDeclarativeVideoOutput::_q_invalidateSceneGraph	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void _q_invalidateSceneGraph();$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:()
QDeclarativeVideoOutput::_q_screenOrientationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void _q_screenOrientationChanged(int);$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:(int)
QDeclarativeVideoOutput::_q_updateCameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void _q_updateCameraInfo();$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:()
QDeclarativeVideoOutput::_q_updateGeometry	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void _q_updateGeometry();$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:()
QDeclarativeVideoOutput::_q_updateMediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void _q_updateMediaObject();$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:()
QDeclarativeVideoOutput::_q_updateNativeSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void _q_updateNativeSize();$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:()
QDeclarativeVideoOutput::~QDeclarativeVideoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    ~QDeclarativeVideoOutput();$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:()
QGstAppSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    QGstAppSrc(QObject *parent = 0);$/;"	prototype	class:QGstAppSrc	access:public	signature:(QObject *parent = 0)
QGstAppSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^class Q_GSTTOOLS_EXPORT QGstAppSrc  : public QObject$/;"	class	inherits:QObject
QGstAppSrc::dataRequested	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool& dataRequested() { return m_dataRequested; }$/;"	function	class:QGstAppSrc	access:public	signature:()
QGstAppSrc::dataRequestSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    unsigned int& dataRequestSize() { return m_dataRequestSize; }$/;"	function	class:QGstAppSrc	access:public	signature:()
QGstAppSrc::destroy_notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    static void destroy_notify(gpointer data);$/;"	prototype	class:QGstAppSrc	access:private	signature:(gpointer data)
QGstAppSrc::doSeek	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool doSeek(qint64);$/;"	prototype	class:QGstAppSrc	access:private	signature:(qint64)
QGstAppSrc::element	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    GstAppSrc *element();$/;"	prototype	class:QGstAppSrc	access:public	signature:()
QGstAppSrc::enoughData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool& enoughData() { return m_enoughData; }$/;"	function	class:QGstAppSrc	access:public	signature:()
QGstAppSrc::isStreamValid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool isStreamValid() const$/;"	function	class:QGstAppSrc	access:public	signature:() const
QGstAppSrc::m_appSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    GstAppSrc *m_appSrc;$/;"	member	class:QGstAppSrc	access:private
QGstAppSrc::m_callbacks	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    GstAppSrcCallbacks m_callbacks;$/;"	member	class:QGstAppSrc	access:private
QGstAppSrc::m_dataRequested	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool m_dataRequested;$/;"	member	class:QGstAppSrc	access:private
QGstAppSrc::m_dataRequestSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    unsigned int m_dataRequestSize;$/;"	member	class:QGstAppSrc	access:private
QGstAppSrc::m_enoughData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool m_enoughData;$/;"	member	class:QGstAppSrc	access:private
QGstAppSrc::m_forceData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool m_forceData;$/;"	member	class:QGstAppSrc	access:private
QGstAppSrc::m_maxBytes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    qint64 m_maxBytes;$/;"	member	class:QGstAppSrc	access:private
QGstAppSrc::m_sequential	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool m_sequential;$/;"	member	class:QGstAppSrc	access:private
QGstAppSrc::m_stream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    QIODevice *m_stream;$/;"	member	class:QGstAppSrc	access:private
QGstAppSrc::m_streamType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    GstAppStreamType m_streamType;$/;"	member	class:QGstAppSrc	access:private
QGstAppSrc::onDataReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    void onDataReady();$/;"	prototype	class:QGstAppSrc	access:private	signature:()
QGstAppSrc::on_enough_data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    static void on_enough_data(GstAppSrc *element, gpointer userdata);$/;"	prototype	class:QGstAppSrc	access:private	signature:(GstAppSrc *element, gpointer userdata)
QGstAppSrc::on_need_data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    static void on_need_data(GstAppSrc *element, uint arg0, gpointer userdata);$/;"	prototype	class:QGstAppSrc	access:private	signature:(GstAppSrc *element, uint arg0, gpointer userdata)
QGstAppSrc::on_seek_data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    static gboolean on_seek_data(GstAppSrc *element, guint64 arg0, gpointer userdata);$/;"	prototype	class:QGstAppSrc	access:private	signature:(GstAppSrc *element, guint64 arg0, gpointer userdata)
QGstAppSrc::pushDataToAppSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    void pushDataToAppSrc();$/;"	prototype	class:QGstAppSrc	access:private	signature:()
QGstAppSrc::QGstAppSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    QGstAppSrc(QObject *parent = 0);$/;"	prototype	class:QGstAppSrc	access:public	signature:(QObject *parent = 0)
QGstAppSrc::queueSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    qint64 queueSize() const { return m_maxBytes; }$/;"	function	class:QGstAppSrc	access:public	signature:() const
QGstAppSrc::sendEOS	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    void sendEOS();$/;"	prototype	class:QGstAppSrc	access:private	signature:()
QGstAppSrc::setStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    void setStream(QIODevice *);$/;"	prototype	class:QGstAppSrc	access:public	signature:(QIODevice *)
QGstAppSrc::setup	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool setup(GstElement *);$/;"	prototype	class:QGstAppSrc	access:public	signature:(GstElement *)
QGstAppSrc::stream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    QIODevice *stream() const;$/;"	prototype	class:QGstAppSrc	access:public	signature:() const
QGstAppSrc::streamDestroyed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    void streamDestroyed();$/;"	prototype	class:QGstAppSrc	access:private	signature:()
QGstAppSrc::~QGstAppSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    ~QGstAppSrc();$/;"	prototype	class:QGstAppSrc	access:public	signature:()
QGstBufferPoolInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^class Q_GSTTOOLS_EXPORT QGstBufferPoolInterface$/;"	class
QGstBufferPoolInterface::clear	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    virtual void clear() = 0;$/;"	prototype	class:QGstBufferPoolInterface	access:public	signature:()
QGstBufferPoolInterface::handleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    virtual QAbstractVideoBuffer::HandleType handleType() const = 0;$/;"	prototype	class:QGstBufferPoolInterface	access:public	signature:() const
QGstBufferPoolInterface::isFormatSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    virtual bool isFormatSupported(const QVideoSurfaceFormat &format) const = 0;$/;"	prototype	class:QGstBufferPoolInterface	access:public	signature:(const QVideoSurfaceFormat &format) const
QGstBufferPoolInterface::prepareVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    virtual QAbstractVideoBuffer *prepareVideoBuffer(GstBuffer *buffer, int bytesPerLine) = 0;$/;"	prototype	class:QGstBufferPoolInterface	access:public	signature:(GstBuffer *buffer, int bytesPerLine)
QGstBufferPoolInterface::takeBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    virtual GstBuffer *takeBuffer(const QVideoSurfaceFormat &format, GstCaps *caps) = 0;$/;"	prototype	class:QGstBufferPoolInterface	access:public	signature:(const QVideoSurfaceFormat &format, GstCaps *caps)
QGstBufferPoolInterface::~QGstBufferPoolInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    virtual ~QGstBufferPoolInterface() {}$/;"	function	class:QGstBufferPoolInterface	access:public	signature:()
QGstBufferPoolPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    explicit QGstBufferPoolPlugin(QObject *parent = 0);$/;"	prototype	class:QGstBufferPoolPlugin	access:public	signature:(QObject *parent = 0)
QGstBufferPoolPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^class QGstBufferPoolPlugin : public QObject, public QGstBufferPoolInterface$/;"	class	inherits:QObject,QGstBufferPoolInterface
QGstBufferPoolPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    bool isFormatSupported(const QVideoSurfaceFormat &format) const override = 0;$/;"	member	class:QGstBufferPoolPlugin	access:public
QGstBufferPoolPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    GstBuffer *takeBuffer(const QVideoSurfaceFormat &format, GstCaps *caps) override = 0;$/;"	member	class:QGstBufferPoolPlugin	access:public
QGstBufferPoolPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    QAbstractVideoBuffer *prepareVideoBuffer(GstBuffer *buffer, int bytesPerLine) override = 0;$/;"	member	class:QGstBufferPoolPlugin	access:public
QGstBufferPoolPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    QAbstractVideoBuffer::HandleType handleType() const override = 0;$/;"	member	class:QGstBufferPoolPlugin	access:public
QGstBufferPoolPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    void clear() override = 0;$/;"	member	class:QGstBufferPoolPlugin	access:public
QGstBufferPoolPlugin::QGstBufferPoolPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    explicit QGstBufferPoolPlugin(QObject *parent = 0);$/;"	prototype	class:QGstBufferPoolPlugin	access:public	signature:(QObject *parent = 0)
QGstBufferPoolPlugin::~QGstBufferPoolPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    virtual ~QGstBufferPoolPlugin() {}$/;"	function	class:QGstBufferPoolPlugin	access:public	signature:()
QGstCodecsInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    QGstCodecsInfo(ElementType elementType);$/;"	prototype	class:QGstCodecsInfo	access:public	signature:(ElementType elementType)
QGstCodecsInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^class Q_GSTTOOLS_EXPORT QGstCodecsInfo$/;"	class
QGstCodecsInfo::AudioEncoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    enum ElementType { AudioEncoder, VideoEncoder, Muxer };$/;"	enumerator	enum:QGstCodecsInfo::ElementType
QGstCodecsInfo::codecDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    QString codecDescription(const QString &codec) const;$/;"	prototype	class:QGstCodecsInfo	access:public	signature:(const QString &codec) const
QGstCodecsInfo::codecElement	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    QByteArray codecElement(const QString &codec) const;$/;"	prototype	class:QGstCodecsInfo	access:public	signature:(const QString &codec) const
QGstCodecsInfo::CodecInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    struct CodecInfo {$/;"	struct	class:QGstCodecsInfo	access:public
QGstCodecsInfo::CodecInfo::description	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^        QString description;$/;"	member	struct:QGstCodecsInfo::CodecInfo	access:public
QGstCodecsInfo::CodecInfo::elementName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^        QByteArray elementName;$/;"	member	struct:QGstCodecsInfo::CodecInfo	access:public
QGstCodecsInfo::CodecInfo::rank	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^        GstRank rank;$/;"	member	struct:QGstCodecsInfo::CodecInfo	access:public
QGstCodecsInfo::codecOptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    QStringList codecOptions(const QString &codec) const;$/;"	prototype	class:QGstCodecsInfo	access:public	signature:(const QString &codec) const
QGstCodecsInfo::elementFactories	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    GList *elementFactories(ElementType elementType) const;$/;"	prototype	class:QGstCodecsInfo	access:private	signature:(ElementType elementType) const
QGstCodecsInfo::ElementType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    enum ElementType { AudioEncoder, VideoEncoder, Muxer };$/;"	enum	class:QGstCodecsInfo	access:public
QGstCodecsInfo::Muxer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    enum ElementType { AudioEncoder, VideoEncoder, Muxer };$/;"	enumerator	enum:QGstCodecsInfo::ElementType
QGstCodecsInfo::m_codecInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    QMap<QString, CodecInfo> m_codecInfo;$/;"	member	class:QGstCodecsInfo	access:private
QGstCodecsInfo::m_codecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    QStringList m_codecs;$/;"	member	class:QGstCodecsInfo	access:private
QGstCodecsInfo::QGstCodecsInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    QGstCodecsInfo(ElementType elementType);$/;"	prototype	class:QGstCodecsInfo	access:public	signature:(ElementType elementType)
QGstCodecsInfo::supportedCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    QStringList supportedCodecs() const;$/;"	prototype	class:QGstCodecsInfo	access:public	signature:() const
QGstCodecsInfo::updateCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    void updateCodecs(ElementType elementType);$/;"	prototype	class:QGstCodecsInfo	access:private	signature:(ElementType elementType)
QGstCodecsInfo::VideoEncoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    enum ElementType { AudioEncoder, VideoEncoder, Muxer };$/;"	enumerator	enum:QGstCodecsInfo::ElementType
QGstDefaultVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QGstDefaultVideoRenderer();$/;"	prototype	class:QGstDefaultVideoRenderer	access:public	signature:()
QGstDefaultVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^class QGstDefaultVideoRenderer : public QGstVideoRenderer$/;"	class	inherits:QGstVideoRenderer
QGstDefaultVideoRenderer::m_flushed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool m_flushed;$/;"	member	class:QGstDefaultVideoRenderer	access:private
QGstDefaultVideoRenderer::m_format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QVideoSurfaceFormat m_format;$/;"	member	class:QGstDefaultVideoRenderer	access:private
QGstDefaultVideoRenderer::m_videoInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstVideoInfo m_videoInfo;$/;"	member	class:QGstDefaultVideoRenderer	access:private
QGstDefaultVideoRenderer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool present(QAbstractVideoSurface *surface, GstBuffer *buffer) override;$/;"	member	class:QGstDefaultVideoRenderer	access:public
QGstDefaultVideoRenderer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool proposeAllocation(GstQuery *query) override;$/;"	member	class:QGstDefaultVideoRenderer	access:public
QGstDefaultVideoRenderer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool start(QAbstractVideoSurface *surface, GstCaps *caps) override;$/;"	member	class:QGstDefaultVideoRenderer	access:public
QGstDefaultVideoRenderer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstCaps *getCaps(QAbstractVideoSurface *surface) override;$/;"	member	class:QGstDefaultVideoRenderer	access:public
QGstDefaultVideoRenderer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    void flush(QAbstractVideoSurface *surface) override;$/;"	member	class:QGstDefaultVideoRenderer	access:public
QGstDefaultVideoRenderer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    void stop(QAbstractVideoSurface *surface) override;$/;"	member	class:QGstDefaultVideoRenderer	access:public
QGstDefaultVideoRenderer::QGstDefaultVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QGstDefaultVideoRenderer();$/;"	prototype	class:QGstDefaultVideoRenderer	access:public	signature:()
QGstDefaultVideoRenderer::~QGstDefaultVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    ~QGstDefaultVideoRenderer();$/;"	prototype	class:QGstDefaultVideoRenderer	access:public	signature:()
QGstreamerAudioInputSelector	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QGstreamerAudioInputSelector(QObject *parent);$/;"	prototype	class:QGstreamerAudioInputSelector	access:public	signature:(QObject *parent)
QGstreamerAudioInputSelector	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^class Q_GSTTOOLS_EXPORT QGstreamerAudioInputSelector : public QAudioInputSelectorControl$/;"	class	inherits:QAudioInputSelectorControl
QGstreamerAudioInputSelector::m_audioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QString     m_audioInput;$/;"	member	class:QGstreamerAudioInputSelector	access:private
QGstreamerAudioInputSelector::m_descriptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QList<QString> m_descriptions;$/;"	member	class:QGstreamerAudioInputSelector	access:private
QGstreamerAudioInputSelector::m_names	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QList<QString> m_names;$/;"	member	class:QGstreamerAudioInputSelector	access:private
QGstreamerAudioInputSelector::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QList<QString> availableInputs() const override;$/;"	member	class:QGstreamerAudioInputSelector	access:public
QGstreamerAudioInputSelector::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QString activeInput() const override;$/;"	member	class:QGstreamerAudioInputSelector	access:public
QGstreamerAudioInputSelector::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QString defaultInput() const override;$/;"	member	class:QGstreamerAudioInputSelector	access:public
QGstreamerAudioInputSelector::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QString inputDescription(const QString &name) const override;$/;"	member	class:QGstreamerAudioInputSelector	access:public
QGstreamerAudioInputSelector::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    void setActiveInput(const QString &name) override;$/;"	member	class:QGstreamerAudioInputSelector	access:public
QGstreamerAudioInputSelector::QGstreamerAudioInputSelector	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    QGstreamerAudioInputSelector(QObject *parent);$/;"	prototype	class:QGstreamerAudioInputSelector	access:public	signature:(QObject *parent)
QGstreamerAudioInputSelector::update	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    void update();$/;"	prototype	class:QGstreamerAudioInputSelector	access:private	signature:()
QGstreamerAudioInputSelector::updateAlsaDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    void updateAlsaDevices();$/;"	prototype	class:QGstreamerAudioInputSelector	access:private	signature:()
QGstreamerAudioInputSelector::updateOssDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    void updateOssDevices();$/;"	prototype	class:QGstreamerAudioInputSelector	access:private	signature:()
QGstreamerAudioInputSelector::updatePulseDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    void updatePulseDevices();$/;"	prototype	class:QGstreamerAudioInputSelector	access:private	signature:()
QGstreamerAudioInputSelector::~QGstreamerAudioInputSelector	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    ~QGstreamerAudioInputSelector();$/;"	prototype	class:QGstreamerAudioInputSelector	access:public	signature:()
QGstreamerAudioProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    explicit QGstreamerAudioProbeControl(QObject *parent);$/;"	prototype	class:QGstreamerAudioProbeControl	access:public	signature:(QObject *parent)
QGstreamerAudioProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^class Q_GSTTOOLS_EXPORT QGstreamerAudioProbeControl$/;"	class	inherits:QMediaAudioProbeControl,QGstreamerBufferProbe,QSharedData
QGstreamerAudioProbeControl::bufferProbed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    void bufferProbed();$/;"	prototype	class:QGstreamerAudioProbeControl	access:private	signature:()
QGstreamerAudioProbeControl::m_bufferMutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    QMutex m_bufferMutex;$/;"	member	class:QGstreamerAudioProbeControl	access:private
QGstreamerAudioProbeControl::m_format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    QAudioFormat m_format;$/;"	member	class:QGstreamerAudioProbeControl	access:private
QGstreamerAudioProbeControl::m_pendingBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    QAudioBuffer m_pendingBuffer;$/;"	member	class:QGstreamerAudioProbeControl	access:private
QGstreamerAudioProbeControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    bool probeBuffer(GstBuffer *buffer) override;$/;"	member	class:QGstreamerAudioProbeControl	access:protected
QGstreamerAudioProbeControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    void probeCaps(GstCaps *caps) override;$/;"	member	class:QGstreamerAudioProbeControl	access:protected
QGstreamerAudioProbeControl::QGstreamerAudioProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    explicit QGstreamerAudioProbeControl(QObject *parent);$/;"	prototype	class:QGstreamerAudioProbeControl	access:public	signature:(QObject *parent)
QGstreamerAudioProbeControl::~QGstreamerAudioProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    virtual ~QGstreamerAudioProbeControl();$/;"	prototype	class:QGstreamerAudioProbeControl	access:public	signature:()
QGstreamerBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    explicit QGstreamerBufferProbe(Flags flags = ProbeAll);$/;"	prototype	class:QGstreamerBufferProbe	access:public	signature:(Flags flags = ProbeAll)
QGstreamerBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^class Q_GSTTOOLS_EXPORT QGstreamerBufferProbe$/;"	class
QGstreamerBufferProbe::addProbeToPad	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    void addProbeToPad(GstPad *pad, bool downstream = true);$/;"	prototype	class:QGstreamerBufferProbe	access:public	signature:(GstPad *pad, bool downstream = true)
QGstreamerBufferProbe::bufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    static gboolean bufferProbe(GstElement *element, GstBuffer *buffer, gpointer user_data);$/;"	prototype	class:QGstreamerBufferProbe	access:private	signature:(GstElement *element, GstBuffer *buffer, gpointer user_data)
QGstreamerBufferProbe::bufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    static GstPadProbeReturn bufferProbe(GstPad *pad, GstPadProbeInfo *info, gpointer user_data);$/;"	prototype	class:QGstreamerBufferProbe	access:private	signature:(GstPad *pad, GstPadProbeInfo *info, gpointer user_data)
QGstreamerBufferProbe::capsProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    static GstPadProbeReturn capsProbe(GstPad *pad, GstPadProbeInfo *info, gpointer user_data);$/;"	prototype	class:QGstreamerBufferProbe	access:private	signature:(GstPad *pad, GstPadProbeInfo *info, gpointer user_data)
QGstreamerBufferProbe::Flags	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    enum Flags$/;"	enum	class:QGstreamerBufferProbe	access:public
QGstreamerBufferProbe::m_bufferProbeId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    int m_bufferProbeId;$/;"	member	class:QGstreamerBufferProbe	access:private
QGstreamerBufferProbe::m_caps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    GstCaps *m_caps;$/;"	member	class:QGstreamerBufferProbe	access:private
QGstreamerBufferProbe::m_capsProbeId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    int m_capsProbeId;$/;"	member	class:QGstreamerBufferProbe	access:private
QGstreamerBufferProbe::m_flags	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    const Flags m_flags;$/;"	member	class:QGstreamerBufferProbe	access:private
QGstreamerBufferProbe::ProbeAll	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^        ProbeAll    = ProbeCaps | ProbeBuffers$/;"	enumerator	enum:QGstreamerBufferProbe::Flags
QGstreamerBufferProbe::probeBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    virtual bool probeBuffer(GstBuffer *buffer);$/;"	prototype	class:QGstreamerBufferProbe	access:protected	signature:(GstBuffer *buffer)
QGstreamerBufferProbe::ProbeBuffers	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^        ProbeBuffers    = 0x02,$/;"	enumerator	enum:QGstreamerBufferProbe::Flags
QGstreamerBufferProbe::ProbeCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^        ProbeCaps       = 0x01,$/;"	enumerator	enum:QGstreamerBufferProbe::Flags
QGstreamerBufferProbe::probeCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    virtual void probeCaps(GstCaps *caps);$/;"	prototype	class:QGstreamerBufferProbe	access:protected	signature:(GstCaps *caps)
QGstreamerBufferProbe::QGstreamerBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    explicit QGstreamerBufferProbe(Flags flags = ProbeAll);$/;"	prototype	class:QGstreamerBufferProbe	access:public	signature:(Flags flags = ProbeAll)
QGstreamerBufferProbe::removeProbeFromPad	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    void removeProbeFromPad(GstPad *pad);$/;"	prototype	class:QGstreamerBufferProbe	access:public	signature:(GstPad *pad)
QGstreamerBufferProbe::~QGstreamerBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    virtual ~QGstreamerBufferProbe();$/;"	prototype	class:QGstreamerBufferProbe	access:public	signature:()
QGstreamerBusHelper	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    QGstreamerBusHelper(GstBus* bus, QObject* parent = 0);$/;"	prototype	class:QGstreamerBusHelper	access:public	signature:(GstBus* bus, QObject* parent = 0)
QGstreamerBusHelper	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^class Q_GSTTOOLS_EXPORT QGstreamerBusHelper : public QObject$/;"	class	inherits:QObject
QGstreamerBusHelper::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    QGstreamerBusHelperPrivate*   d;$/;"	member	class:QGstreamerBusHelper	access:private
QGstreamerBusHelper::installMessageFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    void installMessageFilter(QObject *filter);$/;"	prototype	class:QGstreamerBusHelper	access:public	signature:(QObject *filter)
QGstreamerBusHelper::message	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    void message(QGstreamerMessage const& message);$/;"	prototype	class:QGstreamerBusHelper	access:public	signature:(QGstreamerMessage const& message)
QGstreamerBusHelper::QGstreamerBusHelper	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    QGstreamerBusHelper(GstBus* bus, QObject* parent = 0);$/;"	prototype	class:QGstreamerBusHelper	access:public	signature:(GstBus* bus, QObject* parent = 0)
QGstreamerBusHelper::removeMessageFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    void removeMessageFilter(QObject *filter);$/;"	prototype	class:QGstreamerBusHelper	access:public	signature:(QObject *filter)
QGstreamerBusHelper::~QGstreamerBusHelper	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    ~QGstreamerBusHelper();$/;"	prototype	class:QGstreamerBusHelper	access:public	signature:()
QGstreamerBusMessageFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^class QGstreamerBusMessageFilter {$/;"	class
QGstreamerBusMessageFilter::processBusMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    virtual bool processBusMessage(const QGstreamerMessage &message) = 0;$/;"	prototype	class:QGstreamerBusMessageFilter	access:public	signature:(const QGstreamerMessage &message)
QGstreamerMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^    QGstreamerMessage();$/;"	prototype	class:QGstreamerMessage	access:public	signature:()
QGstreamerMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^    QGstreamerMessage(GstMessage* message);$/;"	prototype	class:QGstreamerMessage	access:public	signature:(GstMessage* message)
QGstreamerMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^    QGstreamerMessage(QGstreamerMessage const& m);$/;"	prototype	class:QGstreamerMessage	access:public	signature:(QGstreamerMessage const& m)
QGstreamerMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^class Q_GSTTOOLS_EXPORT QGstreamerMessage$/;"	class
QGstreamerMessage::m_message	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^    GstMessage* m_message;$/;"	member	class:QGstreamerMessage	access:private
QGstreamerMessage::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^    QGstreamerMessage& operator=(QGstreamerMessage const& rhs);$/;"	prototype	class:QGstreamerMessage	access:public	signature:(QGstreamerMessage const& rhs)
QGstreamerMessage::QGstreamerMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^    QGstreamerMessage();$/;"	prototype	class:QGstreamerMessage	access:public	signature:()
QGstreamerMessage::QGstreamerMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^    QGstreamerMessage(GstMessage* message);$/;"	prototype	class:QGstreamerMessage	access:public	signature:(GstMessage* message)
QGstreamerMessage::QGstreamerMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^    QGstreamerMessage(QGstreamerMessage const& m);$/;"	prototype	class:QGstreamerMessage	access:public	signature:(QGstreamerMessage const& m)
QGstreamerMessage::rawMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^    GstMessage* rawMessage() const;$/;"	prototype	class:QGstreamerMessage	access:public	signature:() const
QGstreamerMessage::~QGstreamerMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^    ~QGstreamerMessage();$/;"	prototype	class:QGstreamerMessage	access:public	signature:()
QGstreamerMirTextureRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QGstreamerMirTextureRenderer(QObject *parent = 0, const QGstreamerPlayerSession *playerSession = 0);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:(QObject *parent = 0, const QGstreamerPlayerSession *playerSession = 0)
QGstreamerMirTextureRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^class QGstreamerMirTextureRenderer : public QVideoRendererControl, public QGstreamerVideoRendererInterface$/;"	class	inherits:QVideoRendererControl,QGstreamerVideoRendererInterface
QGstreamerMirTextureRenderer::createOffscreenWindow	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QWindow *createOffscreenWindow(const QSurfaceFormat &format);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:private	signature:(const QSurfaceFormat &format)
QGstreamerMirTextureRenderer::handleFocusWindowChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void handleFocusWindowChanged(QWindow *window);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:private	signature:(QWindow *window)
QGstreamerMirTextureRenderer::handleFormatChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void handleFormatChange();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:private	signature:()
QGstreamerMirTextureRenderer::handleFrameReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    static void handleFrameReady(gpointer userData);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:private	signature:(gpointer userData)
QGstreamerMirTextureRenderer::isReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    bool isReady() const { return m_surface != 0; }$/;"	function	class:QGstreamerMirTextureRenderer	access:public	signature:() const
QGstreamerMirTextureRenderer::m_context	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QGLContext *m_context;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
QGstreamerMirTextureRenderer::m_glContext	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QOpenGLContext *m_glContext;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
QGstreamerMirTextureRenderer::m_glSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QPointer<QAbstractVideoSurface> m_glSurface;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
QGstreamerMirTextureRenderer::m_mutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QMutex m_mutex;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
QGstreamerMirTextureRenderer::m_nativeSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QSize m_nativeSize;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
QGstreamerMirTextureRenderer::m_offscreenSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QWindow *m_offscreenSurface;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
QGstreamerMirTextureRenderer::m_playerSession	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QGstreamerPlayerSession *m_playerSession;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
QGstreamerMirTextureRenderer::m_surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QPointer<QAbstractVideoSurface> m_surface;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
QGstreamerMirTextureRenderer::m_textureBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QGstreamerMirTextureBuffer *m_textureBuffer;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
QGstreamerMirTextureRenderer::m_textureId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    unsigned int m_textureId;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
QGstreamerMirTextureRenderer::m_videoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    GstElement *m_videoSink;$/;"	member	class:QGstreamerMirTextureRenderer	access:private
QGstreamerMirTextureRenderer::nativeSizeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void nativeSizeChanged();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:()
QGstreamerMirTextureRenderer::padBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    static GstPadProbeReturn padBufferProbe(GstPad *pad, GstPadProbeInfo *info, gpointer userData);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:private	signature:(GstPad *pad, GstPadProbeInfo *info, gpointer userData)
QGstreamerMirTextureRenderer::QGstreamerMirTextureRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QGstreamerMirTextureRenderer(QObject *parent = 0, const QGstreamerPlayerSession *playerSession = 0);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:(QObject *parent = 0, const QGstreamerPlayerSession *playerSession = 0)
QGstreamerMirTextureRenderer::readyChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void readyChanged(bool);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:(bool)
QGstreamerMirTextureRenderer::renderFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void renderFrame();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:private	signature:()
QGstreamerMirTextureRenderer::setPlayerSession	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void setPlayerSession(const QGstreamerPlayerSession *playerSession);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:(const QGstreamerPlayerSession *playerSession)
QGstreamerMirTextureRenderer::setSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void setSurface(QAbstractVideoSurface *surface);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:(QAbstractVideoSurface *surface)
QGstreamerMirTextureRenderer::sinkChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void sinkChanged();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:()
QGstreamerMirTextureRenderer::stopRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void stopRenderer();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:()
QGstreamerMirTextureRenderer::surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QAbstractVideoSurface *surface() const;$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:() const
QGstreamerMirTextureRenderer::updateNativeVideoSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void updateNativeVideoSize();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:private	signature:()
QGstreamerMirTextureRenderer::videoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    GstElement *videoSink();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:()
QGstreamerMirTextureRenderer::~QGstreamerMirTextureRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    virtual ~QGstreamerMirTextureRenderer();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:()
QGstreamerPlayerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QGstreamerPlayerControl(QGstreamerPlayerSession *session, QObject *parent = 0);$/;"	prototype	class:QGstreamerPlayerControl	access:public	signature:(QGstreamerPlayerSession *session, QObject *parent = 0)
QGstreamerPlayerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^class Q_GSTTOOLS_EXPORT QGstreamerPlayerControl : public QMediaPlayerControl$/;"	class	inherits:QMediaPlayerControl
QGstreamerPlayerControl::handleInvalidMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void handleInvalidMedia();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
QGstreamerPlayerControl::handleResourcesDenied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void handleResourcesDenied();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
QGstreamerPlayerControl::handleResourcesGranted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void handleResourcesGranted();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
QGstreamerPlayerControl::handleResourcesLost	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void handleResourcesLost();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
QGstreamerPlayerControl::m_bufferProgress	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    int m_bufferProgress;$/;"	member	class:QGstreamerPlayerControl	access:private
QGstreamerPlayerControl::m_currentResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaContent m_currentResource;$/;"	member	class:QGstreamerPlayerControl	access:private
QGstreamerPlayerControl::m_currentState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaPlayer::State m_currentState;$/;"	member	class:QGstreamerPlayerControl	access:private
QGstreamerPlayerControl::m_mediaStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaPlayer::MediaStatus m_mediaStatus;$/;"	member	class:QGstreamerPlayerControl	access:private
QGstreamerPlayerControl::m_mediaStatusStack	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QStack<QMediaPlayer::MediaStatus> m_mediaStatusStack;$/;"	member	class:QGstreamerPlayerControl	access:private
QGstreamerPlayerControl::m_pendingSeekPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    qint64 m_pendingSeekPosition;$/;"	member	class:QGstreamerPlayerControl	access:private
QGstreamerPlayerControl::m_resources	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaPlayerResourceSetInterface *m_resources;$/;"	member	class:QGstreamerPlayerControl	access:private
QGstreamerPlayerControl::m_session	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QGstreamerPlayerSession *m_session;$/;"	member	class:QGstreamerPlayerControl	access:private
QGstreamerPlayerControl::m_setMediaPending	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    bool m_setMediaPending;$/;"	member	class:QGstreamerPlayerControl	access:private
QGstreamerPlayerControl::m_stateStack	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QStack<QMediaPlayer::State> m_stateStack;$/;"	member	class:QGstreamerPlayerControl	access:private
QGstreamerPlayerControl::m_stream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QIODevice *m_stream;$/;"	member	class:QGstreamerPlayerControl	access:private
QGstreamerPlayerControl::m_userRequestedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaPlayer::State m_userRequestedState;$/;"	member	class:QGstreamerPlayerControl	access:private
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    bool isAudioAvailable() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    bool isMuted() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    bool isSeekable() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    bool isVideoAvailable() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    const QIODevice *mediaStream() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    int bufferStatus() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    int volume() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    qint64 duration() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    qint64 position() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaContent media() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaPlayer::MediaStatus mediaStatus() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaPlayer::State state() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaTimeRange availablePlaybackRanges() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    qreal playbackRate() const override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void pause() override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void play() override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void setMedia(const QMediaContent&, QIODevice *) override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void setMuted(bool muted) override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void setPlaybackRate(qreal rate) override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void setPosition(qint64 pos) override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void setVolume(int volume) override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void stop() override;$/;"	member	class:QGstreamerPlayerControl	access:public
QGstreamerPlayerControl::playOrPause	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void playOrPause(QMediaPlayer::State state);$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:(QMediaPlayer::State state)
QGstreamerPlayerControl::popAndNotifyState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void popAndNotifyState();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
QGstreamerPlayerControl::processEOS	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void processEOS();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
QGstreamerPlayerControl::pushState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void pushState();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
QGstreamerPlayerControl::QGstreamerPlayerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QGstreamerPlayerControl(QGstreamerPlayerSession *session, QObject *parent = 0);$/;"	prototype	class:QGstreamerPlayerControl	access:public	signature:(QGstreamerPlayerSession *session, QObject *parent = 0)
QGstreamerPlayerControl::resources	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaPlayerResourceSetInterface* resources() const;$/;"	prototype	class:QGstreamerPlayerControl	access:public	signature:() const
QGstreamerPlayerControl::session	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QGstreamerPlayerSession *session() { return m_session; }$/;"	function	class:QGstreamerPlayerControl	access:public	signature:()
QGstreamerPlayerControl::setBufferProgress	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void setBufferProgress(int progress);$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:(int progress)
QGstreamerPlayerControl::setVideoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void setVideoOutput(QObject *output);$/;"	prototype	class:QGstreamerPlayerControl	access:public	signature:(QObject *output)
QGstreamerPlayerControl::updateMediaStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void updateMediaStatus();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
QGstreamerPlayerControl::updateSessionState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void updateSessionState(QMediaPlayer::State state);$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:(QMediaPlayer::State state)
QGstreamerPlayerControl::~QGstreamerPlayerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    ~QGstreamerPlayerControl();$/;"	prototype	class:QGstreamerPlayerControl	access:public	signature:()
QGstreamerPlayerSession	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstreamerPlayerSession(QObject *parent);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QObject *parent)
QGstreamerPlayerSession	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^class Q_GSTTOOLS_EXPORT QGstreamerPlayerSession$/;"	class	inherits:QObject,QGstreamerBusMessageFilter
QGstreamerPlayerSession::activeStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    int activeStream(QMediaStreamsControl::StreamType streamType) const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QMediaStreamsControl::StreamType streamType) const
QGstreamerPlayerSession::addAudioBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void addAudioBufferProbe();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
QGstreamerPlayerSession::addProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void addProbe(QGstreamerAudioProbeControl* probe);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QGstreamerAudioProbeControl* probe)
QGstreamerPlayerSession::addProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void addProbe(QGstreamerVideoProbeControl* probe);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QGstreamerVideoProbeControl* probe)
QGstreamerPlayerSession::addVideoBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void addVideoBufferProbe();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
QGstreamerPlayerSession::appsrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstAppSrc *appsrc() const { return m_appSrc; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::audioAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void audioAvailableChanged(bool audioAvailable);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(bool audioAvailable)
QGstreamerPlayerSession::availablePlaybackRanges	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMediaTimeRange availablePlaybackRanges() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::bufferingProgressChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void bufferingProgressChanged(int percentFilled);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(int percentFilled)
QGstreamerPlayerSession::bus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstreamerBusHelper *bus() const { return m_busHelper; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::configureAppSrcElement	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static void configureAppSrcElement(GObject*, GObject*, GParamSpec*,QGstreamerPlayerSession* _this);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(GObject*, GObject*, GParamSpec*,QGstreamerPlayerSession* _this)
QGstreamerPlayerSession::duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    qint64 duration() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::durationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void durationChanged(qint64 duration);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(qint64 duration)
QGstreamerPlayerSession::endOfMediaReset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void endOfMediaReset();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
QGstreamerPlayerSession::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void error(int error, const QString &errorString);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(int error, const QString &errorString)
QGstreamerPlayerSession::finishVideoOutputChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void finishVideoOutputChange();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
QGstreamerPlayerSession::flushVideoProbes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void flushVideoProbes();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
QGstreamerPlayerSession::getStreamsInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void getStreamsInfo();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
QGstreamerPlayerSession::handleAutoplugSelect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static GstAutoplugSelectResult handleAutoplugSelect(GstBin *bin, GstPad *pad, GstCaps *caps, GstElementFactory *factory, QGstreamerPlayerSession *session);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GstBin *bin, GstPad *pad, GstCaps *caps, GstElementFactory *factory, QGstreamerPlayerSession *session)
QGstreamerPlayerSession::handleElementAdded	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static void handleElementAdded(GstBin *bin, GstElement *element, QGstreamerPlayerSession *session);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GstBin *bin, GstElement *element, QGstreamerPlayerSession *session)
QGstreamerPlayerSession::handleMutedChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static void handleMutedChange(GObject *o, GParamSpec *p, gpointer d);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GObject *o, GParamSpec *p, gpointer d)
QGstreamerPlayerSession::handleStreamsChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static void handleStreamsChange(GstBin *bin, gpointer user_data);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GstBin *bin, gpointer user_data)
QGstreamerPlayerSession::handleVolumeChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static void handleVolumeChange(GObject *o, GParamSpec *p, gpointer d);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GObject *o, GParamSpec *p, gpointer d)
QGstreamerPlayerSession::insertColorSpaceElement	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static void insertColorSpaceElement(GstElement *element, gpointer data);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GstElement *element, gpointer data)
QGstreamerPlayerSession::invalidMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void invalidMedia();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
QGstreamerPlayerSession::isAudioAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool isAudioAvailable() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::isLiveSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool isLiveSource() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool isMuted() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::isSeekable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool isSeekable() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::isVideoAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool isVideoAvailable() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::loadFromStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void loadFromStream(const QNetworkRequest &url, QIODevice *stream);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(const QNetworkRequest &url, QIODevice *stream)
QGstreamerPlayerSession::loadFromUri	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void loadFromUri(const QNetworkRequest &url);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(const QNetworkRequest &url)
QGstreamerPlayerSession::MMSSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^        MMSSrc,$/;"	enumerator	enum:QGstreamerPlayerSession::SourceType
QGstreamerPlayerSession::mutedStateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void mutedStateChanged(bool muted);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(bool muted)
QGstreamerPlayerSession::m_appSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstAppSrc *m_appSrc;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_audioAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_audioAvailable;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_audioProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstreamerAudioProbeControl *m_audioProbe;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_audioSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_audioSink;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_bus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstBus* m_bus;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_busHelper	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstreamerBusHelper* m_busHelper;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_colorSpace	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_colorSpace;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_displayPrerolledFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_displayPrerolledFrame;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    qint64 m_duration;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_durationQueries	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    int m_durationQueries;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_everPlayed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_everPlayed;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_isLiveSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_isLiveSource;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_lastPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    mutable qint64 m_lastPosition;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_muted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_muted;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_nullVideoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_nullVideoSink;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_pendingState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMediaPlayer::State m_pendingState;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_pendingVideoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_pendingVideoSink;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_pipeline	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement *m_pipeline = nullptr; \/\/ Never null$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_playbackRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    qreal m_playbackRate;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_playbin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement *m_playbin = nullptr; \/\/ Can be null$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_playbin2StreamOffset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMap<QMediaStreamsControl::StreamType, int> m_playbin2StreamOffset;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_renderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstreamerVideoRendererInterface *m_renderer;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_request	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QNetworkRequest m_request;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_seekable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_seekable;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_sourceType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    SourceType m_sourceType;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMediaPlayer::State m_state;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_streamProperties	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QList< QMap<QString,QVariant> > m_streamProperties;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_streamTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QList<QMediaStreamsControl::StreamType> m_streamTypes;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_tags	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMap<QByteArray, QVariant> m_tags;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_usingColorspaceElement	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_usingColorspaceElement;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_videoAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool m_videoAvailable;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_videoIdentity	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_videoIdentity;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_videoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QObject *m_videoOutput;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_videoOutputBin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_videoOutputBin;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_videoProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstreamerVideoProbeControl *m_videoProbe;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_videoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_videoSink;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    int m_volume;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::m_volumeElement	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement* m_volumeElement;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool processBusMessage(const QGstreamerMessage &message) override;$/;"	member	class:QGstreamerPlayerSession	access:public
QGstreamerPlayerSession::pad_probe_id	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    gulong pad_probe_id;$/;"	member	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::pause	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool pause();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
QGstreamerPlayerSession::pendingState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMediaPlayer::State pendingState() const { return m_pendingState; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::pipeline	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement *pipeline() const { return m_pipeline; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::pipelineChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void pipelineChanged();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
QGstreamerPlayerSession::play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool play();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
QGstreamerPlayerSession::playbackFinished	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void playbackFinished();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
QGstreamerPlayerSession::playbackRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    qreal playbackRate() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::playbackRateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void playbackRateChanged(qreal);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(qreal)
QGstreamerPlayerSession::playbin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    GstElement *playbin() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::playbinNotifySource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    static void playbinNotifySource(GObject *o, GParamSpec *p, gpointer d);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GObject *o, GParamSpec *p, gpointer d)
QGstreamerPlayerSession::position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    qint64 position() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::positionChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void positionChanged(qint64 position);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(qint64 position)
QGstreamerPlayerSession::processInvalidMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void processInvalidMedia(QMediaPlayer::Error errorCode, const QString& errorString);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(QMediaPlayer::Error errorCode, const QString& errorString)
QGstreamerPlayerSession::QGstreamerPlayerSession	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstreamerPlayerSession(QObject *parent);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QObject *parent)
QGstreamerPlayerSession::removeAudioBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void removeAudioBufferProbe();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
QGstreamerPlayerSession::removeProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void removeProbe(QGstreamerAudioProbeControl* probe);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QGstreamerAudioProbeControl* probe)
QGstreamerPlayerSession::removeProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void removeProbe(QGstreamerVideoProbeControl* probe);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QGstreamerVideoProbeControl* probe)
QGstreamerPlayerSession::removeVideoBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void removeVideoBufferProbe();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
QGstreamerPlayerSession::renderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstreamerVideoRendererInterface *renderer() const { return m_renderer; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::rendererChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void rendererChanged();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
QGstreamerPlayerSession::request	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QNetworkRequest request() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::resumeVideoProbes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void resumeVideoProbes();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
QGstreamerPlayerSession::RTSPSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^        RTSPSrc,$/;"	enumerator	enum:QGstreamerPlayerSession::SourceType
QGstreamerPlayerSession::seek	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool seek(qint64 pos);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(qint64 pos)
QGstreamerPlayerSession::seekableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void seekableChanged(bool);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(bool)
QGstreamerPlayerSession::setActiveStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void setActiveStream(QMediaStreamsControl::StreamType streamType, int streamNumber);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QMediaStreamsControl::StreamType streamType, int streamNumber)
QGstreamerPlayerSession::setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void setMuted(bool muted);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(bool muted)
QGstreamerPlayerSession::setPipeline	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void setPipeline(GstElement *pipeline);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GstElement *pipeline)
QGstreamerPlayerSession::setPlaybackRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void setPlaybackRate(qreal rate);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(qreal rate)
QGstreamerPlayerSession::setSeekable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void setSeekable(bool);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(bool)
QGstreamerPlayerSession::setVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void setVideoRenderer(QObject *renderer);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QObject *renderer)
QGstreamerPlayerSession::setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void setVolume(int volume);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(int volume)
QGstreamerPlayerSession::showPrerollFrames	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void showPrerollFrames(bool enabled);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(bool enabled)
QGstreamerPlayerSession::SoupHTTPSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^        SoupHTTPSrc,$/;"	enumerator	enum:QGstreamerPlayerSession::SourceType
QGstreamerPlayerSession::SourceType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    enum SourceType$/;"	enum	class:QGstreamerPlayerSession	access:private
QGstreamerPlayerSession::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMediaPlayer::State state() const { return m_state; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void stateChanged(QMediaPlayer::State state);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QMediaPlayer::State state)
QGstreamerPlayerSession::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void stop();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
QGstreamerPlayerSession::streamCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    int streamCount() const { return m_streamProperties.count(); }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::streamProperties	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMap<QString,QVariant> streamProperties(int streamNumber) const { return m_streamProperties[streamNumber]; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:(int streamNumber) const
QGstreamerPlayerSession::streamsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void streamsChanged();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
QGstreamerPlayerSession::streamType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMediaStreamsControl::StreamType streamType(int streamNumber) { return m_streamTypes.value(streamNumber, QMediaStreamsControl::UnknownStream); }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:(int streamNumber)
QGstreamerPlayerSession::tags	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMap<QByteArray ,QVariant> tags() const { return m_tags; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::tagsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void tagsChanged();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
QGstreamerPlayerSession::UDPSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^        UDPSrc,$/;"	enumerator	enum:QGstreamerPlayerSession::SourceType
QGstreamerPlayerSession::UnknownSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^        UnknownSrc,$/;"	enumerator	enum:QGstreamerPlayerSession::SourceType
QGstreamerPlayerSession::updateDuration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void updateDuration();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
QGstreamerPlayerSession::updateMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void updateMuted();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
QGstreamerPlayerSession::updateVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void updateVideoRenderer();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
QGstreamerPlayerSession::updateVideoResolutionTag	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void updateVideoResolutionTag();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
QGstreamerPlayerSession::updateVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void updateVolume();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
QGstreamerPlayerSession::videoAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void videoAvailableChanged(bool videoAvailable);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(bool videoAvailable)
QGstreamerPlayerSession::volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    int volume() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
QGstreamerPlayerSession::volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void volumeChanged(int volume);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(int volume)
QGstreamerPlayerSession::~QGstreamerPlayerSession	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    virtual ~QGstreamerPlayerSession();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
QGstreamerSyncMessageFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^class QGstreamerSyncMessageFilter {$/;"	class
QGstreamerSyncMessageFilter::processSyncMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    virtual bool processSyncMessage(const QGstreamerMessage &message) = 0;$/;"	prototype	class:QGstreamerSyncMessageFilter	access:public	signature:(const QGstreamerMessage &message)
QGstreamerVideoInputDeviceControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    QGstreamerVideoInputDeviceControl(GstElementFactory *factory, QObject *parent);$/;"	prototype	class:QGstreamerVideoInputDeviceControl	access:public	signature:(GstElementFactory *factory, QObject *parent)
QGstreamerVideoInputDeviceControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    QGstreamerVideoInputDeviceControl(QObject *parent);$/;"	prototype	class:QGstreamerVideoInputDeviceControl	access:public	signature:(QObject *parent)
QGstreamerVideoInputDeviceControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^class Q_GSTTOOLS_EXPORT QGstreamerVideoInputDeviceControl : public QVideoDeviceSelectorControl$/;"	class	inherits:QVideoDeviceSelectorControl
QGstreamerVideoInputDeviceControl::m_factory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    GstElementFactory *m_factory;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:private
QGstreamerVideoInputDeviceControl::m_selectedDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    int m_selectedDevice;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:private
QGstreamerVideoInputDeviceControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    int defaultDevice() const override;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:public
QGstreamerVideoInputDeviceControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    int deviceCount() const override;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:public
QGstreamerVideoInputDeviceControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    int selectedDevice() const override;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:public
QGstreamerVideoInputDeviceControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    QString deviceDescription(int index) const override;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:public
QGstreamerVideoInputDeviceControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    QString deviceName(int index) const override;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:public
QGstreamerVideoInputDeviceControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    void setSelectedDevice(int index) override;$/;"	member	class:QGstreamerVideoInputDeviceControl	access:public
QGstreamerVideoInputDeviceControl::primaryCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    static QString primaryCamera() { return tr("Main camera"); }$/;"	function	class:QGstreamerVideoInputDeviceControl	access:public	signature:()
QGstreamerVideoInputDeviceControl::QGstreamerVideoInputDeviceControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    QGstreamerVideoInputDeviceControl(GstElementFactory *factory, QObject *parent);$/;"	prototype	class:QGstreamerVideoInputDeviceControl	access:public	signature:(GstElementFactory *factory, QObject *parent)
QGstreamerVideoInputDeviceControl::QGstreamerVideoInputDeviceControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    QGstreamerVideoInputDeviceControl(QObject *parent);$/;"	prototype	class:QGstreamerVideoInputDeviceControl	access:public	signature:(QObject *parent)
QGstreamerVideoInputDeviceControl::secondaryCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    static QString secondaryCamera() { return tr("Front camera"); }$/;"	function	class:QGstreamerVideoInputDeviceControl	access:public	signature:()
QGstreamerVideoInputDeviceControl::~QGstreamerVideoInputDeviceControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    ~QGstreamerVideoInputDeviceControl();$/;"	prototype	class:QGstreamerVideoInputDeviceControl	access:public	signature:()
QGstreamerVideoOverlay	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    explicit QGstreamerVideoOverlay(QObject *parent = 0, const QByteArray &elementName = QByteArray());$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(QObject *parent = 0, const QByteArray &elementName = QByteArray())
QGstreamerVideoOverlay	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^class QGstreamerVideoOverlay$/;"	class	inherits:QObject,QGstreamerSyncMessageFilter,QGstreamerBusMessageFilter,QGstreamerBufferProbe
QGstreamerVideoOverlay::activeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void activeChanged();$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:()
QGstreamerVideoOverlay::aspectRatioMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    Qt::AspectRatioMode aspectRatioMode() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
QGstreamerVideoOverlay::brightness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    int brightness() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
QGstreamerVideoOverlay::brightnessChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void brightnessChanged(int brightness);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int brightness)
QGstreamerVideoOverlay::contrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    int contrast() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
QGstreamerVideoOverlay::contrastChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void contrastChanged(int contrast);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int contrast)
QGstreamerVideoOverlay::expose	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void expose();$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:()
QGstreamerVideoOverlay::hue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    int hue() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
QGstreamerVideoOverlay::hueChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void hueChanged(int hue);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int hue)
QGstreamerVideoOverlay::isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    bool isActive() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
QGstreamerVideoOverlay::m_isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    bool m_isActive = false;$/;"	member	class:QGstreamerVideoOverlay	access:private
QGstreamerVideoOverlay::m_nativeVideoSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    QSize m_nativeVideoSize;$/;"	member	class:QGstreamerVideoOverlay	access:private
QGstreamerVideoOverlay::m_sinkProperties	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    QGstreamerSinkProperties *m_sinkProperties = nullptr;$/;"	member	class:QGstreamerVideoOverlay	access:private
QGstreamerVideoOverlay::m_videoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    GstElement *m_videoSink = nullptr;$/;"	member	class:QGstreamerVideoOverlay	access:private
QGstreamerVideoOverlay::m_windowId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    WId m_windowId = 0;$/;"	member	class:QGstreamerVideoOverlay	access:private
QGstreamerVideoOverlay::nativeVideoSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    QSize nativeVideoSize() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
QGstreamerVideoOverlay::nativeVideoSizeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void nativeVideoSizeChanged();$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:()
QGstreamerVideoOverlay::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    bool processBusMessage(const QGstreamerMessage &message) override;$/;"	member	class:QGstreamerVideoOverlay	access:public
QGstreamerVideoOverlay::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    bool processSyncMessage(const QGstreamerMessage &message) override;$/;"	member	class:QGstreamerVideoOverlay	access:public
QGstreamerVideoOverlay::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void probeCaps(GstCaps *caps) override;$/;"	member	class:QGstreamerVideoOverlay	access:private
QGstreamerVideoOverlay::QGstreamerVideoOverlay	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    explicit QGstreamerVideoOverlay(QObject *parent = 0, const QByteArray &elementName = QByteArray());$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(QObject *parent = 0, const QByteArray &elementName = QByteArray())
QGstreamerVideoOverlay::saturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    int saturation() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
QGstreamerVideoOverlay::saturationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void saturationChanged(int saturation);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int saturation)
QGstreamerVideoOverlay::setAspectRatioMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setAspectRatioMode(Qt::AspectRatioMode mode);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(Qt::AspectRatioMode mode)
QGstreamerVideoOverlay::setBrightness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setBrightness(int brightness);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int brightness)
QGstreamerVideoOverlay::setContrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setContrast(int contrast);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int contrast)
QGstreamerVideoOverlay::setHue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setHue(int hue);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int hue)
QGstreamerVideoOverlay::setRenderRectangle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setRenderRectangle(const QRect &rect);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(const QRect &rect)
QGstreamerVideoOverlay::setSaturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setSaturation(int saturation);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int saturation)
QGstreamerVideoOverlay::setVideoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setVideoSink(GstElement *);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(GstElement *)
QGstreamerVideoOverlay::setWindowHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setWindowHandle(WId id);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(WId id)
QGstreamerVideoOverlay::setWindowHandle_helper	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setWindowHandle_helper(WId id);$/;"	prototype	class:QGstreamerVideoOverlay	access:private	signature:(WId id)
QGstreamerVideoOverlay::showPrerollFrameChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    static void showPrerollFrameChanged(GObject *, GParamSpec *, QGstreamerVideoOverlay *);$/;"	prototype	class:QGstreamerVideoOverlay	access:private	signature:(GObject *, GParamSpec *, QGstreamerVideoOverlay *)
QGstreamerVideoOverlay::updateIsActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void updateIsActive();$/;"	prototype	class:QGstreamerVideoOverlay	access:private	signature:()
QGstreamerVideoOverlay::videoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    GstElement *videoSink() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
QGstreamerVideoOverlay::~QGstreamerVideoOverlay	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    virtual ~QGstreamerVideoOverlay();$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:()
QGstreamerVideoProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    explicit QGstreamerVideoProbeControl(QObject *parent);$/;"	prototype	class:QGstreamerVideoProbeControl	access:public	signature:(QObject *parent)
QGstreamerVideoProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^class Q_GSTTOOLS_EXPORT QGstreamerVideoProbeControl$/;"	class	inherits:QMediaVideoProbeControl,QGstreamerBufferProbe,QSharedData
QGstreamerVideoProbeControl::frameProbed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    void frameProbed();$/;"	prototype	class:QGstreamerVideoProbeControl	access:private	signature:()
QGstreamerVideoProbeControl::m_bytesPerLine	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    int m_bytesPerLine;$/;"	member	class:QGstreamerVideoProbeControl	access:private
QGstreamerVideoProbeControl::m_flushing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    bool m_flushing;$/;"	member	class:QGstreamerVideoProbeControl	access:private
QGstreamerVideoProbeControl::m_format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    QVideoSurfaceFormat m_format;$/;"	member	class:QGstreamerVideoProbeControl	access:private
QGstreamerVideoProbeControl::m_frameMutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    QMutex m_frameMutex;$/;"	member	class:QGstreamerVideoProbeControl	access:private
QGstreamerVideoProbeControl::m_frameProbed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    bool m_frameProbed; \/\/ true if at least one frame was probed$/;"	member	class:QGstreamerVideoProbeControl	access:private
QGstreamerVideoProbeControl::m_pendingFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    QVideoFrame m_pendingFrame;$/;"	member	class:QGstreamerVideoProbeControl	access:private
QGstreamerVideoProbeControl::m_videoInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    GstVideoInfo m_videoInfo;$/;"	member	class:QGstreamerVideoProbeControl	access:private
QGstreamerVideoProbeControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    bool probeBuffer(GstBuffer *buffer) override;$/;"	member	class:QGstreamerVideoProbeControl	access:public
QGstreamerVideoProbeControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    void probeCaps(GstCaps *caps) override;$/;"	member	class:QGstreamerVideoProbeControl	access:public
QGstreamerVideoProbeControl::QGstreamerVideoProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    explicit QGstreamerVideoProbeControl(QObject *parent);$/;"	prototype	class:QGstreamerVideoProbeControl	access:public	signature:(QObject *parent)
QGstreamerVideoProbeControl::startFlushing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    void startFlushing();$/;"	prototype	class:QGstreamerVideoProbeControl	access:public	signature:()
QGstreamerVideoProbeControl::stopFlushing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    void stopFlushing();$/;"	prototype	class:QGstreamerVideoProbeControl	access:public	signature:()
QGstreamerVideoProbeControl::~QGstreamerVideoProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    virtual ~QGstreamerVideoProbeControl();$/;"	prototype	class:QGstreamerVideoProbeControl	access:public	signature:()
QGstreamerVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    QGstreamerVideoRenderer(QObject *parent = 0);$/;"	prototype	class:QGstreamerVideoRenderer	access:public	signature:(QObject *parent = 0)
QGstreamerVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^class Q_GSTTOOLS_EXPORT QGstreamerVideoRenderer : public QVideoRendererControl, public QGstreamerVideoRendererInterface$/;"	class	inherits:QVideoRendererControl,QGstreamerVideoRendererInterface
QGstreamerVideoRenderer::handleFormatChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    void handleFormatChange();$/;"	prototype	class:QGstreamerVideoRenderer	access:private	signature:()
QGstreamerVideoRenderer::m_surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    QPointer<QAbstractVideoSurface> m_surface;$/;"	member	class:QGstreamerVideoRenderer	access:private
QGstreamerVideoRenderer::m_videoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    GstElement *m_videoSink = nullptr;$/;"	member	class:QGstreamerVideoRenderer	access:private
QGstreamerVideoRenderer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    GstElement *videoSink() override;$/;"	member	class:QGstreamerVideoRenderer	access:public
QGstreamerVideoRenderer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    QAbstractVideoSurface *surface() const override;$/;"	member	class:QGstreamerVideoRenderer	access:public
QGstreamerVideoRenderer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    void setSurface(QAbstractVideoSurface *surface) override;$/;"	member	class:QGstreamerVideoRenderer	access:public
QGstreamerVideoRenderer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    void setVideoSink(GstElement *) override;$/;"	member	class:QGstreamerVideoRenderer	access:public
QGstreamerVideoRenderer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    void stopRenderer() override;$/;"	member	class:QGstreamerVideoRenderer	access:public
QGstreamerVideoRenderer::QGstreamerVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    QGstreamerVideoRenderer(QObject *parent = 0);$/;"	prototype	class:QGstreamerVideoRenderer	access:public	signature:(QObject *parent = 0)
QGstreamerVideoRenderer::readyChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    void readyChanged(bool);$/;"	prototype	class:QGstreamerVideoRenderer	access:public	signature:(bool)
QGstreamerVideoRenderer::sinkChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    void sinkChanged();$/;"	prototype	class:QGstreamerVideoRenderer	access:public	signature:()
QGstreamerVideoRenderer::~QGstreamerVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    virtual ~QGstreamerVideoRenderer();$/;"	prototype	class:QGstreamerVideoRenderer	access:public	signature:()
QGstreamerVideoRendererInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorendererinterface_p.h	/^class QGstreamerVideoRendererInterface$/;"	class
QGstreamerVideoRendererInterface::isReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorendererinterface_p.h	/^    virtual bool isReady() const { return true; }$/;"	function	class:QGstreamerVideoRendererInterface	access:public	signature:() const
QGstreamerVideoRendererInterface::setVideoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorendererinterface_p.h	/^    virtual void setVideoSink(GstElement *) {};$/;"	function	class:QGstreamerVideoRendererInterface	access:public	signature:(GstElement *)
QGstreamerVideoRendererInterface::stopRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorendererinterface_p.h	/^    virtual void stopRenderer() {}$/;"	function	class:QGstreamerVideoRendererInterface	access:public	signature:()
QGstreamerVideoRendererInterface::videoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorendererinterface_p.h	/^    virtual GstElement *videoSink() = 0;$/;"	prototype	class:QGstreamerVideoRendererInterface	access:public	signature:()
QGstreamerVideoRendererInterface::~QGstreamerVideoRendererInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorendererinterface_p.h	/^    virtual ~QGstreamerVideoRendererInterface();$/;"	prototype	class:QGstreamerVideoRendererInterface	access:public	signature:()
QGstreamerVideoWidget	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^class Q_GSTTOOLS_EXPORT QGstreamerVideoWidget;$/;"	variable	typeref:class:Q_GSTTOOLS_EXPORT
QGstreamerVideoWidgetControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    explicit QGstreamerVideoWidgetControl(QObject *parent = 0, const QByteArray &elementName = QByteArray());$/;"	prototype	class:QGstreamerVideoWidgetControl	access:public	signature:(QObject *parent = 0, const QByteArray &elementName = QByteArray())
QGstreamerVideoWidgetControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^class Q_GSTTOOLS_EXPORT QGstreamerVideoWidgetControl$/;"	class	inherits:QVideoWidgetControl,QGstreamerVideoRendererInterface,QGstreamerSyncMessageFilter,QGstreamerBusMessageFilter
QGstreamerVideoWidgetControl::createVideoWidget	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void createVideoWidget();$/;"	prototype	class:QGstreamerVideoWidgetControl	access:private	signature:()
QGstreamerVideoWidgetControl::m_fullScreen	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    bool m_fullScreen;$/;"	member	class:QGstreamerVideoWidgetControl	access:private
QGstreamerVideoWidgetControl::m_stopped	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    bool m_stopped;$/;"	member	class:QGstreamerVideoWidgetControl	access:private
QGstreamerVideoWidgetControl::m_videoOverlay	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    QGstreamerVideoOverlay m_videoOverlay;$/;"	member	class:QGstreamerVideoWidgetControl	access:private
QGstreamerVideoWidgetControl::m_widget	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    QGstreamerVideoWidget *m_widget;$/;"	member	class:QGstreamerVideoWidgetControl	access:private
QGstreamerVideoWidgetControl::m_windowId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    WId m_windowId;$/;"	member	class:QGstreamerVideoWidgetControl	access:private
QGstreamerVideoWidgetControl::onNativeVideoSizeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void onNativeVideoSizeChanged();$/;"	prototype	class:QGstreamerVideoWidgetControl	access:private	signature:()
QGstreamerVideoWidgetControl::onOverlayActiveChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void onOverlayActiveChanged();$/;"	prototype	class:QGstreamerVideoWidgetControl	access:private	signature:()
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    bool eventFilter(QObject *object, QEvent *event) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    bool isFullScreen() const override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    bool processBusMessage(const QGstreamerMessage &message) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:private
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    bool processSyncMessage(const QGstreamerMessage &message) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:private
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    GstElement *videoSink() override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    int brightness() const override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    int contrast() const override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    int hue() const override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    int saturation() const override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    Qt::AspectRatioMode aspectRatioMode() const override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    QWidget *videoWidget() override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void setAspectRatioMode(Qt::AspectRatioMode mode) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void setBrightness(int brightness) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void setContrast(int contrast) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void setFullScreen(bool fullScreen) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void setHue(int hue) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void setSaturation(int saturation) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void setVideoSink(GstElement *) override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void stopRenderer() override;$/;"	member	class:QGstreamerVideoWidgetControl	access:public
QGstreamerVideoWidgetControl::QGstreamerVideoWidgetControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    explicit QGstreamerVideoWidgetControl(QObject *parent = 0, const QByteArray &elementName = QByteArray());$/;"	prototype	class:QGstreamerVideoWidgetControl	access:public	signature:(QObject *parent = 0, const QByteArray &elementName = QByteArray())
QGstreamerVideoWidgetControl::readyChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void readyChanged(bool);$/;"	prototype	class:QGstreamerVideoWidgetControl	access:public	signature:(bool)
QGstreamerVideoWidgetControl::sinkChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void sinkChanged();$/;"	prototype	class:QGstreamerVideoWidgetControl	access:public	signature:()
QGstreamerVideoWidgetControl::updateWidgetAttributes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void updateWidgetAttributes();$/;"	prototype	class:QGstreamerVideoWidgetControl	access:private	signature:()
QGstreamerVideoWidgetControl::~QGstreamerVideoWidgetControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    virtual ~QGstreamerVideoWidgetControl();$/;"	prototype	class:QGstreamerVideoWidgetControl	access:public	signature:()
QGstreamerVideoWindow	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    explicit QGstreamerVideoWindow(QObject *parent = 0, const QByteArray &elementName = QByteArray());$/;"	prototype	class:QGstreamerVideoWindow	access:public	signature:(QObject *parent = 0, const QByteArray &elementName = QByteArray())
QGstreamerVideoWindow	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^class Q_GSTTOOLS_EXPORT QGstreamerVideoWindow :$/;"	class	inherits:QVideoWindowControl,QGstreamerVideoRendererInterface,QGstreamerSyncMessageFilter,QGstreamerBusMessageFilter
QGstreamerVideoWindow::m_colorKey	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    mutable QColor m_colorKey;$/;"	member	class:QGstreamerVideoWindow	access:private
QGstreamerVideoWindow::m_displayRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    QRect m_displayRect;$/;"	member	class:QGstreamerVideoWindow	access:private
QGstreamerVideoWindow::m_fullScreen	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    bool m_fullScreen;$/;"	member	class:QGstreamerVideoWindow	access:private
QGstreamerVideoWindow::m_videoOverlay	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    QGstreamerVideoOverlay m_videoOverlay;$/;"	member	class:QGstreamerVideoWindow	access:private
QGstreamerVideoWindow::m_windowId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    WId m_windowId;$/;"	member	class:QGstreamerVideoWindow	access:private
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    bool isFullScreen() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    bool processBusMessage(const QGstreamerMessage &message) override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    bool processSyncMessage(const QGstreamerMessage &message) override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    GstElement *videoSink() override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    int brightness() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    int contrast() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    int hue() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    int saturation() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    QRect displayRect() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    QSize nativeSize() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    Qt::AspectRatioMode aspectRatioMode() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void repaint() override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setAspectRatioMode(Qt::AspectRatioMode mode) override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setBrightness(int brightness) override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setContrast(int contrast) override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setDisplayRect(const QRect &rect) override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setFullScreen(bool fullScreen) override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setHue(int hue) override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setSaturation(int saturation) override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void setWinId(WId id) override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    WId winId() const override;$/;"	member	class:QGstreamerVideoWindow	access:public
QGstreamerVideoWindow::QGstreamerVideoWindow	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    explicit QGstreamerVideoWindow(QObject *parent = 0, const QByteArray &elementName = QByteArray());$/;"	prototype	class:QGstreamerVideoWindow	access:public	signature:(QObject *parent = 0, const QByteArray &elementName = QByteArray())
QGstreamerVideoWindow::readyChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void readyChanged(bool);$/;"	prototype	class:QGstreamerVideoWindow	access:public	signature:(bool)
QGstreamerVideoWindow::sinkChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void sinkChanged();$/;"	prototype	class:QGstreamerVideoWindow	access:public	signature:()
QGstreamerVideoWindow::surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    QAbstractVideoSurface *surface() const;$/;"	prototype	class:QGstreamerVideoWindow	access:public	signature:() const
QGstreamerVideoWindow::~QGstreamerVideoWindow	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    ~QGstreamerVideoWindow();$/;"	prototype	class:QGstreamerVideoWindow	access:public	signature:()
QGstUtils	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^namespace QGstUtils {$/;"	namespace
QGstUtils::audioFormatForBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QAudioFormat audioFormatForBuffer(GstBuffer *buffer);$/;"	prototype	namespace:QGstUtils	signature:(GstBuffer *buffer)
QGstUtils::audioFormatForCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QAudioFormat audioFormatForCaps(const GstCaps *caps);$/;"	prototype	namespace:QGstUtils	signature:(const GstCaps *caps)
QGstUtils::audioFormatForSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QAudioFormat audioFormatForSample(GstSample *sample);$/;"	prototype	namespace:QGstUtils	signature:(GstSample *sample)
QGstUtils::bufferToImage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QImage bufferToImage(GstBuffer *buffer);$/;"	prototype	namespace:QGstUtils	signature:(GstBuffer *buffer)
QGstUtils::bufferToImage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QImage bufferToImage(GstBuffer *buffer, const GstVideoInfo &info);$/;"	prototype	namespace:QGstUtils	signature:(GstBuffer *buffer, const GstVideoInfo &info)
QGstUtils::cameraDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QString cameraDescription(const QString &device, GstElementFactory * factory = 0);$/;"	prototype	namespace:QGstUtils	signature:(const QString &device, GstElementFactory * factory = 0)
QGstUtils::cameraDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QList<QByteArray> cameraDevices(GstElementFactory * factory = 0);$/;"	prototype	namespace:QGstUtils	signature:(GstElementFactory * factory = 0)
QGstUtils::cameraDriver	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QByteArray cameraDriver(const QString &device, GstElementFactory * factory = 0);$/;"	prototype	namespace:QGstUtils	signature:(const QString &device, GstElementFactory * factory = 0)
QGstUtils::CameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    struct Q_GSTTOOLS_EXPORT CameraInfo$/;"	struct	namespace:QGstUtils
QGstUtils::CameraInfo::description	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^        QString description;$/;"	member	struct:QGstUtils::CameraInfo	access:public
QGstUtils::CameraInfo::driver	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^        QByteArray driver;$/;"	member	struct:QGstUtils::CameraInfo	access:public
QGstUtils::CameraInfo::name	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^        QString name;$/;"	member	struct:QGstUtils::CameraInfo	access:public
QGstUtils::CameraInfo::orientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^        int orientation;$/;"	member	struct:QGstUtils::CameraInfo	access:public
QGstUtils::CameraInfo::position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^        QCamera::Position position;$/;"	member	struct:QGstUtils::CameraInfo	access:public
QGstUtils::cameraOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT int cameraOrientation(const QString &device, GstElementFactory * factory = 0);$/;"	prototype	namespace:QGstUtils	signature:(const QString &device, GstElementFactory * factory = 0)
QGstUtils::cameraPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QCamera::Position cameraPosition(const QString &device, GstElementFactory * factory = 0);$/;"	prototype	namespace:QGstUtils	signature:(const QString &device, GstElementFactory * factory = 0)
QGstUtils::capsCorrectedResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QSize capsCorrectedResolution(const GstCaps *caps);$/;"	prototype	namespace:QGstUtils	signature:(const GstCaps *caps)
QGstUtils::capsForAudioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT GstCaps *capsForAudioFormat(const QAudioFormat &format);$/;"	prototype	namespace:QGstUtils	signature:(const QAudioFormat &format)
QGstUtils::capsForFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT GstCaps *capsForFormats(const QList<QVideoFrame::PixelFormat> &formats);$/;"	prototype	namespace:QGstUtils	signature:(const QList<QVideoFrame::PixelFormat> &formats)
QGstUtils::capsResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QSize capsResolution(const GstCaps *caps);$/;"	prototype	namespace:QGstUtils	signature:(const GstCaps *caps)
QGstUtils::enumerateCameras	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QVector<CameraInfo> enumerateCameras(GstElementFactory *factory = 0);$/;"	prototype	namespace:QGstUtils	signature:(GstElementFactory *factory = 0)
QGstUtils::fileExtensionForMimeType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QString fileExtensionForMimeType(const QString &mimeType);$/;"	prototype	namespace:QGstUtils	signature:(const QString &mimeType)
QGstUtils::formatForCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QVideoSurfaceFormat formatForCaps($/;"	prototype	namespace:QGstUtils	signature:( GstCaps *caps, GstVideoInfo *info = 0, QAbstractVideoBuffer::HandleType handleType = QAbstractVideoBuffer::NoHandle)
QGstUtils::formatForCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QVideoSurfaceFormat formatForCaps($/;"	prototype	namespace:QGstUtils	signature:( GstCaps *caps, int *bytesPerLine = 0, QAbstractVideoBuffer::HandleType handleType = QAbstractVideoBuffer::NoHandle)
QGstUtils::gstTagListToMap	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QMap<QByteArray, QVariant> gstTagListToMap(const GstTagList *list);$/;"	prototype	namespace:QGstUtils	signature:(const GstTagList *list)
QGstUtils::hasSupport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QMultimedia::SupportEstimate hasSupport(const QString &mimeType,$/;"	prototype	namespace:QGstUtils	signature:(const QString &mimeType, const QStringList &codecs, const QSet<QString> &supportedMimeTypeSet)
QGstUtils::initializeGst	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT void initializeGst();$/;"	prototype	namespace:QGstUtils	signature:()
QGstUtils::setFrameTimeStamps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    void setFrameTimeStamps(QVideoFrame *frame, GstBuffer *buffer);$/;"	prototype	namespace:QGstUtils	signature:(QVideoFrame *frame, GstBuffer *buffer)
QGstUtils::setMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT void setMetaData(GstBin *bin, const QMap<QByteArray, QVariant> &data);$/;"	prototype	namespace:QGstUtils	signature:(GstBin *bin, const QMap<QByteArray, QVariant> &data)
QGstUtils::setMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT void setMetaData(GstElement *element, const QMap<QByteArray, QVariant> &data);$/;"	prototype	namespace:QGstUtils	signature:(GstElement *element, const QMap<QByteArray, QVariant> &data)
QGstUtils::structureFrameRateRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QPair<qreal, qreal> structureFrameRateRange(const GstStructure *s);$/;"	prototype	namespace:QGstUtils	signature:(const GstStructure *s)
QGstUtils::structurePixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QSize structurePixelAspectRatio(const GstStructure *s);$/;"	prototype	namespace:QGstUtils	signature:(const GstStructure *s)
QGstUtils::structurePixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QVideoFrame::PixelFormat structurePixelFormat(const GstStructure *s, int *bpp = 0);$/;"	prototype	namespace:QGstUtils	signature:(const GstStructure *s, int *bpp = 0)
QGstUtils::structureResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QSize structureResolution(const GstStructure *s);$/;"	prototype	namespace:QGstUtils	signature:(const GstStructure *s)
QGstUtils::supportedMimeTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QSet<QString> supportedMimeTypes(bool (*isValidFactory)(GstElementFactory *factory));$/;"	prototype	namespace:QGstUtils	signature:(bool (isValidFactory)GstElementFactory *factory))
QGstUtils::videoFilterCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT GstCaps *videoFilterCaps();$/;"	prototype	namespace:QGstUtils	signature:()
QGstVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    QGstVideoBuffer(GstBuffer *buffer, const GstVideoInfo &info);$/;"	prototype	class:QGstVideoBuffer	access:public	signature:(GstBuffer *buffer, const GstVideoInfo &info)
QGstVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    QGstVideoBuffer(GstBuffer *buffer, const GstVideoInfo &info,$/;"	prototype	class:QGstVideoBuffer	access:public	signature:(GstBuffer *buffer, const GstVideoInfo &info, HandleType handleType, const QVariant &handle)
QGstVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^class Q_GSTTOOLS_EXPORT QGstVideoBuffer : public QAbstractPlanarVideoBuffer$/;"	class	inherits:QAbstractPlanarVideoBuffer
QGstVideoBuffer::m_buffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    GstBuffer *m_buffer;$/;"	member	class:QGstVideoBuffer	access:private
QGstVideoBuffer::m_bytesPerLine	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    int m_bytesPerLine;$/;"	member	class:QGstVideoBuffer	access:private
QGstVideoBuffer::m_frame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    GstVideoFrame m_frame;$/;"	member	class:QGstVideoBuffer	access:private
QGstVideoBuffer::m_handle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    QVariant m_handle;$/;"	member	class:QGstVideoBuffer	access:private
QGstVideoBuffer::m_mode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    MapMode m_mode;$/;"	member	class:QGstVideoBuffer	access:private
QGstVideoBuffer::m_videoInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    GstVideoInfo m_videoInfo;$/;"	member	class:QGstVideoBuffer	access:private
QGstVideoBuffer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    int map(MapMode mode, int *numBytes, int bytesPerLine[4], uchar *data[4]) override;$/;"	member	class:QGstVideoBuffer	access:public
QGstVideoBuffer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    MapMode mapMode() const override;$/;"	member	class:QGstVideoBuffer	access:public
QGstVideoBuffer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    uchar *map(MapMode mode, int *numBytes, int *bytesPerLine) override;$/;"	member	class:QGstVideoBuffer	access:public
QGstVideoBuffer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    void unmap() override;$/;"	member	class:QGstVideoBuffer	access:public
QGstVideoBuffer::QGstVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    QGstVideoBuffer(GstBuffer *buffer, const GstVideoInfo &info);$/;"	prototype	class:QGstVideoBuffer	access:public	signature:(GstBuffer *buffer, const GstVideoInfo &info)
QGstVideoBuffer::QGstVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    QGstVideoBuffer(GstBuffer *buffer, const GstVideoInfo &info,$/;"	prototype	class:QGstVideoBuffer	access:public	signature:(GstBuffer *buffer, const GstVideoInfo &info, HandleType handleType, const QVariant &handle)
QGstVideoBuffer::~QGstVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    ~QGstVideoBuffer();$/;"	prototype	class:QGstVideoBuffer	access:public	signature:()
QGstVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^class Q_GSTTOOLS_EXPORT QGstVideoRenderer$/;"	class
QGstVideoRenderer::flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual void flush(QAbstractVideoSurface *surface) = 0; \/\/ surface may be null if unexpectedly deleted.$/;"	prototype	class:QGstVideoRenderer	access:public	signature:(QAbstractVideoSurface *surface)
QGstVideoRenderer::getCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual GstCaps *getCaps(QAbstractVideoSurface *surface) = 0;$/;"	prototype	class:QGstVideoRenderer	access:public	signature:(QAbstractVideoSurface *surface)
QGstVideoRenderer::present	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual bool present(QAbstractVideoSurface *surface, GstBuffer *buffer) = 0;$/;"	prototype	class:QGstVideoRenderer	access:public	signature:(QAbstractVideoSurface *surface, GstBuffer *buffer)
QGstVideoRenderer::proposeAllocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual bool proposeAllocation(GstQuery *query) = 0;    \/\/ may be called from a thread.$/;"	prototype	class:QGstVideoRenderer	access:public	signature:(GstQuery *query)
QGstVideoRenderer::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual bool start(QAbstractVideoSurface *surface, GstCaps *caps) = 0;$/;"	prototype	class:QGstVideoRenderer	access:public	signature:(QAbstractVideoSurface *surface, GstCaps *caps)
QGstVideoRenderer::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual void stop(QAbstractVideoSurface *surface) = 0;  \/\/ surface may be null if unexpectedly deleted.$/;"	prototype	class:QGstVideoRenderer	access:public	signature:(QAbstractVideoSurface *surface)
QGstVideoRenderer::~QGstVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual ~QGstVideoRenderer() {}$/;"	function	class:QGstVideoRenderer	access:public	signature:()
QGstVideoRendererInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^class Q_GSTTOOLS_EXPORT QGstVideoRendererInterface$/;"	class
QGstVideoRendererInterface::createRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual QGstVideoRenderer *createRenderer() = 0;$/;"	prototype	class:QGstVideoRendererInterface	access:public	signature:()
QGstVideoRendererInterface::~QGstVideoRendererInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual ~QGstVideoRendererInterface() {}$/;"	function	class:QGstVideoRendererInterface	access:public	signature:()
QGstVideoRendererPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    explicit QGstVideoRendererPlugin(QObject *parent = 0);$/;"	prototype	class:QGstVideoRendererPlugin	access:public	signature:(QObject *parent = 0)
QGstVideoRendererPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^class Q_GSTTOOLS_EXPORT QGstVideoRendererPlugin : public QObject, public QGstVideoRendererInterface$/;"	class	inherits:QObject,QGstVideoRendererInterface
QGstVideoRendererPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    QGstVideoRenderer *createRenderer() override = 0;$/;"	member	class:QGstVideoRendererPlugin	access:public
QGstVideoRendererPlugin::QGstVideoRendererPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    explicit QGstVideoRendererPlugin(QObject *parent = 0);$/;"	prototype	class:QGstVideoRendererPlugin	access:public	signature:(QObject *parent = 0)
QGstVideoRendererPlugin::~QGstVideoRendererPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual ~QGstVideoRendererPlugin() {}$/;"	function	class:QGstVideoRendererPlugin	access:public	signature:()
QGstVideoRendererSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^class Q_GSTTOOLS_EXPORT QGstVideoRendererSink$/;"	class
QGstVideoRendererSink::base_init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static void base_init(gpointer g_class);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(gpointer g_class)
QGstVideoRendererSink::change_state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static GstStateChangeReturn change_state(GstElement *element, GstStateChange transition);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GstElement *element, GstStateChange transition)
QGstVideoRendererSink::class_init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static void class_init(gpointer g_class, gpointer class_data);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(gpointer g_class, gpointer class_data)
QGstVideoRendererSink::createSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static QGstVideoRendererSink *createSink(QAbstractVideoSurface *surface);$/;"	prototype	class:QGstVideoRendererSink	access:public	signature:(QAbstractVideoSurface *surface)
QGstVideoRendererSink::delegate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QVideoSurfaceGstDelegate *delegate;$/;"	member	class:QGstVideoRendererSink	access:private
QGstVideoRendererSink::finalize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static void finalize(GObject *object);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GObject *object)
QGstVideoRendererSink::get_caps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static GstCaps *get_caps(GstBaseSink *sink, GstCaps *filter);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GstBaseSink *sink, GstCaps *filter)
QGstVideoRendererSink::get_type	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static GType get_type();$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:()
QGstVideoRendererSink::handleShowPrerollChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static void handleShowPrerollChange(GObject *o, GParamSpec *p, gpointer d);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GObject *o, GParamSpec *p, gpointer d)
QGstVideoRendererSink::instance_init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static void instance_init(GTypeInstance *instance, gpointer g_class);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GTypeInstance *instance, gpointer g_class)
QGstVideoRendererSink::parent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstVideoSink parent;$/;"	member	class:QGstVideoRendererSink	access:public
QGstVideoRendererSink::propose_allocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static gboolean propose_allocation(GstBaseSink *sink, GstQuery *query);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GstBaseSink *sink, GstQuery *query)
QGstVideoRendererSink::setSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static void setSurface(QAbstractVideoSurface *surface);$/;"	prototype	class:QGstVideoRendererSink	access:public	signature:(QAbstractVideoSurface *surface)
QGstVideoRendererSink::set_caps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static gboolean set_caps(GstBaseSink *sink, GstCaps *caps);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GstBaseSink *sink, GstCaps *caps)
QGstVideoRendererSink::show_frame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static GstFlowReturn show_frame(GstVideoSink *sink, GstBuffer *buffer);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GstVideoSink *sink, GstBuffer *buffer)
QGstVideoRendererSink::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static gboolean stop(GstBaseSink *sink);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GstBaseSink *sink)
QGstVideoRendererSink::unlock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static gboolean unlock(GstBaseSink *sink);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GstBaseSink *sink)
QGstVideoRendererSinkClass	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^class QGstVideoRendererSinkClass$/;"	class
QGstVideoRendererSinkClass::parent_class	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstVideoSinkClass parent_class;$/;"	member	class:QGstVideoRendererSinkClass	access:public
QImageEncoderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^    explicit QImageEncoderControl(QObject *parent = nullptr);$/;"	prototype	class:QImageEncoderControl	access:protected	signature:(QObject *parent = nullptr)
QImageEncoderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^class Q_MULTIMEDIA_EXPORT QImageEncoderControl : public QMediaControl$/;"	class	inherits:QMediaControl
QImageEncoderControl::imageCodecDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^    virtual QString imageCodecDescription(const QString &codec) const = 0;$/;"	prototype	class:QImageEncoderControl	access:public	signature:(const QString &codec) const
QImageEncoderControl::imageSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^    virtual QImageEncoderSettings imageSettings() const = 0;$/;"	prototype	class:QImageEncoderControl	access:public	signature:() const
QImageEncoderControl::QImageEncoderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^    explicit QImageEncoderControl(QObject *parent = nullptr);$/;"	prototype	class:QImageEncoderControl	access:protected	signature:(QObject *parent = nullptr)
QImageEncoderControl::setImageSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^    virtual void setImageSettings(const QImageEncoderSettings &settings) = 0;$/;"	prototype	class:QImageEncoderControl	access:public	signature:(const QImageEncoderSettings &settings)
QImageEncoderControl::supportedImageCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^    virtual QStringList supportedImageCodecs() const = 0;$/;"	prototype	class:QImageEncoderControl	access:public	signature:() const
QImageEncoderControl::supportedResolutions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^    virtual QList<QSize> supportedResolutions(const QImageEncoderSettings &settings,$/;"	prototype	class:QImageEncoderControl	access:public	signature:(const QImageEncoderSettings &settings, bool *continuous = nullptr) const
QImageEncoderControl::~QImageEncoderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^    virtual ~QImageEncoderControl();$/;"	prototype	class:QImageEncoderControl	access:public	signature:()
QImageEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QImageEncoderSettings();$/;"	prototype	class:QImageEncoderSettings	access:public	signature:()
QImageEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QImageEncoderSettings(const QImageEncoderSettings& other);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QImageEncoderSettings& other)
QImageEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^class Q_MULTIMEDIA_EXPORT QImageEncoderSettings$/;"	class
QImageEncoderSettings::codec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QString codec() const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:() const
QImageEncoderSettings::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QSharedDataPointer<QImageEncoderSettingsPrivate> d;$/;"	member	class:QImageEncoderSettings	access:private
QImageEncoderSettings::encodingOption	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVariant encodingOption(const QString &option) const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QString &option) const
QImageEncoderSettings::encodingOptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVariantMap encodingOptions() const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:() const
QImageEncoderSettings::isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool isNull() const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:() const
QImageEncoderSettings::operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool operator!=(const QImageEncoderSettings &other) const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QImageEncoderSettings &other) const
QImageEncoderSettings::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QImageEncoderSettings& operator=(const QImageEncoderSettings &other);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QImageEncoderSettings &other)
QImageEncoderSettings::operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool operator==(const QImageEncoderSettings &other) const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QImageEncoderSettings &other) const
QImageEncoderSettings::QImageEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QImageEncoderSettings();$/;"	prototype	class:QImageEncoderSettings	access:public	signature:()
QImageEncoderSettings::QImageEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QImageEncoderSettings(const QImageEncoderSettings& other);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QImageEncoderSettings& other)
QImageEncoderSettings::quality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QMultimedia::EncodingQuality quality() const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:() const
QImageEncoderSettings::resolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QSize resolution() const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:() const
QImageEncoderSettings::setCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setCodec(const QString &);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QString &)
QImageEncoderSettings::setEncodingOption	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingOption(const QString &option, const QVariant &value);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QString &option, const QVariant &value)
QImageEncoderSettings::setEncodingOptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingOptions(const QVariantMap &options);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QVariantMap &options)
QImageEncoderSettings::setQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setQuality(QMultimedia::EncodingQuality quality);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(QMultimedia::EncodingQuality quality)
QImageEncoderSettings::setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setResolution(const QSize &);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QSize &)
QImageEncoderSettings::setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setResolution(int width, int height);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(int width, int height)
QImageEncoderSettings::~QImageEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    ~QImageEncoderSettings();$/;"	prototype	class:QImageEncoderSettings	access:public	signature:()
QImageVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qimagevideobuffer_p.h	/^    QImageVideoBuffer(const QImage &image);$/;"	prototype	class:QImageVideoBuffer	access:public	signature:(const QImage &image)
QImageVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qimagevideobuffer_p.h	/^class Q_MULTIMEDIA_EXPORT QImageVideoBuffer : public QAbstractVideoBuffer$/;"	class	inherits:QAbstractVideoBuffer
QImageVideoBuffer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qimagevideobuffer_p.h	/^    MapMode mapMode() const override;$/;"	member	class:QImageVideoBuffer	access:public
QImageVideoBuffer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qimagevideobuffer_p.h	/^    uchar *map(MapMode mode, int *numBytes, int *bytesPerLine) override;$/;"	member	class:QImageVideoBuffer	access:public
QImageVideoBuffer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qimagevideobuffer_p.h	/^    void unmap() override;$/;"	member	class:QImageVideoBuffer	access:public
QImageVideoBuffer::QImageVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qimagevideobuffer_p.h	/^    QImageVideoBuffer(const QImage &image);$/;"	prototype	class:QImageVideoBuffer	access:public	signature:(const QImage &image)
QImageVideoBuffer::~QImageVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qimagevideobuffer_p.h	/^    ~QImageVideoBuffer();$/;"	prototype	class:QImageVideoBuffer	access:public	signature:()
qIsDefaultAspect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^inline bool qIsDefaultAspect(int o)$/;"	function	namespace:__anon1	signature:(int o)
QMediaAudioProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaaudioprobecontrol.h	/^    explicit QMediaAudioProbeControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaAudioProbeControl	access:protected	signature:(QObject *parent = nullptr)
QMediaAudioProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaaudioprobecontrol.h	/^class Q_MULTIMEDIA_EXPORT QMediaAudioProbeControl : public QMediaControl$/;"	class	inherits:QMediaControl
QMediaAudioProbeControl::audioBufferProbed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaaudioprobecontrol.h	/^    void audioBufferProbed(const QAudioBuffer &buffer);$/;"	prototype	class:QMediaAudioProbeControl	access:public	signature:(const QAudioBuffer &buffer)
QMediaAudioProbeControl::flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaaudioprobecontrol.h	/^    void flush();$/;"	prototype	class:QMediaAudioProbeControl	access:public	signature:()
QMediaAudioProbeControl::QMediaAudioProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaaudioprobecontrol.h	/^    explicit QMediaAudioProbeControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaAudioProbeControl	access:protected	signature:(QObject *parent = nullptr)
QMediaAudioProbeControl::~QMediaAudioProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaaudioprobecontrol.h	/^    virtual ~QMediaAudioProbeControl();$/;"	prototype	class:QMediaAudioProbeControl	access:public	signature:()
QMediaAvailabilityControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaavailabilitycontrol.h	/^    explicit QMediaAvailabilityControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaAvailabilityControl	access:protected	signature:(QObject *parent = nullptr)
QMediaAvailabilityControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaavailabilitycontrol.h	/^class Q_MULTIMEDIA_EXPORT QMediaAvailabilityControl : public QMediaControl$/;"	class	inherits:QMediaControl
QMediaAvailabilityControl::availability	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaavailabilitycontrol.h	/^    virtual QMultimedia::AvailabilityStatus availability() const = 0;$/;"	prototype	class:QMediaAvailabilityControl	access:public	signature:() const
QMediaAvailabilityControl::availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaavailabilitycontrol.h	/^    void availabilityChanged(QMultimedia::AvailabilityStatus availability);$/;"	prototype	class:QMediaAvailabilityControl	access:public	signature:(QMultimedia::AvailabilityStatus availability)
QMediaAvailabilityControl::QMediaAvailabilityControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaavailabilitycontrol.h	/^    explicit QMediaAvailabilityControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaAvailabilityControl	access:protected	signature:(QObject *parent = nullptr)
QMediaAvailabilityControl::~QMediaAvailabilityControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaavailabilitycontrol.h	/^    ~QMediaAvailabilityControl();$/;"	prototype	class:QMediaAvailabilityControl	access:public	signature:()
QMediaBindableInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediabindableinterface.h	/^class Q_MULTIMEDIA_EXPORT QMediaBindableInterface$/;"	class
QMediaBindableInterface::mediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediabindableinterface.h	/^    virtual QMediaObject *mediaObject() const = 0;$/;"	prototype	class:QMediaBindableInterface	access:public	signature:() const
QMediaBindableInterface::setMediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediabindableinterface.h	/^    virtual bool setMediaObject(QMediaObject *object) = 0;$/;"	prototype	class:QMediaBindableInterface	access:protected	signature:(QMediaObject *object)
QMediaBindableInterface::~QMediaBindableInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediabindableinterface.h	/^    virtual ~QMediaBindableInterface();$/;"	prototype	class:QMediaBindableInterface	access:public	signature:()
QMediaContainerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontainercontrol.h	/^    explicit QMediaContainerControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaContainerControl	access:protected	signature:(QObject *parent = nullptr)
QMediaContainerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontainercontrol.h	/^class Q_MULTIMEDIA_EXPORT QMediaContainerControl : public QMediaControl$/;"	class	inherits:QMediaControl
QMediaContainerControl::containerDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontainercontrol.h	/^    virtual QString containerDescription(const QString &formatMimeType) const = 0;$/;"	prototype	class:QMediaContainerControl	access:public	signature:(const QString &formatMimeType) const
QMediaContainerControl::containerFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontainercontrol.h	/^    virtual QString containerFormat() const = 0;$/;"	prototype	class:QMediaContainerControl	access:public	signature:() const
QMediaContainerControl::QMediaContainerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontainercontrol.h	/^    explicit QMediaContainerControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaContainerControl	access:protected	signature:(QObject *parent = nullptr)
QMediaContainerControl::setContainerFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontainercontrol.h	/^    virtual void setContainerFormat(const QString &format) = 0;$/;"	prototype	class:QMediaContainerControl	access:public	signature:(const QString &format)
QMediaContainerControl::supportedContainers	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontainercontrol.h	/^    virtual QStringList supportedContainers() const = 0;$/;"	prototype	class:QMediaContainerControl	access:public	signature:() const
QMediaContainerControl::~QMediaContainerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontainercontrol.h	/^    virtual ~QMediaContainerControl();$/;"	prototype	class:QMediaContainerControl	access:public	signature:()
QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent();$/;"	prototype	class:QMediaContent	access:public	signature:()
QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent(const QMediaContent &other);$/;"	prototype	class:QMediaContent	access:public	signature:(const QMediaContent &other)
QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent(const QMediaResource &contentResource);$/;"	prototype	class:QMediaContent	access:public	signature:(const QMediaResource &contentResource)
QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent(const QMediaResourceList &resources);$/;"	prototype	class:QMediaContent	access:public	signature:(const QMediaResourceList &resources)
QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent(const QNetworkRequest &contentRequest);$/;"	prototype	class:QMediaContent	access:public	signature:(const QNetworkRequest &contentRequest)
QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent(const QUrl &contentUrl);$/;"	prototype	class:QMediaContent	access:public	signature:(const QUrl &contentUrl)
QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent(QMediaPlaylist *playlist, const QUrl &contentUrl = QUrl(), bool takeOwnership = false);$/;"	prototype	class:QMediaContent	access:public	signature:(QMediaPlaylist *playlist, const QUrl &contentUrl = QUrl(), bool takeOwnership = false)
QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^class Q_MULTIMEDIA_EXPORT QMediaContent$/;"	class
QMediaContent::canonicalRequest	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QNetworkRequest canonicalRequest() const;$/;"	prototype	class:QMediaContent	access:public	signature:() const
QMediaContent::canonicalResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaResource canonicalResource() const;$/;"	prototype	class:QMediaContent	access:public	signature:() const
QMediaContent::canonicalUrl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QUrl canonicalUrl() const;$/;"	prototype	class:QMediaContent	access:public	signature:() const
QMediaContent::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QSharedDataPointer<QMediaContentPrivate> d;$/;"	member	class:QMediaContent	access:private
QMediaContent::isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    bool isNull() const;$/;"	prototype	class:QMediaContent	access:public	signature:() const
QMediaContent::operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    bool operator!=(const QMediaContent &other) const;$/;"	prototype	class:QMediaContent	access:public	signature:(const QMediaContent &other) const
QMediaContent::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent& operator=(const QMediaContent &other);$/;"	prototype	class:QMediaContent	access:public	signature:(const QMediaContent &other)
QMediaContent::operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    bool operator==(const QMediaContent &other) const;$/;"	prototype	class:QMediaContent	access:public	signature:(const QMediaContent &other) const
QMediaContent::playlist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaPlaylist *playlist() const;$/;"	prototype	class:QMediaContent	access:public	signature:() const
QMediaContent::QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent();$/;"	prototype	class:QMediaContent	access:public	signature:()
QMediaContent::QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent(const QMediaContent &other);$/;"	prototype	class:QMediaContent	access:public	signature:(const QMediaContent &other)
QMediaContent::QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent(const QMediaResource &contentResource);$/;"	prototype	class:QMediaContent	access:public	signature:(const QMediaResource &contentResource)
QMediaContent::QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent(const QMediaResourceList &resources);$/;"	prototype	class:QMediaContent	access:public	signature:(const QMediaResourceList &resources)
QMediaContent::QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent(const QNetworkRequest &contentRequest);$/;"	prototype	class:QMediaContent	access:public	signature:(const QNetworkRequest &contentRequest)
QMediaContent::QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent(const QUrl &contentUrl);$/;"	prototype	class:QMediaContent	access:public	signature:(const QUrl &contentUrl)
QMediaContent::QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaContent(QMediaPlaylist *playlist, const QUrl &contentUrl = QUrl(), bool takeOwnership = false);$/;"	prototype	class:QMediaContent	access:public	signature:(QMediaPlaylist *playlist, const QUrl &contentUrl = QUrl(), bool takeOwnership = false)
QMediaContent::resources	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaResourceList resources() const;$/;"	prototype	class:QMediaContent	access:public	signature:() const
QMediaContent::~QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    ~QMediaContent();$/;"	prototype	class:QMediaContent	access:public	signature:()
QMediaControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontrol.h	/^    explicit QMediaControl(QMediaControlPrivate &dd, QObject *parent = nullptr);$/;"	prototype	class:QMediaControl	access:protected	signature:(QMediaControlPrivate &dd, QObject *parent = nullptr)
QMediaControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontrol.h	/^    explicit QMediaControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaControl	access:protected	signature:(QObject *parent = nullptr)
QMediaControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontrol.h	/^class Q_MULTIMEDIA_EXPORT QMediaControl : public QObject$/;"	class	inherits:QObject
QMediaControl::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontrol.h	/^    QMediaControlPrivate *d_ptr;$/;"	member	class:QMediaControl	access:protected
QMediaControl::QMediaControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontrol.h	/^    explicit QMediaControl(QMediaControlPrivate &dd, QObject *parent = nullptr);$/;"	prototype	class:QMediaControl	access:protected	signature:(QMediaControlPrivate &dd, QObject *parent = nullptr)
QMediaControl::QMediaControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontrol.h	/^    explicit QMediaControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaControl	access:protected	signature:(QObject *parent = nullptr)
QMediaControl::~QMediaControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontrol.h	/^    ~QMediaControl();$/;"	prototype	class:QMediaControl	access:public	signature:()
QMediaControlPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediacontrol_p.h	/^class QMediaControlPrivate$/;"	class
QMediaControlPrivate::q_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediacontrol_p.h	/^    QMediaControl *q_ptr;$/;"	member	class:QMediaControlPrivate	access:public
QMediaControlPrivate::~QMediaControlPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediacontrol_p.h	/^    virtual ~QMediaControlPrivate() {}$/;"	function	class:QMediaControlPrivate	access:public	signature:()
qmediacontrol_iid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontrol.h	/^template <typename T> const char *qmediacontrol_iid() { return 0; }$/;"	function	signature:()
QMediaGaplessPlaybackControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    explicit QMediaGaplessPlaybackControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaGaplessPlaybackControl	access:protected	signature:(QObject *parent = nullptr)
QMediaGaplessPlaybackControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^class Q_MULTIMEDIA_EXPORT QMediaGaplessPlaybackControl : public QMediaControl$/;"	class	inherits:QMediaControl
QMediaGaplessPlaybackControl::advancedToNextMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    void advancedToNextMedia();$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:()
QMediaGaplessPlaybackControl::crossfadeTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    virtual qreal crossfadeTime() const = 0;$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:() const
QMediaGaplessPlaybackControl::crossfadeTimeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    void crossfadeTimeChanged(qreal crossfadeTime);$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:(qreal crossfadeTime)
QMediaGaplessPlaybackControl::isCrossfadeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    virtual bool isCrossfadeSupported() const = 0;$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:() const
QMediaGaplessPlaybackControl::nextMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    virtual QMediaContent nextMedia() const = 0;$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:() const
QMediaGaplessPlaybackControl::nextMediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    void nextMediaChanged(const QMediaContent& media);$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:(const QMediaContent& media)
QMediaGaplessPlaybackControl::QMediaGaplessPlaybackControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    explicit QMediaGaplessPlaybackControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaGaplessPlaybackControl	access:protected	signature:(QObject *parent = nullptr)
QMediaGaplessPlaybackControl::setCrossfadeTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    virtual void setCrossfadeTime(qreal crossfadeTime) = 0;$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:(qreal crossfadeTime)
QMediaGaplessPlaybackControl::setNextMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    virtual void setNextMedia(const QMediaContent &media) = 0;$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:(const QMediaContent &media)
QMediaGaplessPlaybackControl::~QMediaGaplessPlaybackControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    virtual ~QMediaGaplessPlaybackControl();$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:()
QMediaMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^namespace QMediaMetaData {$/;"	namespace
QMediaMetaData::AlbumArtist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString AlbumArtist;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::AlbumTitle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString AlbumTitle;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::AudioBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString AudioBitRate;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::AudioCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString AudioCodec;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Author	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Author;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::AverageLevel	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString AverageLevel;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::CameraManufacturer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString CameraManufacturer;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::CameraModel	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString CameraModel;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Category;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::ChannelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ChannelCount;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::ChapterNumber	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ChapterNumber;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Comment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Comment;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Composer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Composer;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Conductor	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Conductor;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Contrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Contrast;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::ContributingArtist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ContributingArtist;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Copyright	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Copyright;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::CoverArtImage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString CoverArtImage;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::CoverArtUrlLarge	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString CoverArtUrlLarge;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::CoverArtUrlSmall	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString CoverArtUrlSmall;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Date	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Date;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::DateTimeDigitized	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString DateTimeDigitized;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::DateTimeOriginal	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString DateTimeOriginal;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Description	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Description;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::DeviceSettingDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString DeviceSettingDescription;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::DigitalZoomRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString DigitalZoomRatio;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Director	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Director;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Duration;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Event	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Event;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::ExposureBiasValue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ExposureBiasValue;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::ExposureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ExposureMode;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::ExposureProgram	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ExposureProgram;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::ExposureTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ExposureTime;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Flash	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Flash;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::FNumber	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString FNumber;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::FocalLength	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString FocalLength;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::FocalLengthIn35mmFilm	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString FocalLengthIn35mmFilm;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GainControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GainControl;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Genre	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Genre;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSAltitude	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSAltitude;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSAreaInformation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSAreaInformation;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSDOP	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSDOP;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSImgDirection	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSImgDirection;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSImgDirectionRef	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSImgDirectionRef;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSLatitude	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSLatitude;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSLongitude	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSLongitude;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSMapDatum	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSMapDatum;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSProcessingMethod	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSProcessingMethod;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSSatellites	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSSatellites;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSSpeed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSSpeed;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSStatus;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSTimeStamp	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSTimeStamp;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSTrack	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSTrack;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::GPSTrackRef	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString GPSTrackRef;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::ISOSpeedRatings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ISOSpeedRatings;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Keywords	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Keywords;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Language	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Language;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::LeadPerformer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString LeadPerformer;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::LightSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString LightSource;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Lyrics	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Lyrics;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::MediaType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString MediaType;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::MeteringMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString MeteringMode;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Mood	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Mood;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Orientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Orientation;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::ParentalRating	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ParentalRating;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::PeakValue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString PeakValue;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::PixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString PixelAspectRatio;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::PosterImage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString PosterImage;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::PosterUrl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString PosterUrl;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Publisher	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Publisher;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::RatingOrganization	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString RatingOrganization;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Resolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Resolution;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::SampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString SampleRate;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Saturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Saturation;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::SceneCaptureType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString SceneCaptureType;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Sharpness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Sharpness;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Size	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Size;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Subject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Subject;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::SubjectDistance	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString SubjectDistance;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::SubTitle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString SubTitle;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::ThumbnailImage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ThumbnailImage;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Title	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Title;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::TrackCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString TrackCount;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::TrackNumber	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString TrackNumber;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::UserRating	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString UserRating;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::VideoBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString VideoBitRate;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::VideoCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString VideoCodec;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::VideoFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString VideoFrameRate;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::WhiteBalance	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString WhiteBalance;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Writer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Writer;$/;"	member	namespace:QMediaMetaData
QMediaMetaData::Year	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Year;$/;"	member	namespace:QMediaMetaData
QMediaNetworkAccessControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmedianetworkaccesscontrol.h	/^    explicit QMediaNetworkAccessControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaNetworkAccessControl	access:protected	signature:(QObject *parent = nullptr)
QMediaNetworkAccessControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmedianetworkaccesscontrol.h	/^class Q_MULTIMEDIA_EXPORT QMediaNetworkAccessControl : public QMediaControl$/;"	class	inherits:QMediaControl
QMediaNetworkAccessControl::configurationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmedianetworkaccesscontrol.h	/^    void configurationChanged(const QNetworkConfiguration& configuration);$/;"	prototype	class:QMediaNetworkAccessControl	access:public	signature:(const QNetworkConfiguration& configuration)
QMediaNetworkAccessControl::currentConfiguration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmedianetworkaccesscontrol.h	/^    virtual QNetworkConfiguration currentConfiguration() const = 0;$/;"	prototype	class:QMediaNetworkAccessControl	access:public	signature:() const
QMediaNetworkAccessControl::QMediaNetworkAccessControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmedianetworkaccesscontrol.h	/^    explicit QMediaNetworkAccessControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaNetworkAccessControl	access:protected	signature:(QObject *parent = nullptr)
QMediaNetworkAccessControl::setConfigurations	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmedianetworkaccesscontrol.h	/^    virtual void setConfigurations(const QList<QNetworkConfiguration> &configuration) = 0;$/;"	prototype	class:QMediaNetworkAccessControl	access:public	signature:(const QList<QNetworkConfiguration> &configuration)
QMediaNetworkAccessControl::~QMediaNetworkAccessControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmedianetworkaccesscontrol.h	/^    virtual ~QMediaNetworkAccessControl();$/;"	prototype	class:QMediaNetworkAccessControl	access:public	signature:()
QMediaNetworkPlaylistControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaNetworkPlaylistControl(QObject *parent)$/;"	function	class:QMediaNetworkPlaylistControl	access:public	signature:(QObject *parent)
QMediaNetworkPlaylistControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^class QMediaNetworkPlaylistControl : public QMediaPlaylistControl$/;"	class	inherits:QMediaPlaylistControl
QMediaNetworkPlaylistControl::m_navigator	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaPlaylistNavigator *m_navigator;$/;"	member	class:QMediaNetworkPlaylistControl	access:private
QMediaNetworkPlaylistControl::QMediaNetworkPlaylistControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaNetworkPlaylistControl(QObject *parent)$/;"	function	class:QMediaNetworkPlaylistControl	access:public	signature:(QObject *parent)
QMediaNetworkPlaylistControl::~QMediaNetworkPlaylistControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    ~QMediaNetworkPlaylistControl() {}$/;"	function	class:QMediaNetworkPlaylistControl	access:public	signature:()
QMediaNetworkPlaylistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    QMediaNetworkPlaylistProvider(QObject *parent=0);$/;"	prototype	class:QMediaNetworkPlaylistProvider	access:public	signature:(QObject *parent=0)
QMediaNetworkPlaylistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^class Q_MULTIMEDIA_EXPORT QMediaNetworkPlaylistProvider : public QMediaPlaylistProvider$/;"	class	inherits:QMediaPlaylistProvider
QMediaNetworkPlaylistProvider::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_handleNewItem(const QVariant& content))$/;"	prototype	class:QMediaNetworkPlaylistProvider	access:private	signature:()
QMediaNetworkPlaylistProvider::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_handleParserError(QPlaylistFileParser::ParserError err, const QString &))$/;"	prototype	class:QMediaNetworkPlaylistProvider	access:private	signature:()
QMediaNetworkPlaylistProvider::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool addMedia(const QList<QMediaContent> &items) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
QMediaNetworkPlaylistProvider::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool addMedia(const QMediaContent &content) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
QMediaNetworkPlaylistProvider::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool clear() override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
QMediaNetworkPlaylistProvider::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool insertMedia(int pos, const QList<QMediaContent> &items) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
QMediaNetworkPlaylistProvider::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool insertMedia(int pos, const QMediaContent &content) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
QMediaNetworkPlaylistProvider::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool isReadOnly() const override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
QMediaNetworkPlaylistProvider::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool load(const QNetworkRequest &request, const char *format = 0) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
QMediaNetworkPlaylistProvider::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool moveMedia(int from, int to) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
QMediaNetworkPlaylistProvider::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool removeMedia(int pos) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
QMediaNetworkPlaylistProvider::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    bool removeMedia(int start, int end) override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
QMediaNetworkPlaylistProvider::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    int mediaCount() const override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
QMediaNetworkPlaylistProvider::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    QMediaContent media(int pos) const override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
QMediaNetworkPlaylistProvider::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    void shuffle() override;$/;"	member	class:QMediaNetworkPlaylistProvider	access:public
QMediaNetworkPlaylistProvider::QMediaNetworkPlaylistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    QMediaNetworkPlaylistProvider(QObject *parent=0);$/;"	prototype	class:QMediaNetworkPlaylistProvider	access:public	signature:(QObject *parent=0)
QMediaNetworkPlaylistProvider::~QMediaNetworkPlaylistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    ~QMediaNetworkPlaylistProvider();$/;"	prototype	class:QMediaNetworkPlaylistProvider	access:public	signature:()
QMediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    QMediaObject(QMediaObjectPrivate &dd, QObject *parent, QMediaService *service);$/;"	prototype	class:QMediaObject	access:protected	signature:(QMediaObjectPrivate &dd, QObject *parent, QMediaService *service)
QMediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    QMediaObject(QObject *parent, QMediaService *service);$/;"	prototype	class:QMediaObject	access:protected	signature:(QObject *parent, QMediaService *service)
QMediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^class Q_MULTIMEDIA_EXPORT QMediaObject : public QObject$/;"	class	inherits:QObject
QMediaObject::addPropertyWatch	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void addPropertyWatch(QByteArray const &name);$/;"	prototype	class:QMediaObject	access:protected	signature:(QByteArray const &name)
QMediaObject::availability	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    virtual QMultimedia::AvailabilityStatus availability() const;$/;"	prototype	class:QMediaObject	access:public	signature:() const
QMediaObject::availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void availabilityChanged(bool available);$/;"	prototype	class:QMediaObject	access:public	signature:(bool available)
QMediaObject::availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void availabilityChanged(QMultimedia::AvailabilityStatus availability);$/;"	prototype	class:QMediaObject	access:public	signature:(QMultimedia::AvailabilityStatus availability)
QMediaObject::availableMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    QStringList availableMetaData() const;$/;"	prototype	class:QMediaObject	access:public	signature:() const
QMediaObject::bind	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    virtual bool bind(QObject *);$/;"	prototype	class:QMediaObject	access:public	signature:(QObject *)
QMediaObject::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_availabilityChanged())$/;"	prototype	class:QMediaObject	access:private	signature:()
QMediaObject::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_notify())$/;"	prototype	class:QMediaObject	access:private	signature:()
QMediaObject::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    QMediaObjectPrivate *d_ptr;$/;"	member	class:QMediaObject	access:protected
QMediaObject::isAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    virtual bool isAvailable() const;$/;"	prototype	class:QMediaObject	access:public	signature:() const
QMediaObject::isMetaDataAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    bool isMetaDataAvailable() const;$/;"	prototype	class:QMediaObject	access:public	signature:() const
QMediaObject::metaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    QVariant metaData(const QString &key) const;$/;"	prototype	class:QMediaObject	access:public	signature:(const QString &key) const
QMediaObject::metaDataAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void metaDataAvailableChanged(bool available);$/;"	prototype	class:QMediaObject	access:public	signature:(bool available)
QMediaObject::metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void metaDataChanged();$/;"	prototype	class:QMediaObject	access:public	signature:()
QMediaObject::metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void metaDataChanged(const QString &key, const QVariant &value);$/;"	prototype	class:QMediaObject	access:public	signature:(const QString &key, const QVariant &value)
QMediaObject::notifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    int notifyInterval() const;$/;"	prototype	class:QMediaObject	access:public	signature:() const
QMediaObject::notifyIntervalChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void notifyIntervalChanged(int milliSeconds);$/;"	prototype	class:QMediaObject	access:public	signature:(int milliSeconds)
QMediaObject::QMediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    QMediaObject(QMediaObjectPrivate &dd, QObject *parent, QMediaService *service);$/;"	prototype	class:QMediaObject	access:protected	signature:(QMediaObjectPrivate &dd, QObject *parent, QMediaService *service)
QMediaObject::QMediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    QMediaObject(QObject *parent, QMediaService *service);$/;"	prototype	class:QMediaObject	access:protected	signature:(QObject *parent, QMediaService *service)
QMediaObject::removePropertyWatch	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void removePropertyWatch(QByteArray const &name);$/;"	prototype	class:QMediaObject	access:protected	signature:(QByteArray const &name)
QMediaObject::service	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    virtual QMediaService* service() const;$/;"	prototype	class:QMediaObject	access:public	signature:() const
QMediaObject::setNotifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void setNotifyInterval(int milliSeconds);$/;"	prototype	class:QMediaObject	access:public	signature:(int milliSeconds)
QMediaObject::setupControls	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void setupControls();$/;"	prototype	class:QMediaObject	access:private	signature:()
QMediaObject::unbind	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    virtual void unbind(QObject *);$/;"	prototype	class:QMediaObject	access:public	signature:(QObject *)
QMediaObject::~QMediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    ~QMediaObject();$/;"	prototype	class:QMediaObject	access:public	signature:()
QMediaObjectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    QMediaObjectPrivate(): service(0), metaDataControl(0), availabilityControl(0), notifyTimer(0), q_ptr(0) {}$/;"	function	class:QMediaObjectPrivate	access:public	signature:()
QMediaObjectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^class QMediaObjectPrivate$/;"	class
QMediaObjectPrivate::availabilityControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    QMediaAvailabilityControl *availabilityControl;$/;"	member	class:QMediaObjectPrivate	access:public
QMediaObjectPrivate::metaDataControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    QMetaDataReaderControl *metaDataControl;$/;"	member	class:QMediaObjectPrivate	access:public
QMediaObjectPrivate::notifyProperties	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    QSet<int> notifyProperties;$/;"	member	class:QMediaObjectPrivate	access:public
QMediaObjectPrivate::notifyTimer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    QTimer* notifyTimer;$/;"	member	class:QMediaObjectPrivate	access:public
QMediaObjectPrivate::QMediaObjectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    QMediaObjectPrivate(): service(0), metaDataControl(0), availabilityControl(0), notifyTimer(0), q_ptr(0) {}$/;"	function	class:QMediaObjectPrivate	access:public	signature:()
QMediaObjectPrivate::q_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    QMediaObject *q_ptr;$/;"	member	class:QMediaObjectPrivate	access:public
QMediaObjectPrivate::service	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    QMediaService *service;$/;"	member	class:QMediaObjectPrivate	access:public
QMediaObjectPrivate::_q_availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    void _q_availabilityChanged();$/;"	prototype	class:QMediaObjectPrivate	access:public	signature:()
QMediaObjectPrivate::_q_notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    void _q_notify();$/;"	prototype	class:QMediaObjectPrivate	access:public	signature:()
QMediaObjectPrivate::~QMediaObjectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    virtual ~QMediaObjectPrivate() {}$/;"	function	class:QMediaObjectPrivate	access:public	signature:()
QMediaOpenGLHelper	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaopenglhelper_p.h	/^class QMediaOpenGLHelper$/;"	class
QMediaOpenGLHelper::isANGLE	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaopenglhelper_p.h	/^    static bool isANGLE();$/;"	prototype	class:QMediaOpenGLHelper	access:public	signature:()
QMediaOpenGLHelper::isANGLE	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaopenglhelper_p.h	/^inline bool QMediaOpenGLHelper::isANGLE()$/;"	function	class:QMediaOpenGLHelper	signature:()
QMediaPlayer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    explicit QMediaPlayer(QObject *parent = nullptr, Flags flags = Flags());$/;"	prototype	class:QMediaPlayer	access:public	signature:(QObject *parent = nullptr, Flags flags = Flags())
QMediaPlayer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^class Q_MULTIMEDIA_EXPORT QMediaPlayer : public QMediaObject$/;"	class	inherits:QMediaObject
QMediaPlayer::AccessDeniedError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        AccessDeniedError,$/;"	enumerator	enum:QMediaPlayer::Error
QMediaPlayer::audioAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void audioAvailableChanged(bool available);$/;"	prototype	class:QMediaPlayer	access:public	signature:(bool available)
QMediaPlayer::audioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QAudio::Role audioRole() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::audioRoleChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void audioRoleChanged(QAudio::Role role);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QAudio::Role role)
QMediaPlayer::BufferedMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        BufferedMedia,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
QMediaPlayer::BufferingMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        BufferingMedia,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
QMediaPlayer::bufferStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    int bufferStatus() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::bufferStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void bufferStatusChanged(int percentFilled);$/;"	prototype	class:QMediaPlayer	access:public	signature:(int percentFilled)
QMediaPlayer::currentMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QMediaContent currentMedia() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::currentMediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void currentMediaChanged(const QMediaContent &media);$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QMediaContent &media)
QMediaPlayer::currentNetworkConfiguration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QNetworkConfiguration currentNetworkConfiguration() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::customAudioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QString customAudioRole() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::customAudioRoleChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void customAudioRoleChanged(const QString &role);$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QString &role)
QMediaPlayer::duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    qint64 duration() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::durationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void durationChanged(qint64 duration);$/;"	prototype	class:QMediaPlayer	access:public	signature:(qint64 duration)
QMediaPlayer::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_error(int, const QString &))$/;"	prototype	class:QMediaPlayer	access:private	signature:()
QMediaPlayer::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_handleMediaChanged(const QMediaContent&))$/;"	prototype	class:QMediaPlayer	access:private	signature:()
QMediaPlayer::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_handlePlaylistLoaded())$/;"	prototype	class:QMediaPlayer	access:private	signature:()
QMediaPlayer::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_handlePlaylistLoadFailed())$/;"	prototype	class:QMediaPlayer	access:private	signature:()
QMediaPlayer::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_mediaStatusChanged(QMediaPlayer::MediaStatus))$/;"	prototype	class:QMediaPlayer	access:private	signature:()
QMediaPlayer::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_playlistDestroyed())$/;"	prototype	class:QMediaPlayer	access:private	signature:()
QMediaPlayer::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_stateChanged(QMediaPlayer::State))$/;"	prototype	class:QMediaPlayer	access:private	signature:()
QMediaPlayer::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_updateMedia(const QMediaContent&))$/;"	prototype	class:QMediaPlayer	access:private	signature:()
QMediaPlayer::EndOfMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        EndOfMedia,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
QMediaPlayer::Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    enum Error$/;"	enum	class:QMediaPlayer	access:public
QMediaPlayer::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    Error error() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void error(QMediaPlayer::Error error);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QMediaPlayer::Error error)
QMediaPlayer::errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QString errorString() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::Flag	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    enum Flag$/;"	enum	class:QMediaPlayer	access:public
QMediaPlayer::FormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        FormatError,$/;"	enumerator	enum:QMediaPlayer::Error
QMediaPlayer::hasSupport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    static QMultimedia::SupportEstimate hasSupport(const QString &mimeType,$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QString &mimeType, const QStringList& codecs = QStringList(), Flags flags = Flags())
QMediaPlayer::InvalidMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        InvalidMedia$/;"	enumerator	enum:QMediaPlayer::MediaStatus
QMediaPlayer::isAudioAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    bool isAudioAvailable() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    bool isMuted() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::isSeekable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    bool isSeekable() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::isVideoAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    bool isVideoAvailable() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::LoadedMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        LoadedMedia,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
QMediaPlayer::LoadingMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        LoadingMedia,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
QMediaPlayer::LowLatency	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        LowLatency = 0x01,$/;"	enumerator	enum:QMediaPlayer::Flag
QMediaPlayer::media	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QMediaContent media() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::mediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void mediaChanged(const QMediaContent &media);$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QMediaContent &media)
QMediaPlayer::MediaIsPlaylist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        MediaIsPlaylist$/;"	enumerator	enum:QMediaPlayer::Error
QMediaPlayer::MediaStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    enum MediaStatus$/;"	enum	class:QMediaPlayer	access:public
QMediaPlayer::mediaStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    MediaStatus mediaStatus() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::mediaStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void mediaStatusChanged(QMediaPlayer::MediaStatus status);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QMediaPlayer::MediaStatus status)
QMediaPlayer::mediaStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    const QIODevice *mediaStream() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void mutedChanged(bool muted);$/;"	prototype	class:QMediaPlayer	access:public	signature:(bool muted)
QMediaPlayer::networkConfigurationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void networkConfigurationChanged(const QNetworkConfiguration &configuration);$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QNetworkConfiguration &configuration)
QMediaPlayer::NetworkError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        NetworkError,$/;"	enumerator	enum:QMediaPlayer::Error
QMediaPlayer::NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        NoError,$/;"	enumerator	enum:QMediaPlayer::Error
QMediaPlayer::NoMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        NoMedia,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
QMediaPlayer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    bool bind(QObject *) override;$/;"	member	class:QMediaPlayer	access:public
QMediaPlayer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QMultimedia::AvailabilityStatus availability() const override;$/;"	member	class:QMediaPlayer	access:public
QMediaPlayer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void unbind(QObject *) override;$/;"	member	class:QMediaPlayer	access:public
QMediaPlayer::pause	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void pause();$/;"	prototype	class:QMediaPlayer	access:public	signature:()
QMediaPlayer::PausedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        PausedState$/;"	enumerator	enum:QMediaPlayer::State
QMediaPlayer::play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void play();$/;"	prototype	class:QMediaPlayer	access:public	signature:()
QMediaPlayer::playbackRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    qreal playbackRate() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::playbackRateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void playbackRateChanged(qreal rate);$/;"	prototype	class:QMediaPlayer	access:public	signature:(qreal rate)
QMediaPlayer::PlayingState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        PlayingState,$/;"	enumerator	enum:QMediaPlayer::State
QMediaPlayer::playlist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QMediaPlaylist *playlist() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    qint64 position() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::positionChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void positionChanged(qint64 position);$/;"	prototype	class:QMediaPlayer	access:public	signature:(qint64 position)
QMediaPlayer::QMediaPlayer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    explicit QMediaPlayer(QObject *parent = nullptr, Flags flags = Flags());$/;"	prototype	class:QMediaPlayer	access:public	signature:(QObject *parent = nullptr, Flags flags = Flags())
QMediaPlayer::ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        ResourceError,$/;"	enumerator	enum:QMediaPlayer::Error
QMediaPlayer::seekableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void seekableChanged(bool seekable);$/;"	prototype	class:QMediaPlayer	access:public	signature:(bool seekable)
QMediaPlayer::ServiceMissingError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        ServiceMissingError,$/;"	enumerator	enum:QMediaPlayer::Error
QMediaPlayer::setAudioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setAudioRole(QAudio::Role audioRole);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QAudio::Role audioRole)
QMediaPlayer::setCustomAudioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setCustomAudioRole(const QString &audioRole);$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QString &audioRole)
QMediaPlayer::setMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setMedia(const QMediaContent &media, QIODevice *stream = nullptr);$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QMediaContent &media, QIODevice *stream = nullptr)
QMediaPlayer::setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setMuted(bool muted);$/;"	prototype	class:QMediaPlayer	access:public	signature:(bool muted)
QMediaPlayer::setNetworkConfigurations	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setNetworkConfigurations(const QList<QNetworkConfiguration> &configurations);$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QList<QNetworkConfiguration> &configurations)
QMediaPlayer::setPlaybackRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setPlaybackRate(qreal rate);$/;"	prototype	class:QMediaPlayer	access:public	signature:(qreal rate)
QMediaPlayer::setPlaylist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setPlaylist(QMediaPlaylist *playlist);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QMediaPlaylist *playlist)
QMediaPlayer::setPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setPosition(qint64 position);$/;"	prototype	class:QMediaPlayer	access:public	signature:(qint64 position)
QMediaPlayer::setVideoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setVideoOutput(QAbstractVideoSurface *surface);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QAbstractVideoSurface *surface)
QMediaPlayer::setVideoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setVideoOutput(QGraphicsVideoItem *);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QGraphicsVideoItem *)
QMediaPlayer::setVideoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setVideoOutput(QVideoWidget *);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QVideoWidget *)
QMediaPlayer::setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setVolume(int volume);$/;"	prototype	class:QMediaPlayer	access:public	signature:(int volume)
QMediaPlayer::StalledMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        StalledMedia,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
QMediaPlayer::State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    enum State$/;"	enum	class:QMediaPlayer	access:public
QMediaPlayer::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    State state() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void stateChanged(QMediaPlayer::State newState);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QMediaPlayer::State newState)
QMediaPlayer::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void stop();$/;"	prototype	class:QMediaPlayer	access:public	signature:()
QMediaPlayer::StoppedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        StoppedState,$/;"	enumerator	enum:QMediaPlayer::State
QMediaPlayer::StreamPlayback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        StreamPlayback = 0x02,$/;"	enumerator	enum:QMediaPlayer::Flag
QMediaPlayer::supportedAudioRoles	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QList<QAudio::Role> supportedAudioRoles() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::supportedCustomAudioRoles	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QStringList supportedCustomAudioRoles() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::supportedMimeTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    static QStringList supportedMimeTypes(Flags flags = Flags());$/;"	prototype	class:QMediaPlayer	access:public	signature:(Flags flags = Flags())
QMediaPlayer::UnknownMediaStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        UnknownMediaStatus,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
QMediaPlayer::videoAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void videoAvailableChanged(bool videoAvailable);$/;"	prototype	class:QMediaPlayer	access:public	signature:(bool videoAvailable)
QMediaPlayer::VideoSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        VideoSurface = 0x04$/;"	enumerator	enum:QMediaPlayer::Flag
QMediaPlayer::volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    int volume() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
QMediaPlayer::volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void volumeChanged(int volume);$/;"	prototype	class:QMediaPlayer	access:public	signature:(int volume)
QMediaPlayer::~QMediaPlayer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    ~QMediaPlayer();$/;"	prototype	class:QMediaPlayer	access:public	signature:()
QMediaPlayerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    explicit QMediaPlayerControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaPlayerControl	access:protected	signature:(QObject *parent = nullptr)
QMediaPlayerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^class Q_MULTIMEDIA_EXPORT QMediaPlayerControl : public QMediaControl$/;"	class	inherits:QMediaControl
QMediaPlayerControl::audioAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void audioAvailableChanged(bool audioAvailable);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(bool audioAvailable)
QMediaPlayerControl::availablePlaybackRanges	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual QMediaTimeRange availablePlaybackRanges() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
QMediaPlayerControl::availablePlaybackRangesChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void availablePlaybackRangesChanged(const QMediaTimeRange &ranges);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(const QMediaTimeRange &ranges)
QMediaPlayerControl::bufferStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual int bufferStatus() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
QMediaPlayerControl::bufferStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void bufferStatusChanged(int percentFilled);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(int percentFilled)
QMediaPlayerControl::duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual qint64 duration() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
QMediaPlayerControl::durationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void durationChanged(qint64 duration);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(qint64 duration)
QMediaPlayerControl::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void error(int error, const QString &errorString);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(int error, const QString &errorString)
QMediaPlayerControl::isAudioAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual bool isAudioAvailable() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
QMediaPlayerControl::isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual bool isMuted() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
QMediaPlayerControl::isSeekable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual bool isSeekable() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
QMediaPlayerControl::isVideoAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual bool isVideoAvailable() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
QMediaPlayerControl::media	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual QMediaContent media() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
QMediaPlayerControl::mediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void mediaChanged(const QMediaContent& content);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(const QMediaContent& content)
QMediaPlayerControl::mediaStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual QMediaPlayer::MediaStatus mediaStatus() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
QMediaPlayerControl::mediaStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void mediaStatusChanged(QMediaPlayer::MediaStatus status);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(QMediaPlayer::MediaStatus status)
QMediaPlayerControl::mediaStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual const QIODevice *mediaStream() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
QMediaPlayerControl::mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void mutedChanged(bool mute);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(bool mute)
QMediaPlayerControl::pause	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void pause() = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:()
QMediaPlayerControl::play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void play() = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:()
QMediaPlayerControl::playbackRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual qreal playbackRate() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
QMediaPlayerControl::playbackRateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void playbackRateChanged(qreal rate);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(qreal rate)
QMediaPlayerControl::position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual qint64 position() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
QMediaPlayerControl::positionChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void positionChanged(qint64 position);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(qint64 position)
QMediaPlayerControl::QMediaPlayerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    explicit QMediaPlayerControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaPlayerControl	access:protected	signature:(QObject *parent = nullptr)
QMediaPlayerControl::seekableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void seekableChanged(bool seekable);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(bool seekable)
QMediaPlayerControl::setMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void setMedia(const QMediaContent &media, QIODevice *stream) = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(const QMediaContent &media, QIODevice *stream)
QMediaPlayerControl::setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void setMuted(bool mute) = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(bool mute)
QMediaPlayerControl::setPlaybackRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void setPlaybackRate(qreal rate) = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(qreal rate)
QMediaPlayerControl::setPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void setPosition(qint64 position) = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(qint64 position)
QMediaPlayerControl::setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void setVolume(int volume) = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(int volume)
QMediaPlayerControl::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual QMediaPlayer::State state() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
QMediaPlayerControl::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void stateChanged(QMediaPlayer::State newState);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(QMediaPlayer::State newState)
QMediaPlayerControl::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void stop() = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:()
QMediaPlayerControl::videoAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void videoAvailableChanged(bool videoAvailable);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(bool videoAvailable)
QMediaPlayerControl::volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual int volume() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
QMediaPlayerControl::volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void volumeChanged(int volume);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(int volume)
QMediaPlayerControl::~QMediaPlayerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    ~QMediaPlayerControl();$/;"	prototype	class:QMediaPlayerControl	access:public	signature:()
QMediaPlayerResourceSetInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    QMediaPlayerResourceSetInterface(QObject *parent = 0);$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:protected	signature:(QObject *parent = 0)
QMediaPlayerResourceSetInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^class Q_MULTIMEDIA_EXPORT QMediaPlayerResourceSetInterface : public QObject$/;"	class	inherits:QObject
QMediaPlayerResourceSetInterface::acquire	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    virtual void acquire() = 0;$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:()
QMediaPlayerResourceSetInterface::availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    void availabilityChanged(bool available);$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:(bool available)
QMediaPlayerResourceSetInterface::iid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    static QString iid();$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:()
QMediaPlayerResourceSetInterface::isAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    virtual bool isAvailable() const = 0;$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:() const
QMediaPlayerResourceSetInterface::isGranted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    virtual bool isGranted() const = 0;$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:() const
QMediaPlayerResourceSetInterface::isVideoEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    virtual bool isVideoEnabled() const = 0;$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:() const
QMediaPlayerResourceSetInterface::QMediaPlayerResourceSetInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    QMediaPlayerResourceSetInterface(QObject *parent = 0);$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:protected	signature:(QObject *parent = 0)
QMediaPlayerResourceSetInterface::release	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    virtual void release() = 0;$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:()
QMediaPlayerResourceSetInterface::resourcesDenied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    void resourcesDenied();$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:()
QMediaPlayerResourceSetInterface::resourcesGranted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    void resourcesGranted();$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:()
QMediaPlayerResourceSetInterface::resourcesLost	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    void resourcesLost();$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:()
QMediaPlayerResourceSetInterface::resourcesReleased	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    void resourcesReleased();$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:()
QMediaPlayerResourceSetInterface::setVideoEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    virtual void setVideoEnabled(bool enabled) = 0;$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:(bool enabled)
QMediaPlaylist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    explicit QMediaPlaylist(QObject *parent = nullptr);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(QObject *parent = nullptr)
QMediaPlaylist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^class Q_MULTIMEDIA_EXPORT QMediaPlaylist : public QObject, public QMediaBindableInterface$/;"	class	inherits:QObject,QMediaBindableInterface
QMediaPlaylist::AccessDeniedError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum Error { NoError, FormatError, FormatNotSupportedError, NetworkError, AccessDeniedError };$/;"	enumerator	enum:QMediaPlaylist::Error
QMediaPlaylist::addMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool addMedia(const QList<QMediaContent> &items);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(const QList<QMediaContent> &items)
QMediaPlaylist::addMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool addMedia(const QMediaContent &content);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(const QMediaContent &content)
QMediaPlaylist::clear	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool clear();$/;"	prototype	class:QMediaPlaylist	access:public	signature:()
QMediaPlaylist::currentIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    int currentIndex() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
QMediaPlaylist::currentIndexChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void currentIndexChanged(int index);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int index)
QMediaPlaylist::CurrentItemInLoop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum PlaybackMode { CurrentItemOnce, CurrentItemInLoop, Sequential, Loop, Random };$/;"	enumerator	enum:QMediaPlaylist::PlaybackMode
QMediaPlaylist::CurrentItemOnce	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum PlaybackMode { CurrentItemOnce, CurrentItemInLoop, Sequential, Loop, Random };$/;"	enumerator	enum:QMediaPlaylist::PlaybackMode
QMediaPlaylist::currentMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    QMediaContent currentMedia() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
QMediaPlaylist::currentMediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void currentMediaChanged(const QMediaContent&);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(const QMediaContent&)
QMediaPlaylist::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_loadFailed(QMediaPlaylist::Error, const QString &))$/;"	prototype	class:QMediaPlaylist	access:private	signature:()
QMediaPlaylist::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    QMediaPlaylistPrivate *d_ptr;$/;"	member	class:QMediaPlaylist	access:protected
QMediaPlaylist::Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum Error { NoError, FormatError, FormatNotSupportedError, NetworkError, AccessDeniedError };$/;"	enum	class:QMediaPlaylist	access:public
QMediaPlaylist::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    Error error() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
QMediaPlaylist::errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    QString errorString() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
QMediaPlaylist::FormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum Error { NoError, FormatError, FormatNotSupportedError, NetworkError, AccessDeniedError };$/;"	enumerator	enum:QMediaPlaylist::Error
QMediaPlaylist::FormatNotSupportedError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum Error { NoError, FormatError, FormatNotSupportedError, NetworkError, AccessDeniedError };$/;"	enumerator	enum:QMediaPlaylist::Error
QMediaPlaylist::insertMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool insertMedia(int index, const QList<QMediaContent> &items);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int index, const QList<QMediaContent> &items)
QMediaPlaylist::insertMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool insertMedia(int index, const QMediaContent &content);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int index, const QMediaContent &content)
QMediaPlaylist::isEmpty	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool isEmpty() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
QMediaPlaylist::isReadOnly	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool isReadOnly() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
QMediaPlaylist::load	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void load(const QNetworkRequest &request, const char *format = nullptr);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(const QNetworkRequest &request, const char *format = nullptr)
QMediaPlaylist::load	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void load(const QUrl &location, const char *format = nullptr);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(const QUrl &location, const char *format = nullptr)
QMediaPlaylist::load	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void load(QIODevice *device, const char *format = nullptr);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(QIODevice *device, const char *format = nullptr)
QMediaPlaylist::loaded	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void loaded();$/;"	prototype	class:QMediaPlaylist	access:public	signature:()
QMediaPlaylist::loadFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void loadFailed();$/;"	prototype	class:QMediaPlaylist	access:public	signature:()
QMediaPlaylist::Loop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum PlaybackMode { CurrentItemOnce, CurrentItemInLoop, Sequential, Loop, Random };$/;"	enumerator	enum:QMediaPlaylist::PlaybackMode
QMediaPlaylist::media	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    QMediaContent media(int index) const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int index) const
QMediaPlaylist::mediaAboutToBeInserted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void mediaAboutToBeInserted(int start, int end);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int start, int end)
QMediaPlaylist::mediaAboutToBeRemoved	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void mediaAboutToBeRemoved(int start, int end);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int start, int end)
QMediaPlaylist::mediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void mediaChanged(int start, int end);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int start, int end)
QMediaPlaylist::mediaCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    int mediaCount() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
QMediaPlaylist::mediaInserted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void mediaInserted(int start, int end);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int start, int end)
QMediaPlaylist::mediaRemoved	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void mediaRemoved(int start, int end);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int start, int end)
QMediaPlaylist::moveMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool moveMedia(int from, int to);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int from, int to)
QMediaPlaylist::NetworkError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum Error { NoError, FormatError, FormatNotSupportedError, NetworkError, AccessDeniedError };$/;"	enumerator	enum:QMediaPlaylist::Error
QMediaPlaylist::next	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void next();$/;"	prototype	class:QMediaPlaylist	access:public	signature:()
QMediaPlaylist::nextIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    int nextIndex(int steps = 1) const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int steps = 1) const
QMediaPlaylist::NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum Error { NoError, FormatError, FormatNotSupportedError, NetworkError, AccessDeniedError };$/;"	enumerator	enum:QMediaPlaylist::Error
QMediaPlaylist::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool setMediaObject(QMediaObject *object) override;$/;"	member	class:QMediaPlaylist	access:protected
QMediaPlaylist::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    QMediaObject *mediaObject() const override;$/;"	member	class:QMediaPlaylist	access:public
QMediaPlaylist::PlaybackMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum PlaybackMode { CurrentItemOnce, CurrentItemInLoop, Sequential, Loop, Random };$/;"	enum	class:QMediaPlaylist	access:public
QMediaPlaylist::playbackMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    PlaybackMode playbackMode() const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:() const
QMediaPlaylist::playbackModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void playbackModeChanged(QMediaPlaylist::PlaybackMode mode);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(QMediaPlaylist::PlaybackMode mode)
QMediaPlaylist::previous	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void previous();$/;"	prototype	class:QMediaPlaylist	access:public	signature:()
QMediaPlaylist::previousIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    int previousIndex(int steps = 1) const;$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int steps = 1) const
QMediaPlaylist::QMediaPlaylist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    explicit QMediaPlaylist(QObject *parent = nullptr);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(QObject *parent = nullptr)
QMediaPlaylist::Random	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum PlaybackMode { CurrentItemOnce, CurrentItemInLoop, Sequential, Loop, Random };$/;"	enumerator	enum:QMediaPlaylist::PlaybackMode
QMediaPlaylist::removeMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool removeMedia(int pos);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int pos)
QMediaPlaylist::removeMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool removeMedia(int start, int end);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int start, int end)
QMediaPlaylist::save	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool save(const QUrl &location, const char *format = nullptr);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(const QUrl &location, const char *format = nullptr)
QMediaPlaylist::save	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool save(QIODevice * device, const char *format);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(QIODevice * device, const char *format)
QMediaPlaylist::Sequential	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum PlaybackMode { CurrentItemOnce, CurrentItemInLoop, Sequential, Loop, Random };$/;"	enumerator	enum:QMediaPlaylist::PlaybackMode
QMediaPlaylist::setCurrentIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void setCurrentIndex(int index);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int index)
QMediaPlaylist::setPlaybackMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void setPlaybackMode(PlaybackMode mode);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(PlaybackMode mode)
QMediaPlaylist::shuffle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void shuffle();$/;"	prototype	class:QMediaPlaylist	access:public	signature:()
QMediaPlaylist::~QMediaPlaylist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    virtual ~QMediaPlaylist();$/;"	prototype	class:QMediaPlaylist	access:public	signature:()
QMediaPlaylistControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    QMediaPlaylistControl(QObject* parent = 0);$/;"	prototype	class:QMediaPlaylistControl	access:protected	signature:(QObject* parent = 0)
QMediaPlaylistControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^class Q_MULTIMEDIA_EXPORT QMediaPlaylistControl : public QMediaControl$/;"	class	inherits:QMediaControl
QMediaPlaylistControl::currentIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual int currentIndex() const = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:() const
QMediaPlaylistControl::currentIndexChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    void currentIndexChanged(int position);$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(int position)
QMediaPlaylistControl::currentMediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    void currentMediaChanged(const QMediaContent&);$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(const QMediaContent&)
QMediaPlaylistControl::next	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual void next() = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:()
QMediaPlaylistControl::nextIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual int nextIndex(int steps) const = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(int steps) const
QMediaPlaylistControl::playbackMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual QMediaPlaylist::PlaybackMode playbackMode() const = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:() const
QMediaPlaylistControl::playbackModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    void playbackModeChanged(QMediaPlaylist::PlaybackMode mode);$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(QMediaPlaylist::PlaybackMode mode)
QMediaPlaylistControl::playlistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual QMediaPlaylistProvider* playlistProvider() const = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:() const
QMediaPlaylistControl::playlistProviderChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    void playlistProviderChanged();$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:()
QMediaPlaylistControl::previous	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual void previous() = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:()
QMediaPlaylistControl::previousIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual int previousIndex(int steps) const = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(int steps) const
QMediaPlaylistControl::QMediaPlaylistControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    QMediaPlaylistControl(QObject* parent = 0);$/;"	prototype	class:QMediaPlaylistControl	access:protected	signature:(QObject* parent = 0)
QMediaPlaylistControl::setCurrentIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual void setCurrentIndex(int position) = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(int position)
QMediaPlaylistControl::setPlaybackMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual void setPlaybackMode(QMediaPlaylist::PlaybackMode mode) = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(QMediaPlaylist::PlaybackMode mode)
QMediaPlaylistControl::setPlaylistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual bool setPlaylistProvider(QMediaPlaylistProvider *playlist) = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(QMediaPlaylistProvider *playlist)
QMediaPlaylistControl::~QMediaPlaylistControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual ~QMediaPlaylistControl();$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:()
QMediaPlaylistIOInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^struct Q_MULTIMEDIA_EXPORT QMediaPlaylistIOInterface$/;"	struct
QMediaPlaylistIOInterface::canRead	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual bool canRead(const QUrl& location, const QByteArray &format = QByteArray()) const = 0;$/;"	prototype	struct:QMediaPlaylistIOInterface	access:public	signature:(const QUrl& location, const QByteArray &format = QByteArray()) const
QMediaPlaylistIOInterface::canRead	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual bool canRead(QIODevice *device, const QByteArray &format = QByteArray() ) const = 0;$/;"	prototype	struct:QMediaPlaylistIOInterface	access:public	signature:(QIODevice *device, const QByteArray &format = QByteArray() ) const
QMediaPlaylistIOInterface::canWrite	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual bool canWrite(QIODevice *device, const QByteArray &format) const = 0;$/;"	prototype	struct:QMediaPlaylistIOInterface	access:public	signature:(QIODevice *device, const QByteArray &format) const
QMediaPlaylistIOInterface::createReader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual QMediaPlaylistReader *createReader(const QUrl& location, const QByteArray &format = QByteArray()) = 0;$/;"	prototype	struct:QMediaPlaylistIOInterface	access:public	signature:(const QUrl& location, const QByteArray &format = QByteArray())
QMediaPlaylistIOInterface::createReader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual QMediaPlaylistReader *createReader(QIODevice *device, const QByteArray &format = QByteArray()) = 0;$/;"	prototype	struct:QMediaPlaylistIOInterface	access:public	signature:(QIODevice *device, const QByteArray &format = QByteArray())
QMediaPlaylistIOInterface::createWriter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual QMediaPlaylistWriter *createWriter(QIODevice *device, const QByteArray &format) = 0;$/;"	prototype	struct:QMediaPlaylistIOInterface	access:public	signature:(QIODevice *device, const QByteArray &format)
QMediaPlaylistIOPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    explicit QMediaPlaylistIOPlugin(QObject *parent = 0);$/;"	prototype	class:QMediaPlaylistIOPlugin	access:public	signature:(QObject *parent = 0)
QMediaPlaylistIOPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^class Q_MULTIMEDIA_EXPORT QMediaPlaylistIOPlugin : public QObject, public QMediaPlaylistIOInterface$/;"	class	inherits:QObject,QMediaPlaylistIOInterface
QMediaPlaylistIOPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    bool canRead(const QUrl& location, const QByteArray &format = QByteArray()) const override = 0;$/;"	member	class:QMediaPlaylistIOPlugin	access:public
QMediaPlaylistIOPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    bool canRead(QIODevice *device, const QByteArray &format = QByteArray() ) const override = 0;$/;"	member	class:QMediaPlaylistIOPlugin	access:public
QMediaPlaylistIOPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    bool canWrite(QIODevice *device, const QByteArray &format) const override = 0;$/;"	member	class:QMediaPlaylistIOPlugin	access:public
QMediaPlaylistIOPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    QMediaPlaylistReader *createReader(const QUrl& location, const QByteArray &format = QByteArray()) override = 0;$/;"	member	class:QMediaPlaylistIOPlugin	access:public
QMediaPlaylistIOPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    QMediaPlaylistReader *createReader(QIODevice *device, const QByteArray &format = QByteArray()) override = 0;$/;"	member	class:QMediaPlaylistIOPlugin	access:public
QMediaPlaylistIOPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    QMediaPlaylistWriter *createWriter(QIODevice *device, const QByteArray &format) override = 0;$/;"	member	class:QMediaPlaylistIOPlugin	access:public
QMediaPlaylistIOPlugin::QMediaPlaylistIOPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    explicit QMediaPlaylistIOPlugin(QObject *parent = 0);$/;"	prototype	class:QMediaPlaylistIOPlugin	access:public	signature:(QObject *parent = 0)
QMediaPlaylistIOPlugin::~QMediaPlaylistIOPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    ~QMediaPlaylistIOPlugin();$/;"	prototype	class:QMediaPlaylistIOPlugin	access:public	signature:()
QMediaPlaylistNavigator	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaPlaylistNavigator(QMediaPlaylistProvider *playlist, QObject *parent = 0);$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(QMediaPlaylistProvider *playlist, QObject *parent = 0)
QMediaPlaylistNavigator	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^class Q_MULTIMEDIA_EXPORT QMediaPlaylistNavigator : public QObject$/;"	class	inherits:QObject
QMediaPlaylistNavigator::activated	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void activated(const QMediaContent &content);$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(const QMediaContent &content)
QMediaPlaylistNavigator::currentIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    int currentIndex() const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:() const
QMediaPlaylistNavigator::currentIndexChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void currentIndexChanged(int);$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(int)
QMediaPlaylistNavigator::currentItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaContent currentItem() const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:() const
QMediaPlaylistNavigator::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_mediaChanged(int start, int end))$/;"	prototype	class:QMediaPlaylistNavigator	access:private	signature:()
QMediaPlaylistNavigator::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_mediaInserted(int start, int end))$/;"	prototype	class:QMediaPlaylistNavigator	access:private	signature:()
QMediaPlaylistNavigator::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_mediaRemoved(int start, int end))$/;"	prototype	class:QMediaPlaylistNavigator	access:private	signature:()
QMediaPlaylistNavigator::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaPlaylistNavigatorPrivate *d_ptr;$/;"	member	class:QMediaPlaylistNavigator	access:protected
QMediaPlaylistNavigator::itemAt	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaContent itemAt(int position) const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(int position) const
QMediaPlaylistNavigator::jump	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void jump(int);$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(int)
QMediaPlaylistNavigator::next	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void next();$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:()
QMediaPlaylistNavigator::nextIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    int nextIndex(int steps = 1) const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(int steps = 1) const
QMediaPlaylistNavigator::nextItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaContent nextItem(int steps = 1) const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(int steps = 1) const
QMediaPlaylistNavigator::playbackMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaPlaylist::PlaybackMode playbackMode() const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:() const
QMediaPlaylistNavigator::playbackModeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void playbackModeChanged(QMediaPlaylist::PlaybackMode mode);$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(QMediaPlaylist::PlaybackMode mode)
QMediaPlaylistNavigator::playlist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaPlaylistProvider *playlist() const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:() const
QMediaPlaylistNavigator::previous	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void previous();$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:()
QMediaPlaylistNavigator::previousIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    int previousIndex(int steps = 1) const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(int steps = 1) const
QMediaPlaylistNavigator::previousItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaContent previousItem(int steps = 1) const;$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(int steps = 1) const
QMediaPlaylistNavigator::QMediaPlaylistNavigator	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    QMediaPlaylistNavigator(QMediaPlaylistProvider *playlist, QObject *parent = 0);$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(QMediaPlaylistProvider *playlist, QObject *parent = 0)
QMediaPlaylistNavigator::setPlaybackMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void setPlaybackMode(QMediaPlaylist::PlaybackMode mode);$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(QMediaPlaylist::PlaybackMode mode)
QMediaPlaylistNavigator::setPlaylist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void setPlaylist(QMediaPlaylistProvider *playlist);$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(QMediaPlaylistProvider *playlist)
QMediaPlaylistNavigator::surroundingItemsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void surroundingItemsChanged();$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:()
QMediaPlaylistNavigator::~QMediaPlaylistNavigator	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    virtual ~QMediaPlaylistNavigator();$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:()
QMediaPlaylistPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaPlaylistPrivate()$/;"	function	class:QMediaPlaylistPrivate	access:public	signature:()
QMediaPlaylistPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^class QMediaPlaylistPrivate$/;"	class
QMediaPlaylistPrivate::control	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaPlaylistControl *control;$/;"	member	class:QMediaPlaylistPrivate	access:public
QMediaPlaylistPrivate::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaPlaylist::Error error;$/;"	member	class:QMediaPlaylistPrivate	access:public
QMediaPlaylistPrivate::errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QString errorString;$/;"	member	class:QMediaPlaylistPrivate	access:public
QMediaPlaylistPrivate::mediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaObject *mediaObject;$/;"	member	class:QMediaPlaylistPrivate	access:public
QMediaPlaylistPrivate::networkPlaylistControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaPlaylistControl *networkPlaylistControl;$/;"	member	class:QMediaPlaylistPrivate	access:public
QMediaPlaylistPrivate::playlist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaPlaylistProvider *playlist() const { return control->playlistProvider(); }$/;"	function	class:QMediaPlaylistPrivate	access:public	signature:() const
QMediaPlaylistPrivate::QMediaPlaylistPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaPlaylistPrivate()$/;"	function	class:QMediaPlaylistPrivate	access:public	signature:()
QMediaPlaylistPrivate::q_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaPlaylist *q_ptr;$/;"	member	class:QMediaPlaylistPrivate	access:public
QMediaPlaylistPrivate::readItems	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    bool readItems(QMediaPlaylistReader *reader);$/;"	prototype	class:QMediaPlaylistPrivate	access:public	signature:(QMediaPlaylistReader *reader)
QMediaPlaylistPrivate::syncControls	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    void syncControls(QMediaPlaylistControl *oldControl, QMediaPlaylistControl *newControl,$/;"	prototype	class:QMediaPlaylistPrivate	access:public	signature:(QMediaPlaylistControl *oldControl, QMediaPlaylistControl *newControl, int *removedStart, int *removedEnd, int *insertedStart, int *insertedEnd)
QMediaPlaylistPrivate::writeItems	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    bool writeItems(QMediaPlaylistWriter *writer);$/;"	prototype	class:QMediaPlaylistPrivate	access:public	signature:(QMediaPlaylistWriter *writer)
QMediaPlaylistPrivate::_q_loadFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    void _q_loadFailed(QMediaPlaylist::Error error, const QString &errorString)$/;"	function	class:QMediaPlaylistPrivate	access:public	signature:(QMediaPlaylist::Error error, const QString &errorString)
QMediaPlaylistPrivate::_q_mediaObjectDeleted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    void _q_mediaObjectDeleted()$/;"	function	class:QMediaPlaylistPrivate	access:public	signature:()
QMediaPlaylistPrivate::~QMediaPlaylistPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    virtual ~QMediaPlaylistPrivate() {}$/;"	function	class:QMediaPlaylistPrivate	access:public	signature:()
QMediaPlaylistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    QMediaPlaylistProvider(QMediaPlaylistProviderPrivate &dd, QObject *parent);$/;"	prototype	class:QMediaPlaylistProvider	access:protected	signature:(QMediaPlaylistProviderPrivate &dd, QObject *parent)
QMediaPlaylistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    QMediaPlaylistProvider(QObject *parent=0);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(QObject *parent=0)
QMediaPlaylistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^class Q_MULTIMEDIA_EXPORT QMediaPlaylistProvider : public QObject$/;"	class	inherits:QObject
QMediaPlaylistProvider::addMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool addMedia(const QList<QMediaContent> &contentList);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(const QList<QMediaContent> &contentList)
QMediaPlaylistProvider::addMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool addMedia(const QMediaContent &content);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(const QMediaContent &content)
QMediaPlaylistProvider::clear	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool clear();$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:()
QMediaPlaylistProvider::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    QMediaPlaylistProviderPrivate *d_ptr;$/;"	member	class:QMediaPlaylistProvider	access:protected
QMediaPlaylistProvider::insertMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool insertMedia(int index, const QList<QMediaContent> &content);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int index, const QList<QMediaContent> &content)
QMediaPlaylistProvider::insertMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool insertMedia(int index, const QMediaContent &content);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int index, const QMediaContent &content)
QMediaPlaylistProvider::isReadOnly	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool isReadOnly() const;$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:() const
QMediaPlaylistProvider::load	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool load(const QNetworkRequest &request, const char *format = 0);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(const QNetworkRequest &request, const char *format = 0)
QMediaPlaylistProvider::load	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool load(QIODevice * device, const char *format = 0);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(QIODevice * device, const char *format = 0)
QMediaPlaylistProvider::loaded	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    void loaded();$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:()
QMediaPlaylistProvider::loadFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    void loadFailed(QMediaPlaylist::Error, const QString& errorMessage);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(QMediaPlaylist::Error, const QString& errorMessage)
QMediaPlaylistProvider::media	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual QMediaContent media(int index) const = 0;$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int index) const
QMediaPlaylistProvider::mediaAboutToBeInserted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    void mediaAboutToBeInserted(int start, int end);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int start, int end)
QMediaPlaylistProvider::mediaAboutToBeRemoved	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    void mediaAboutToBeRemoved(int start, int end);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int start, int end)
QMediaPlaylistProvider::mediaChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    void mediaChanged(int start, int end);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int start, int end)
QMediaPlaylistProvider::mediaCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual int mediaCount() const = 0;$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:() const
QMediaPlaylistProvider::mediaInserted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    void mediaInserted(int start, int end);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int start, int end)
QMediaPlaylistProvider::mediaRemoved	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    void mediaRemoved(int start, int end);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int start, int end)
QMediaPlaylistProvider::moveMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool moveMedia(int from, int to);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int from, int to)
QMediaPlaylistProvider::QMediaPlaylistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    QMediaPlaylistProvider(QMediaPlaylistProviderPrivate &dd, QObject *parent);$/;"	prototype	class:QMediaPlaylistProvider	access:protected	signature:(QMediaPlaylistProviderPrivate &dd, QObject *parent)
QMediaPlaylistProvider::QMediaPlaylistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    QMediaPlaylistProvider(QObject *parent=0);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(QObject *parent=0)
QMediaPlaylistProvider::removeMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool removeMedia(int pos);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int pos)
QMediaPlaylistProvider::removeMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool removeMedia(int start, int end);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int start, int end)
QMediaPlaylistProvider::save	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool save(const QUrl &location, const char *format = 0);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(const QUrl &location, const char *format = 0)
QMediaPlaylistProvider::save	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool save(QIODevice * device, const char *format);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(QIODevice * device, const char *format)
QMediaPlaylistProvider::shuffle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual void shuffle();$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:()
QMediaPlaylistProvider::~QMediaPlaylistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual ~QMediaPlaylistProvider();$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:()
QMediaPlaylistProviderPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    QMediaPlaylistProviderPrivate()$/;"	function	class:QMediaPlaylistProviderPrivate	access:public	signature:()
QMediaPlaylistProviderPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^class QMediaPlaylistProviderPrivate$/;"	class
QMediaPlaylistProviderPrivate::QMediaPlaylistProviderPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    QMediaPlaylistProviderPrivate()$/;"	function	class:QMediaPlaylistProviderPrivate	access:public	signature:()
QMediaPlaylistProviderPrivate::~QMediaPlaylistProviderPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual ~QMediaPlaylistProviderPrivate()$/;"	function	class:QMediaPlaylistProviderPrivate	access:public	signature:()
QMediaPlaylistReader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^class Q_MULTIMEDIA_EXPORT QMediaPlaylistReader$/;"	class
QMediaPlaylistReader::atEnd	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual bool atEnd() const = 0;$/;"	prototype	class:QMediaPlaylistReader	access:public	signature:() const
QMediaPlaylistReader::close	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual void close() = 0;$/;"	prototype	class:QMediaPlaylistReader	access:public	signature:()
QMediaPlaylistReader::readItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual QMediaContent readItem() = 0;$/;"	prototype	class:QMediaPlaylistReader	access:public	signature:()
QMediaPlaylistReader::~QMediaPlaylistReader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual ~QMediaPlaylistReader();$/;"	prototype	class:QMediaPlaylistReader	access:public	signature:()
QMediaPlaylistSourceControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistsourcecontrol_p.h	/^    QMediaPlaylistSourceControl(QObject* parent = 0);$/;"	prototype	class:QMediaPlaylistSourceControl	access:protected	signature:(QObject* parent = 0)
QMediaPlaylistSourceControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistsourcecontrol_p.h	/^class Q_MULTIMEDIA_EXPORT QMediaPlaylistSourceControl : public QMediaControl$/;"	class	inherits:QMediaControl
QMediaPlaylistSourceControl::playlist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistsourcecontrol_p.h	/^    virtual QMediaPlaylist *playlist() const = 0;$/;"	prototype	class:QMediaPlaylistSourceControl	access:public	signature:() const
QMediaPlaylistSourceControl::playlistChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistsourcecontrol_p.h	/^    void playlistChanged(QMediaPlaylist* playlist);$/;"	prototype	class:QMediaPlaylistSourceControl	access:public	signature:(QMediaPlaylist* playlist)
QMediaPlaylistSourceControl::QMediaPlaylistSourceControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistsourcecontrol_p.h	/^    QMediaPlaylistSourceControl(QObject* parent = 0);$/;"	prototype	class:QMediaPlaylistSourceControl	access:protected	signature:(QObject* parent = 0)
QMediaPlaylistSourceControl::setPlaylist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistsourcecontrol_p.h	/^    virtual void setPlaylist(QMediaPlaylist *) = 0;$/;"	prototype	class:QMediaPlaylistSourceControl	access:public	signature:(QMediaPlaylist *)
QMediaPlaylistSourceControl::~QMediaPlaylistSourceControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistsourcecontrol_p.h	/^    virtual ~QMediaPlaylistSourceControl();$/;"	prototype	class:QMediaPlaylistSourceControl	access:public	signature:()
QMediaPlaylistWriter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^class Q_MULTIMEDIA_EXPORT QMediaPlaylistWriter$/;"	class
QMediaPlaylistWriter::close	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual void close() = 0;$/;"	prototype	class:QMediaPlaylistWriter	access:public	signature:()
QMediaPlaylistWriter::writeItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual bool writeItem(const QMediaContent &content) = 0;$/;"	prototype	class:QMediaPlaylistWriter	access:public	signature:(const QMediaContent &content)
QMediaPlaylistWriter::~QMediaPlaylistWriter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual ~QMediaPlaylistWriter();$/;"	prototype	class:QMediaPlaylistWriter	access:public	signature:()
QMediaPluginLoader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QMediaPluginLoader(const char *iid,$/;"	prototype	class:QMediaPluginLoader	access:public	signature:(const char *iid, const QString &suffix = QString(), Qt::CaseSensitivity = Qt::CaseSensitive)
QMediaPluginLoader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^class Q_MULTIMEDIA_EXPORT QMediaPluginLoader$/;"	class
QMediaPluginLoader::instance	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QObject* instance(QString const &key);$/;"	prototype	class:QMediaPluginLoader	access:public	signature:(QString const &key)
QMediaPluginLoader::instances	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QList<QObject*> instances(QString const &key);$/;"	prototype	class:QMediaPluginLoader	access:public	signature:(QString const &key)
QMediaPluginLoader::keys	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QStringList keys() const;$/;"	prototype	class:QMediaPluginLoader	access:public	signature:() const
QMediaPluginLoader::loadMetadata	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    void loadMetadata();$/;"	prototype	class:QMediaPluginLoader	access:private	signature:()
QMediaPluginLoader::m_factoryLoader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QFactoryLoader *m_factoryLoader;$/;"	member	class:QMediaPluginLoader	access:private
QMediaPluginLoader::m_iid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QByteArray  m_iid;$/;"	member	class:QMediaPluginLoader	access:private
QMediaPluginLoader::m_location	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QString     m_location;$/;"	member	class:QMediaPluginLoader	access:private
QMediaPluginLoader::m_metadata	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QMap<QString, QList<QJsonObject> > m_metadata;$/;"	member	class:QMediaPluginLoader	access:private
QMediaPluginLoader::QMediaPluginLoader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    QMediaPluginLoader(const char *iid,$/;"	prototype	class:QMediaPluginLoader	access:public	signature:(const char *iid, const QString &suffix = QString(), Qt::CaseSensitivity = Qt::CaseSensitive)
QMediaPluginLoader::~QMediaPluginLoader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    ~QMediaPluginLoader();$/;"	prototype	class:QMediaPluginLoader	access:public	signature:()
QMediaRecorder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    explicit QMediaRecorder(QMediaObject *mediaObject, QObject *parent = nullptr);$/;"	prototype	class:QMediaRecorder	access:public	signature:(QMediaObject *mediaObject, QObject *parent = nullptr)
QMediaRecorder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QMediaRecorder(QMediaRecorderPrivate &dd, QMediaObject *mediaObject, QObject *parent = nullptr);$/;"	prototype	class:QMediaRecorder	access:protected	signature:(QMediaRecorderPrivate &dd, QMediaObject *mediaObject, QObject *parent = nullptr)
QMediaRecorder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^class Q_MULTIMEDIA_EXPORT QMediaRecorder : public QObject, public QMediaBindableInterface$/;"	class	inherits:QObject,QMediaBindableInterface
QMediaRecorder::actualLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QUrl actualLocation() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::actualLocationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void actualLocationChanged(const QUrl &location);$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QUrl &location)
QMediaRecorder::audioCodecDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QString audioCodecDescription(const QString &codecName) const;$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QString &codecName) const
QMediaRecorder::audioSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QAudioEncoderSettings audioSettings() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::availability	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QMultimedia::AvailabilityStatus availability() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void availabilityChanged(bool available);$/;"	prototype	class:QMediaRecorder	access:public	signature:(bool available)
QMediaRecorder::availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void availabilityChanged(QMultimedia::AvailabilityStatus availability);$/;"	prototype	class:QMediaRecorder	access:public	signature:(QMultimedia::AvailabilityStatus availability)
QMediaRecorder::availableMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QStringList availableMetaData() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::containerDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QString containerDescription(const QString &format) const;$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QString &format) const
QMediaRecorder::containerFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QString containerFormat() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    qint64 duration() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::durationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void durationChanged(qint64 duration);$/;"	prototype	class:QMediaRecorder	access:public	signature:(qint64 duration)
QMediaRecorder::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_applySettings())$/;"	prototype	class:QMediaRecorder	access:private	signature:()
QMediaRecorder::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_availabilityChanged(QMultimedia::AvailabilityStatus))$/;"	prototype	class:QMediaRecorder	access:private	signature:()
QMediaRecorder::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_error(int, const QString &))$/;"	prototype	class:QMediaRecorder	access:private	signature:()
QMediaRecorder::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_notify())$/;"	prototype	class:QMediaRecorder	access:private	signature:()
QMediaRecorder::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_serviceDestroyed())$/;"	prototype	class:QMediaRecorder	access:private	signature:()
QMediaRecorder::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_stateChanged(QMediaRecorder::State))$/;"	prototype	class:QMediaRecorder	access:private	signature:()
QMediaRecorder::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_updateActualLocation(const QUrl &))$/;"	prototype	class:QMediaRecorder	access:private	signature:()
QMediaRecorder::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_updateNotifyInterval(int))$/;"	prototype	class:QMediaRecorder	access:private	signature:()
QMediaRecorder::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QMediaRecorderPrivate *d_ptr;$/;"	member	class:QMediaRecorder	access:protected
QMediaRecorder::Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    enum Error$/;"	enum	class:QMediaRecorder	access:public
QMediaRecorder::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Error error() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void error(QMediaRecorder::Error error);$/;"	prototype	class:QMediaRecorder	access:public	signature:(QMediaRecorder::Error error)
QMediaRecorder::errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QString errorString() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::FinalizingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        FinalizingStatus$/;"	enumerator	enum:QMediaRecorder::Status
QMediaRecorder::FormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        FormatError,$/;"	enumerator	enum:QMediaRecorder::Error
QMediaRecorder::isAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    bool isAvailable() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::isMetaDataAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    bool isMetaDataAvailable() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::isMetaDataWritable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    bool isMetaDataWritable() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    bool isMuted() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::LoadedStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        LoadedStatus,$/;"	enumerator	enum:QMediaRecorder::Status
QMediaRecorder::LoadingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        LoadingStatus,$/;"	enumerator	enum:QMediaRecorder::Status
QMediaRecorder::metaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QVariant metaData(const QString &key) const;$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QString &key) const
QMediaRecorder::metaDataAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void metaDataAvailableChanged(bool available);$/;"	prototype	class:QMediaRecorder	access:public	signature:(bool available)
QMediaRecorder::metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void metaDataChanged();$/;"	prototype	class:QMediaRecorder	access:public	signature:()
QMediaRecorder::metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void metaDataChanged(const QString &key, const QVariant &value);$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QString &key, const QVariant &value)
QMediaRecorder::metaDataWritableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void metaDataWritableChanged(bool writable);$/;"	prototype	class:QMediaRecorder	access:public	signature:(bool writable)
QMediaRecorder::mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void mutedChanged(bool muted);$/;"	prototype	class:QMediaRecorder	access:public	signature:(bool muted)
QMediaRecorder::NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        NoError,$/;"	enumerator	enum:QMediaRecorder::Error
QMediaRecorder::OutOfSpaceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        OutOfSpaceError$/;"	enumerator	enum:QMediaRecorder::Error
QMediaRecorder::outputLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QUrl outputLocation() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    bool setMediaObject(QMediaObject *object) override;$/;"	member	class:QMediaRecorder	access:protected
QMediaRecorder::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QMediaObject *mediaObject() const override;$/;"	member	class:QMediaRecorder	access:public
QMediaRecorder::pause	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void pause();$/;"	prototype	class:QMediaRecorder	access:public	signature:()
QMediaRecorder::PausedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        PausedState$/;"	enumerator	enum:QMediaRecorder::State
QMediaRecorder::PausedStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        PausedStatus,$/;"	enumerator	enum:QMediaRecorder::Status
QMediaRecorder::QMediaRecorder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    explicit QMediaRecorder(QMediaObject *mediaObject, QObject *parent = nullptr);$/;"	prototype	class:QMediaRecorder	access:public	signature:(QMediaObject *mediaObject, QObject *parent = nullptr)
QMediaRecorder::QMediaRecorder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QMediaRecorder(QMediaRecorderPrivate &dd, QMediaObject *mediaObject, QObject *parent = nullptr);$/;"	prototype	class:QMediaRecorder	access:protected	signature:(QMediaRecorderPrivate &dd, QMediaObject *mediaObject, QObject *parent = nullptr)
QMediaRecorder::record	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void record();$/;"	prototype	class:QMediaRecorder	access:public	signature:()
QMediaRecorder::RecordingState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        RecordingState,$/;"	enumerator	enum:QMediaRecorder::State
QMediaRecorder::RecordingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        RecordingStatus,$/;"	enumerator	enum:QMediaRecorder::Status
QMediaRecorder::ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        ResourceError,$/;"	enumerator	enum:QMediaRecorder::Error
QMediaRecorder::setAudioSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void setAudioSettings(const QAudioEncoderSettings &audioSettings);$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QAudioEncoderSettings &audioSettings)
QMediaRecorder::setContainerFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void setContainerFormat(const QString &container);$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QString &container)
QMediaRecorder::setEncodingSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void setEncodingSettings(const QAudioEncoderSettings &audioSettings,$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QAudioEncoderSettings &audioSettings, const QVideoEncoderSettings &videoSettings = QVideoEncoderSettings(), const QString &containerMimeType = QString())
QMediaRecorder::setMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void setMetaData(const QString &key, const QVariant &value);$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QString &key, const QVariant &value)
QMediaRecorder::setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void setMuted(bool muted);$/;"	prototype	class:QMediaRecorder	access:public	signature:(bool muted)
QMediaRecorder::setOutputLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    bool setOutputLocation(const QUrl &location);$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QUrl &location)
QMediaRecorder::setVideoSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void setVideoSettings(const QVideoEncoderSettings &videoSettings);$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QVideoEncoderSettings &videoSettings)
QMediaRecorder::setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void setVolume(qreal volume);$/;"	prototype	class:QMediaRecorder	access:public	signature:(qreal volume)
QMediaRecorder::StartingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        StartingStatus,$/;"	enumerator	enum:QMediaRecorder::Status
QMediaRecorder::State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    enum State$/;"	enum	class:QMediaRecorder	access:public
QMediaRecorder::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    State state() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void stateChanged(QMediaRecorder::State state);$/;"	prototype	class:QMediaRecorder	access:public	signature:(QMediaRecorder::State state)
QMediaRecorder::Status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    enum Status {$/;"	enum	class:QMediaRecorder	access:public
QMediaRecorder::status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Status status() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::statusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void statusChanged(QMediaRecorder::Status status);$/;"	prototype	class:QMediaRecorder	access:public	signature:(QMediaRecorder::Status status)
QMediaRecorder::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void stop();$/;"	prototype	class:QMediaRecorder	access:public	signature:()
QMediaRecorder::StoppedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        StoppedState,$/;"	enumerator	enum:QMediaRecorder::State
QMediaRecorder::supportedAudioCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QStringList supportedAudioCodecs() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::supportedAudioSampleRates	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QList<int> supportedAudioSampleRates(const QAudioEncoderSettings &settings = QAudioEncoderSettings(),$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QAudioEncoderSettings &settings = QAudioEncoderSettings(), bool *continuous = nullptr) const
QMediaRecorder::supportedContainers	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QStringList supportedContainers() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::supportedFrameRates	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QList<qreal> supportedFrameRates(const QVideoEncoderSettings &settings = QVideoEncoderSettings(),$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QVideoEncoderSettings &settings = QVideoEncoderSettings(), bool *continuous = nullptr) const
QMediaRecorder::supportedResolutions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QList<QSize> supportedResolutions(const QVideoEncoderSettings &settings = QVideoEncoderSettings(),$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QVideoEncoderSettings &settings = QVideoEncoderSettings(), bool *continuous = nullptr) const
QMediaRecorder::supportedVideoCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QStringList supportedVideoCodecs() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::UnavailableStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        UnavailableStatus,$/;"	enumerator	enum:QMediaRecorder::Status
QMediaRecorder::UnloadedStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        UnloadedStatus,$/;"	enumerator	enum:QMediaRecorder::Status
QMediaRecorder::videoCodecDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QString videoCodecDescription(const QString &codecName) const;$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QString &codecName) const
QMediaRecorder::videoSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QVideoEncoderSettings videoSettings() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    qreal volume() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
QMediaRecorder::volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void volumeChanged(qreal volume);$/;"	prototype	class:QMediaRecorder	access:public	signature:(qreal volume)
QMediaRecorder::~QMediaRecorder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    ~QMediaRecorder();$/;"	prototype	class:QMediaRecorder	access:public	signature:()
QMediaRecorderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    explicit QMediaRecorderControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaRecorderControl	access:protected	signature:(QObject *parent = nullptr)
QMediaRecorderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^class Q_MULTIMEDIA_EXPORT QMediaRecorderControl : public QMediaControl$/;"	class	inherits:QMediaControl
QMediaRecorderControl::actualLocationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    void actualLocationChanged(const QUrl &location);$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(const QUrl &location)
QMediaRecorderControl::applySettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual void applySettings() = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:()
QMediaRecorderControl::duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual qint64 duration() const = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:() const
QMediaRecorderControl::durationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    void durationChanged(qint64 position);$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(qint64 position)
QMediaRecorderControl::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    void error(int error, const QString &errorString);$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(int error, const QString &errorString)
QMediaRecorderControl::isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual bool isMuted() const = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:() const
QMediaRecorderControl::mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    void mutedChanged(bool muted);$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(bool muted)
QMediaRecorderControl::outputLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual QUrl outputLocation() const = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:() const
QMediaRecorderControl::QMediaRecorderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    explicit QMediaRecorderControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaRecorderControl	access:protected	signature:(QObject *parent = nullptr)
QMediaRecorderControl::setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual void setMuted(bool muted) = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(bool muted)
QMediaRecorderControl::setOutputLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual bool setOutputLocation(const QUrl &location) = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(const QUrl &location)
QMediaRecorderControl::setState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual void setState(QMediaRecorder::State state) = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(QMediaRecorder::State state)
QMediaRecorderControl::setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual void setVolume(qreal volume) = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(qreal volume)
QMediaRecorderControl::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual QMediaRecorder::State state() const = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:() const
QMediaRecorderControl::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    void stateChanged(QMediaRecorder::State state);$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(QMediaRecorder::State state)
QMediaRecorderControl::status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual QMediaRecorder::Status status() const = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:() const
QMediaRecorderControl::statusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    void statusChanged(QMediaRecorder::Status status);$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(QMediaRecorder::Status status)
QMediaRecorderControl::volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual qreal volume() const = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:() const
QMediaRecorderControl::volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    void volumeChanged(qreal volume);$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(qreal volume)
QMediaRecorderControl::~QMediaRecorderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual ~QMediaRecorderControl();$/;"	prototype	class:QMediaRecorderControl	access:public	signature:()
QMediaRecorderPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaRecorderPrivate();$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:()
QMediaRecorderPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^class QMediaRecorderPrivate$/;"	class
QMediaRecorderPrivate::actualLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QUrl actualLocation;$/;"	member	class:QMediaRecorderPrivate	access:public
QMediaRecorderPrivate::applySettingsLater	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void applySettingsLater();$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:()
QMediaRecorderPrivate::audioControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QAudioEncoderSettingsControl *audioControl;$/;"	member	class:QMediaRecorderPrivate	access:public
QMediaRecorderPrivate::availabilityControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaAvailabilityControl *availabilityControl;$/;"	member	class:QMediaRecorderPrivate	access:public
QMediaRecorderPrivate::control	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaRecorderControl *control;$/;"	member	class:QMediaRecorderPrivate	access:public
QMediaRecorderPrivate::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaRecorder::Error error;$/;"	member	class:QMediaRecorderPrivate	access:public
QMediaRecorderPrivate::errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QString errorString;$/;"	member	class:QMediaRecorderPrivate	access:public
QMediaRecorderPrivate::formatControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaContainerControl *formatControl;$/;"	member	class:QMediaRecorderPrivate	access:public
QMediaRecorderPrivate::mediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaObject *mediaObject;$/;"	member	class:QMediaRecorderPrivate	access:public
QMediaRecorderPrivate::metaDataControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMetaDataWriterControl *metaDataControl;$/;"	member	class:QMediaRecorderPrivate	access:public
QMediaRecorderPrivate::notifyTimer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QTimer* notifyTimer;$/;"	member	class:QMediaRecorderPrivate	access:public
QMediaRecorderPrivate::QMediaRecorderPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaRecorderPrivate();$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:()
QMediaRecorderPrivate::q_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaRecorder *q_ptr;$/;"	member	class:QMediaRecorderPrivate	access:public
QMediaRecorderPrivate::restartCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void restartCamera();$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:()
QMediaRecorderPrivate::settingsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    bool settingsChanged;$/;"	member	class:QMediaRecorderPrivate	access:public
QMediaRecorderPrivate::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaRecorder::State state;$/;"	member	class:QMediaRecorderPrivate	access:public
QMediaRecorderPrivate::videoControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QVideoEncoderSettingsControl *videoControl;$/;"	member	class:QMediaRecorderPrivate	access:public
QMediaRecorderPrivate::_q_applySettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_applySettings();$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:()
QMediaRecorderPrivate::_q_availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_availabilityChanged(QMultimedia::AvailabilityStatus availability);$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:(QMultimedia::AvailabilityStatus availability)
QMediaRecorderPrivate::_q_error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_error(int error, const QString &errorString);$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:(int error, const QString &errorString)
QMediaRecorderPrivate::_q_notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_notify();$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:()
QMediaRecorderPrivate::_q_serviceDestroyed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_serviceDestroyed();$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:()
QMediaRecorderPrivate::_q_stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_stateChanged(QMediaRecorder::State state);$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:(QMediaRecorder::State state)
QMediaRecorderPrivate::_q_updateActualLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_updateActualLocation(const QUrl &);$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:(const QUrl &)
QMediaRecorderPrivate::_q_updateNotifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_updateNotifyInterval(int ms);$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:(int ms)
QMediaRecorderPrivate::~QMediaRecorderPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    virtual ~QMediaRecorderPrivate() {}$/;"	function	class:QMediaRecorderPrivate	access:public	signature:()
QMediaResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QMediaResource();$/;"	prototype	class:QMediaResource	access:public	signature:()
QMediaResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QMediaResource(const QMediaResource &other);$/;"	prototype	class:QMediaResource	access:public	signature:(const QMediaResource &other)
QMediaResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QMediaResource(const QNetworkRequest &request, const QString &mimeType = QString());$/;"	prototype	class:QMediaResource	access:public	signature:(const QNetworkRequest &request, const QString &mimeType = QString())
QMediaResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QMediaResource(const QUrl &url, const QString &mimeType = QString());$/;"	prototype	class:QMediaResource	access:public	signature:(const QUrl &url, const QString &mimeType = QString())
QMediaResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^class Q_MULTIMEDIA_EXPORT QMediaResource$/;"	class
QMediaResource::AudioBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        AudioBitRate,$/;"	enumerator	enum:QMediaResource::Property
QMediaResource::audioBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    int audioBitRate() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
QMediaResource::AudioCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        AudioCodec,$/;"	enumerator	enum:QMediaResource::Property
QMediaResource::audioCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QString audioCodec() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
QMediaResource::ChannelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        ChannelCount,$/;"	enumerator	enum:QMediaResource::Property
QMediaResource::channelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    int channelCount() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
QMediaResource::DataSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        DataSize,$/;"	enumerator	enum:QMediaResource::Property
QMediaResource::dataSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    qint64 dataSize() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
QMediaResource::isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    bool isNull() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
QMediaResource::Language	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        Language,$/;"	enumerator	enum:QMediaResource::Property
QMediaResource::language	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QString language() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
QMediaResource::MimeType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        MimeType,$/;"	enumerator	enum:QMediaResource::Property
QMediaResource::mimeType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QString mimeType() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
QMediaResource::operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    bool operator !=(const QMediaResource &other) const;$/;"	prototype	class:QMediaResource	access:public	signature:(const QMediaResource &other) const
QMediaResource::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QMediaResource &operator =(const QMediaResource &other);$/;"	prototype	class:QMediaResource	access:public	signature:(const QMediaResource &other)
QMediaResource::operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    bool operator ==(const QMediaResource &other) const;$/;"	prototype	class:QMediaResource	access:public	signature:(const QMediaResource &other) const
QMediaResource::Property	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    enum Property$/;"	enum	class:QMediaResource	access:private
QMediaResource::QMediaResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QMediaResource();$/;"	prototype	class:QMediaResource	access:public	signature:()
QMediaResource::QMediaResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QMediaResource(const QMediaResource &other);$/;"	prototype	class:QMediaResource	access:public	signature:(const QMediaResource &other)
QMediaResource::QMediaResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QMediaResource(const QNetworkRequest &request, const QString &mimeType = QString());$/;"	prototype	class:QMediaResource	access:public	signature:(const QNetworkRequest &request, const QString &mimeType = QString())
QMediaResource::QMediaResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QMediaResource(const QUrl &url, const QString &mimeType = QString());$/;"	prototype	class:QMediaResource	access:public	signature:(const QUrl &url, const QString &mimeType = QString())
QMediaResource::Request	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        Request,$/;"	enumerator	enum:QMediaResource::Property
QMediaResource::request	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QNetworkRequest request() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
QMediaResource::Resolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        Resolution$/;"	enumerator	enum:QMediaResource::Property
QMediaResource::resolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QSize resolution() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
QMediaResource::SampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        SampleRate,$/;"	enumerator	enum:QMediaResource::Property
QMediaResource::sampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    int sampleRate() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
QMediaResource::setAudioBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setAudioBitRate(int rate);$/;"	prototype	class:QMediaResource	access:public	signature:(int rate)
QMediaResource::setAudioCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setAudioCodec(const QString &codec);$/;"	prototype	class:QMediaResource	access:public	signature:(const QString &codec)
QMediaResource::setChannelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setChannelCount(int channels);$/;"	prototype	class:QMediaResource	access:public	signature:(int channels)
QMediaResource::setDataSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setDataSize(const qint64 size);$/;"	prototype	class:QMediaResource	access:public	signature:(const qint64 size)
QMediaResource::setLanguage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setLanguage(const QString &language);$/;"	prototype	class:QMediaResource	access:public	signature:(const QString &language)
QMediaResource::setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setResolution(const QSize &resolution);$/;"	prototype	class:QMediaResource	access:public	signature:(const QSize &resolution)
QMediaResource::setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setResolution(int width, int height);$/;"	prototype	class:QMediaResource	access:public	signature:(int width, int height)
QMediaResource::setSampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setSampleRate(int frequency);$/;"	prototype	class:QMediaResource	access:public	signature:(int frequency)
QMediaResource::setVideoBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setVideoBitRate(int rate);$/;"	prototype	class:QMediaResource	access:public	signature:(int rate)
QMediaResource::setVideoCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setVideoCodec(const QString &codec);$/;"	prototype	class:QMediaResource	access:public	signature:(const QString &codec)
QMediaResource::Url	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        Url,$/;"	enumerator	enum:QMediaResource::Property
QMediaResource::url	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QUrl url() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
QMediaResource::values	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QMap<int, QVariant> values;$/;"	member	class:QMediaResource	access:private
QMediaResource::VideoBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        VideoBitRate,$/;"	enumerator	enum:QMediaResource::Property
QMediaResource::videoBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    int videoBitRate() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
QMediaResource::VideoCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        VideoCodec,$/;"	enumerator	enum:QMediaResource::Property
QMediaResource::videoCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QString videoCodec() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
QMediaResource::~QMediaResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    ~QMediaResource();$/;"	prototype	class:QMediaResource	access:public	signature:()
QMediaResourceList	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^typedef QList<QMediaResource> QMediaResourceList;$/;"	typedef
QMediaResourcePolicy	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicy_p.h	/^class Q_MULTIMEDIA_EXPORT QMediaResourcePolicy$/;"	class
QMediaResourcePolicy::createResourceSet	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicy_p.h	/^    static QObject* createResourceSet(const QString& interfaceId);$/;"	prototype	class:QMediaResourcePolicy	access:private	signature:(const QString& interfaceId)
QMediaResourcePolicy::createResourceSet	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicy_p.h	/^    static T* createResourceSet();$/;"	prototype	class:QMediaResourcePolicy	access:public	signature:()
QMediaResourcePolicy::createResourceSet	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicy_p.h	/^T* QMediaResourcePolicy::createResourceSet()$/;"	function	class:QMediaResourcePolicy	signature:()
QMediaResourcePolicy::destroyResourceSet	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicy_p.h	/^    static void destroyResourceSet(QObject* resourceSet);$/;"	prototype	class:QMediaResourcePolicy	access:public	signature:(QObject* resourceSet)
QMediaResourcePolicyPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicyplugin_p.h	/^    QMediaResourcePolicyPlugin(QObject *parent = 0);$/;"	prototype	class:QMediaResourcePolicyPlugin	access:public	signature:(QObject *parent = 0)
QMediaResourcePolicyPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicyplugin_p.h	/^class Q_MULTIMEDIA_EXPORT QMediaResourcePolicyPlugin : public QObject, public QMediaResourceSetFactoryInterface$/;"	class	inherits:QObject,QMediaResourceSetFactoryInterface
QMediaResourcePolicyPlugin::QMediaResourcePolicyPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicyplugin_p.h	/^    QMediaResourcePolicyPlugin(QObject *parent = 0);$/;"	prototype	class:QMediaResourcePolicyPlugin	access:public	signature:(QObject *parent = 0)
QMediaResourcePolicyPlugin::~QMediaResourcePolicyPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicyplugin_p.h	/^    ~QMediaResourcePolicyPlugin();$/;"	prototype	class:QMediaResourcePolicyPlugin	access:public	signature:()
QMediaResourceSetFactoryInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicyplugin_p.h	/^struct Q_MULTIMEDIA_EXPORT QMediaResourceSetFactoryInterface$/;"	struct
QMediaResourceSetFactoryInterface::create	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicyplugin_p.h	/^    virtual QObject* create(const QString& interfaceId) = 0;$/;"	prototype	struct:QMediaResourceSetFactoryInterface	access:public	signature:(const QString& interfaceId)
QMediaResourceSetFactoryInterface::destroy	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicyplugin_p.h	/^    virtual void destroy(QObject *resourceSet) = 0;$/;"	prototype	struct:QMediaResourceSetFactoryInterface	access:public	signature:(QObject *resourceSet)
QMediaService	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^    QMediaService(QMediaServicePrivate &dd, QObject *parent);$/;"	prototype	class:QMediaService	access:protected	signature:(QMediaServicePrivate &dd, QObject *parent)
QMediaService	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^    QMediaService(QObject* parent);$/;"	prototype	class:QMediaService	access:protected	signature:(QObject* parent)
QMediaService	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^class Q_MULTIMEDIA_EXPORT QMediaService : public QObject$/;"	class	inherits:QObject
QMediaService::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^    QMediaServicePrivate *d_ptr;$/;"	member	class:QMediaService	access:protected
QMediaService::QMediaService	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^    QMediaService(QMediaServicePrivate &dd, QObject *parent);$/;"	prototype	class:QMediaService	access:protected	signature:(QMediaServicePrivate &dd, QObject *parent)
QMediaService::QMediaService	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^    QMediaService(QObject* parent);$/;"	prototype	class:QMediaService	access:protected	signature:(QObject* parent)
QMediaService::releaseControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^    virtual void releaseControl(QMediaControl *control) = 0;$/;"	prototype	class:QMediaService	access:public	signature:(QMediaControl *control)
QMediaService::requestControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^    template <typename T> inline T requestControl() {$/;"	function	class:QMediaService	access:public	signature:()
QMediaService::requestControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^    virtual QMediaControl* requestControl(const char *name) = 0;$/;"	prototype	class:QMediaService	access:public	signature:(const char *name)
QMediaService::~QMediaService	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^    ~QMediaService();$/;"	prototype	class:QMediaService	access:public	signature:()
QMediaServiceCameraInfoInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^struct Q_MULTIMEDIA_EXPORT QMediaServiceCameraInfoInterface$/;"	struct
QMediaServiceCameraInfoInterface::cameraOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual int cameraOrientation(const QByteArray &device) const = 0;$/;"	prototype	struct:QMediaServiceCameraInfoInterface	access:public	signature:(const QByteArray &device) const
QMediaServiceCameraInfoInterface::cameraPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QCamera::Position cameraPosition(const QByteArray &device) const = 0;$/;"	prototype	struct:QMediaServiceCameraInfoInterface	access:public	signature:(const QByteArray &device) const
QMediaServiceCameraInfoInterface::~QMediaServiceCameraInfoInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual ~QMediaServiceCameraInfoInterface() {}$/;"	function	struct:QMediaServiceCameraInfoInterface	access:public	signature:()
QMediaServiceDefaultDeviceInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^struct Q_MULTIMEDIA_EXPORT QMediaServiceDefaultDeviceInterface$/;"	struct
QMediaServiceDefaultDeviceInterface::defaultDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QByteArray defaultDevice(const QByteArray &service) const = 0;$/;"	prototype	struct:QMediaServiceDefaultDeviceInterface	access:public	signature:(const QByteArray &service) const
QMediaServiceDefaultDeviceInterface::~QMediaServiceDefaultDeviceInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual ~QMediaServiceDefaultDeviceInterface() {}$/;"	function	struct:QMediaServiceDefaultDeviceInterface	access:public	signature:()
QMediaServiceFeaturesInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^struct Q_MULTIMEDIA_EXPORT QMediaServiceFeaturesInterface$/;"	struct
QMediaServiceFeaturesInterface::supportedFeatures	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QMediaServiceProviderHint::Features supportedFeatures(const QByteArray &service) const = 0;$/;"	prototype	struct:QMediaServiceFeaturesInterface	access:public	signature:(const QByteArray &service) const
QMediaServiceFeaturesInterface::~QMediaServiceFeaturesInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual ~QMediaServiceFeaturesInterface() {}$/;"	function	struct:QMediaServiceFeaturesInterface	access:public	signature:()
QMediaServicePrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaservice_p.h	/^    QMediaServicePrivate(): q_ptr(0) {}$/;"	function	class:QMediaServicePrivate	access:public	signature:()
QMediaServicePrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaservice_p.h	/^class QMediaServicePrivate$/;"	class
QMediaServicePrivate::QMediaServicePrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaservice_p.h	/^    QMediaServicePrivate(): q_ptr(0) {}$/;"	function	class:QMediaServicePrivate	access:public	signature:()
QMediaServicePrivate::q_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaservice_p.h	/^    QMediaService *q_ptr;$/;"	member	class:QMediaServicePrivate	access:public
QMediaServicePrivate::~QMediaServicePrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaservice_p.h	/^    virtual ~QMediaServicePrivate() {}$/;"	function	class:QMediaServicePrivate	access:public	signature:()
QMediaServiceProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^class Q_MULTIMEDIA_EXPORT QMediaServiceProvider : public QObject$/;"	class	inherits:QObject
QMediaServiceProvider::cameraOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual int cameraOrientation(const QByteArray &device) const;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &device) const
QMediaServiceProvider::cameraPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QCamera::Position cameraPosition(const QByteArray &device) const;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &device) const
QMediaServiceProvider::defaultDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QByteArray defaultDevice(const QByteArray &serviceType) const;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &serviceType) const
QMediaServiceProvider::defaultServiceProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    static QMediaServiceProvider* defaultServiceProvider();$/;"	prototype	class:QMediaServiceProvider	access:public	signature:()
QMediaServiceProvider::deviceDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QString deviceDescription(const QByteArray &serviceType, const QByteArray &device);$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &serviceType, const QByteArray &device)
QMediaServiceProvider::devices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QList<QByteArray> devices(const QByteArray &serviceType) const;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &serviceType) const
QMediaServiceProvider::hasSupport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QMultimedia::SupportEstimate hasSupport(const QByteArray &serviceType,$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &serviceType, const QString &mimeType, const QStringList& codecs, int flags = 0) const
QMediaServiceProvider::releaseService	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual void releaseService(QMediaService *service) = 0;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(QMediaService *service)
QMediaServiceProvider::requestService	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QMediaService* requestService(const QByteArray &type, const QMediaServiceProviderHint &hint = QMediaServiceProviderHint()) = 0;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &type, const QMediaServiceProviderHint &hint = QMediaServiceProviderHint())
QMediaServiceProvider::setDefaultServiceProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    static void setDefaultServiceProvider(QMediaServiceProvider *provider);$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(QMediaServiceProvider *provider)
QMediaServiceProvider::supportedFeatures	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QMediaServiceProviderHint::Features supportedFeatures(const QMediaService *service) const;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QMediaService *service) const
QMediaServiceProvider::supportedMimeTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QStringList supportedMimeTypes(const QByteArray &serviceType, int flags = 0) const;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &serviceType, int flags = 0) const
QMediaServiceProviderFactoryInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^struct Q_MULTIMEDIA_EXPORT QMediaServiceProviderFactoryInterface$/;"	struct
QMediaServiceProviderFactoryInterface::create	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QMediaService* create(QString const& key) = 0;$/;"	prototype	struct:QMediaServiceProviderFactoryInterface	access:public	signature:(QString const& key)
QMediaServiceProviderFactoryInterface::release	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual void release(QMediaService *service) = 0;$/;"	prototype	struct:QMediaServiceProviderFactoryInterface	access:public	signature:(QMediaService *service)
QMediaServiceProviderFactoryInterface::~QMediaServiceProviderFactoryInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual ~QMediaServiceProviderFactoryInterface();$/;"	prototype	struct:QMediaServiceProviderFactoryInterface	access:public	signature:()
QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaServiceProviderHint();$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:()
QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaServiceProviderHint(const QByteArray &device);$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(const QByteArray &device)
QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaServiceProviderHint(const QMediaServiceProviderHint &other);$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(const QMediaServiceProviderHint &other)
QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaServiceProviderHint(const QString &mimeType, const QStringList& codecs);$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(const QString &mimeType, const QStringList& codecs)
QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaServiceProviderHint(Features features);$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(Features features)
QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaServiceProviderHint(QCamera::Position position);$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(QCamera::Position position)
QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^class Q_MULTIMEDIA_EXPORT QMediaServiceProviderHint$/;"	class
QMediaServiceProviderHint::CameraPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    enum Type { Null, ContentType, Device, SupportedFeatures, CameraPosition };$/;"	enumerator	enum:QMediaServiceProviderHint::Type
QMediaServiceProviderHint::cameraPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QCamera::Position cameraPosition() const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:() const
QMediaServiceProviderHint::codecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QStringList codecs() const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:() const
QMediaServiceProviderHint::ContentType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    enum Type { Null, ContentType, Device, SupportedFeatures, CameraPosition };$/;"	enumerator	enum:QMediaServiceProviderHint::Type
QMediaServiceProviderHint::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QSharedDataPointer<QMediaServiceProviderHintPrivate> d;$/;"	member	class:QMediaServiceProviderHint	access:private
QMediaServiceProviderHint::Device	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    enum Type { Null, ContentType, Device, SupportedFeatures, CameraPosition };$/;"	enumerator	enum:QMediaServiceProviderHint::Type
QMediaServiceProviderHint::device	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QByteArray device() const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:() const
QMediaServiceProviderHint::Feature	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    enum Feature {$/;"	enum	class:QMediaServiceProviderHint	access:public
QMediaServiceProviderHint::features	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    Features features() const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:() const
QMediaServiceProviderHint::isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    bool isNull() const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:() const
QMediaServiceProviderHint::LowLatencyPlayback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^        LowLatencyPlayback = 0x01,$/;"	enumerator	enum:QMediaServiceProviderHint::Feature
QMediaServiceProviderHint::mimeType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QString mimeType() const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:() const
QMediaServiceProviderHint::Null	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    enum Type { Null, ContentType, Device, SupportedFeatures, CameraPosition };$/;"	enumerator	enum:QMediaServiceProviderHint::Type
QMediaServiceProviderHint::operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    bool operator != (const QMediaServiceProviderHint &other) const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(const QMediaServiceProviderHint &other) const
QMediaServiceProviderHint::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaServiceProviderHint& operator=(const QMediaServiceProviderHint &other);$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(const QMediaServiceProviderHint &other)
QMediaServiceProviderHint::operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    bool operator == (const QMediaServiceProviderHint &other) const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(const QMediaServiceProviderHint &other) const
QMediaServiceProviderHint::QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaServiceProviderHint();$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:()
QMediaServiceProviderHint::QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaServiceProviderHint(const QByteArray &device);$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(const QByteArray &device)
QMediaServiceProviderHint::QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaServiceProviderHint(const QMediaServiceProviderHint &other);$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(const QMediaServiceProviderHint &other)
QMediaServiceProviderHint::QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaServiceProviderHint(const QString &mimeType, const QStringList& codecs);$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(const QString &mimeType, const QStringList& codecs)
QMediaServiceProviderHint::QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaServiceProviderHint(Features features);$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(Features features)
QMediaServiceProviderHint::QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaServiceProviderHint(QCamera::Position position);$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:(QCamera::Position position)
QMediaServiceProviderHint::RecordingSupport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^        RecordingSupport = 0x02,$/;"	enumerator	enum:QMediaServiceProviderHint::Feature
QMediaServiceProviderHint::StreamPlayback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^        StreamPlayback = 0x04,$/;"	enumerator	enum:QMediaServiceProviderHint::Feature
QMediaServiceProviderHint::SupportedFeatures	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    enum Type { Null, ContentType, Device, SupportedFeatures, CameraPosition };$/;"	enumerator	enum:QMediaServiceProviderHint::Type
QMediaServiceProviderHint::Type	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    enum Type { Null, ContentType, Device, SupportedFeatures, CameraPosition };$/;"	enum	class:QMediaServiceProviderHint	access:public
QMediaServiceProviderHint::type	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    Type type() const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:() const
QMediaServiceProviderHint::VideoSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^        VideoSurface = 0x08$/;"	enumerator	enum:QMediaServiceProviderHint::Feature
QMediaServiceProviderHint::~QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    ~QMediaServiceProviderHint();$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:()
QMediaServiceProviderPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^class Q_MULTIMEDIA_EXPORT QMediaServiceProviderPlugin : public QObject, public QMediaServiceProviderFactoryInterface$/;"	class	inherits:QObject,QMediaServiceProviderFactoryInterface
QMediaServiceProviderPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    QMediaService* create(const QString& key) override = 0;$/;"	member	class:QMediaServiceProviderPlugin	access:public
QMediaServiceProviderPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    void release(QMediaService *service) override = 0;$/;"	member	class:QMediaServiceProviderPlugin	access:public
QMediaServiceSupportedDevicesInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^struct Q_MULTIMEDIA_EXPORT QMediaServiceSupportedDevicesInterface$/;"	struct
QMediaServiceSupportedDevicesInterface::deviceDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QString deviceDescription(const QByteArray &service, const QByteArray &device) = 0;$/;"	prototype	struct:QMediaServiceSupportedDevicesInterface	access:public	signature:(const QByteArray &service, const QByteArray &device)
QMediaServiceSupportedDevicesInterface::devices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QList<QByteArray> devices(const QByteArray &service) const = 0;$/;"	prototype	struct:QMediaServiceSupportedDevicesInterface	access:public	signature:(const QByteArray &service) const
QMediaServiceSupportedDevicesInterface::~QMediaServiceSupportedDevicesInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual ~QMediaServiceSupportedDevicesInterface() {}$/;"	function	struct:QMediaServiceSupportedDevicesInterface	access:public	signature:()
QMediaServiceSupportedFormatsInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^struct Q_MULTIMEDIA_EXPORT QMediaServiceSupportedFormatsInterface$/;"	struct
QMediaServiceSupportedFormatsInterface::hasSupport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QMultimedia::SupportEstimate hasSupport(const QString &mimeType, const QStringList& codecs) const = 0;$/;"	prototype	struct:QMediaServiceSupportedFormatsInterface	access:public	signature:(const QString &mimeType, const QStringList& codecs) const
QMediaServiceSupportedFormatsInterface::supportedMimeTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QStringList supportedMimeTypes() const = 0;$/;"	prototype	struct:QMediaServiceSupportedFormatsInterface	access:public	signature:() const
QMediaServiceSupportedFormatsInterface::~QMediaServiceSupportedFormatsInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual ~QMediaServiceSupportedFormatsInterface() {}$/;"	function	struct:QMediaServiceSupportedFormatsInterface	access:public	signature:()
QMediaStorageLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    QMediaStorageLocation();$/;"	prototype	class:QMediaStorageLocation	access:public	signature:()
QMediaStorageLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^class Q_MULTIMEDIA_EXPORT QMediaStorageLocation$/;"	class
QMediaStorageLocation::addStorageLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    void addStorageLocation(MediaType type, const QString &location);$/;"	prototype	class:QMediaStorageLocation	access:public	signature:(MediaType type, const QString &location)
QMediaStorageLocation::defaultLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    QDir defaultLocation(MediaType type) const;$/;"	prototype	class:QMediaStorageLocation	access:public	signature:(MediaType type) const
QMediaStorageLocation::generateFileName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    QString generateFileName(const QString &prefix, const QDir &dir, const QString &extension) const;$/;"	prototype	class:QMediaStorageLocation	access:public	signature:(const QString &prefix, const QDir &dir, const QString &extension) const
QMediaStorageLocation::generateFileName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    QString generateFileName(const QString &requestedName, MediaType type, const QString &prefix, const QString &extension) const;$/;"	prototype	class:QMediaStorageLocation	access:public	signature:(const QString &requestedName, MediaType type, const QString &prefix, const QString &extension) const
QMediaStorageLocation::MediaType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    enum MediaType {$/;"	enum	class:QMediaStorageLocation	access:public
QMediaStorageLocation::Movies	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^        Movies,$/;"	enumerator	enum:QMediaStorageLocation::MediaType
QMediaStorageLocation::Music	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^        Music,$/;"	enumerator	enum:QMediaStorageLocation::MediaType
QMediaStorageLocation::m_customLocations	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    QMap<MediaType, QStringList> m_customLocations;$/;"	member	class:QMediaStorageLocation	access:private
QMediaStorageLocation::m_lastUsedIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    mutable QHash<QString, qint64> m_lastUsedIndex;$/;"	member	class:QMediaStorageLocation	access:private
QMediaStorageLocation::m_mutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    mutable QMutex m_mutex;$/;"	member	class:QMediaStorageLocation	access:private
QMediaStorageLocation::Pictures	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^        Pictures,$/;"	enumerator	enum:QMediaStorageLocation::MediaType
QMediaStorageLocation::QMediaStorageLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^    QMediaStorageLocation();$/;"	prototype	class:QMediaStorageLocation	access:public	signature:()
QMediaStorageLocation::Sounds	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^        Sounds$/;"	enumerator	enum:QMediaStorageLocation::MediaType
QMediaStreamsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    explicit QMediaStreamsControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaStreamsControl	access:protected	signature:(QObject *parent = nullptr)
QMediaStreamsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^class Q_MULTIMEDIA_EXPORT QMediaStreamsControl : public QMediaControl$/;"	class	inherits:QMediaControl
QMediaStreamsControl::activeStreamsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    void activeStreamsChanged();$/;"	prototype	class:QMediaStreamsControl	access:public	signature:()
QMediaStreamsControl::AudioStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    enum StreamType { UnknownStream, VideoStream, AudioStream, SubPictureStream, DataStream };$/;"	enumerator	enum:QMediaStreamsControl::StreamType
QMediaStreamsControl::DataStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    enum StreamType { UnknownStream, VideoStream, AudioStream, SubPictureStream, DataStream };$/;"	enumerator	enum:QMediaStreamsControl::StreamType
QMediaStreamsControl::isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    virtual bool isActive(int streamNumber) = 0;$/;"	prototype	class:QMediaStreamsControl	access:public	signature:(int streamNumber)
QMediaStreamsControl::metaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    virtual QVariant metaData(int streamNumber, const QString &key) = 0;$/;"	prototype	class:QMediaStreamsControl	access:public	signature:(int streamNumber, const QString &key)
QMediaStreamsControl::QMediaStreamsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    explicit QMediaStreamsControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaStreamsControl	access:protected	signature:(QObject *parent = nullptr)
QMediaStreamsControl::setActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    virtual void setActive(int streamNumber, bool state) = 0;$/;"	prototype	class:QMediaStreamsControl	access:public	signature:(int streamNumber, bool state)
QMediaStreamsControl::streamCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    virtual int streamCount() = 0;$/;"	prototype	class:QMediaStreamsControl	access:public	signature:()
QMediaStreamsControl::streamsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    void streamsChanged();$/;"	prototype	class:QMediaStreamsControl	access:public	signature:()
QMediaStreamsControl::StreamType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    enum StreamType { UnknownStream, VideoStream, AudioStream, SubPictureStream, DataStream };$/;"	enum	class:QMediaStreamsControl	access:public
QMediaStreamsControl::streamType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    virtual StreamType streamType(int streamNumber) = 0;$/;"	prototype	class:QMediaStreamsControl	access:public	signature:(int streamNumber)
QMediaStreamsControl::SubPictureStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    enum StreamType { UnknownStream, VideoStream, AudioStream, SubPictureStream, DataStream };$/;"	enumerator	enum:QMediaStreamsControl::StreamType
QMediaStreamsControl::UnknownStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    enum StreamType { UnknownStream, VideoStream, AudioStream, SubPictureStream, DataStream };$/;"	enumerator	enum:QMediaStreamsControl::StreamType
QMediaStreamsControl::VideoStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    enum StreamType { UnknownStream, VideoStream, AudioStream, SubPictureStream, DataStream };$/;"	enumerator	enum:QMediaStreamsControl::StreamType
QMediaStreamsControl::~QMediaStreamsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    virtual ~QMediaStreamsControl();$/;"	prototype	class:QMediaStreamsControl	access:public	signature:()
QMediaTimeInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeInterval();$/;"	prototype	class:QMediaTimeInterval	access:public	signature:()
QMediaTimeInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeInterval(const QMediaTimeInterval&);$/;"	prototype	class:QMediaTimeInterval	access:public	signature:(const QMediaTimeInterval&)
QMediaTimeInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeInterval(qint64 start, qint64 end);$/;"	prototype	class:QMediaTimeInterval	access:public	signature:(qint64 start, qint64 end)
QMediaTimeInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^class Q_MULTIMEDIA_EXPORT QMediaTimeInterval$/;"	class
QMediaTimeInterval::contains	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    bool contains(qint64 time) const;$/;"	prototype	class:QMediaTimeInterval	access:public	signature:(qint64 time) const
QMediaTimeInterval::e	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    qint64 e;$/;"	member	class:QMediaTimeInterval	access:private
QMediaTimeInterval::end	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    qint64 end() const;$/;"	prototype	class:QMediaTimeInterval	access:public	signature:() const
QMediaTimeInterval::isNormal	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    bool isNormal() const;$/;"	prototype	class:QMediaTimeInterval	access:public	signature:() const
QMediaTimeInterval::normalized	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeInterval normalized() const;$/;"	prototype	class:QMediaTimeInterval	access:public	signature:() const
QMediaTimeInterval::QMediaTimeInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeInterval();$/;"	prototype	class:QMediaTimeInterval	access:public	signature:()
QMediaTimeInterval::QMediaTimeInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeInterval(const QMediaTimeInterval&);$/;"	prototype	class:QMediaTimeInterval	access:public	signature:(const QMediaTimeInterval&)
QMediaTimeInterval::QMediaTimeInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeInterval(qint64 start, qint64 end);$/;"	prototype	class:QMediaTimeInterval	access:public	signature:(qint64 start, qint64 end)
QMediaTimeInterval::s	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    qint64 s;$/;"	member	class:QMediaTimeInterval	access:private
QMediaTimeInterval::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    qint64 start() const;$/;"	prototype	class:QMediaTimeInterval	access:public	signature:() const
QMediaTimeInterval::translated	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeInterval translated(qint64 offset) const;$/;"	prototype	class:QMediaTimeInterval	access:public	signature:(qint64 offset) const
QMediaTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange();$/;"	prototype	class:QMediaTimeRange	access:public	signature:()
QMediaTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange(const QMediaTimeInterval&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeInterval&)
QMediaTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange(const QMediaTimeRange &range);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeRange &range)
QMediaTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange(qint64 start, qint64 end);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(qint64 start, qint64 end)
QMediaTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^class Q_MULTIMEDIA_EXPORT QMediaTimeRange$/;"	class
QMediaTimeRange::addInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    void addInterval(const QMediaTimeInterval &interval);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeInterval &interval)
QMediaTimeRange::addInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    void addInterval(qint64 start, qint64 end);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(qint64 start, qint64 end)
QMediaTimeRange::addTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    void addTimeRange(const QMediaTimeRange&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeRange&)
QMediaTimeRange::clear	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    void clear();$/;"	prototype	class:QMediaTimeRange	access:public	signature:()
QMediaTimeRange::contains	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    bool contains(qint64 time) const;$/;"	prototype	class:QMediaTimeRange	access:public	signature:(qint64 time) const
QMediaTimeRange::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QSharedDataPointer<QMediaTimeRangePrivate> d;$/;"	member	class:QMediaTimeRange	access:private
QMediaTimeRange::earliestTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    qint64 earliestTime() const;$/;"	prototype	class:QMediaTimeRange	access:public	signature:() const
QMediaTimeRange::intervals	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QList<QMediaTimeInterval> intervals() const;$/;"	prototype	class:QMediaTimeRange	access:public	signature:() const
QMediaTimeRange::isContinuous	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    bool isContinuous() const;$/;"	prototype	class:QMediaTimeRange	access:public	signature:() const
QMediaTimeRange::isEmpty	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    bool isEmpty() const;$/;"	prototype	class:QMediaTimeRange	access:public	signature:() const
QMediaTimeRange::latestTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    qint64 latestTime() const;$/;"	prototype	class:QMediaTimeRange	access:public	signature:() const
QMediaTimeRange::operator +=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange& operator+=(const QMediaTimeInterval&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeInterval&)
QMediaTimeRange::operator +=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange& operator+=(const QMediaTimeRange&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeRange&)
QMediaTimeRange::operator -=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange& operator-=(const QMediaTimeInterval&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeInterval&)
QMediaTimeRange::operator -=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange& operator-=(const QMediaTimeRange&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeRange&)
QMediaTimeRange::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange &operator=(const QMediaTimeInterval&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeInterval&)
QMediaTimeRange::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange &operator=(const QMediaTimeRange&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeRange&)
QMediaTimeRange::QMediaTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange();$/;"	prototype	class:QMediaTimeRange	access:public	signature:()
QMediaTimeRange::QMediaTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange(const QMediaTimeInterval&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeInterval&)
QMediaTimeRange::QMediaTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange(const QMediaTimeRange &range);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeRange &range)
QMediaTimeRange::QMediaTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeRange(qint64 start, qint64 end);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(qint64 start, qint64 end)
QMediaTimeRange::removeInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    void removeInterval(const QMediaTimeInterval &interval);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeInterval &interval)
QMediaTimeRange::removeInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    void removeInterval(qint64 start, qint64 end);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(qint64 start, qint64 end)
QMediaTimeRange::removeTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    void removeTimeRange(const QMediaTimeRange&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeRange&)
QMediaTimeRange::~QMediaTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    ~QMediaTimeRange();$/;"	prototype	class:QMediaTimeRange	access:public	signature:()
QMediaVideoProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediavideoprobecontrol.h	/^    explicit QMediaVideoProbeControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaVideoProbeControl	access:protected	signature:(QObject *parent = nullptr)
QMediaVideoProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediavideoprobecontrol.h	/^class Q_MULTIMEDIA_EXPORT QMediaVideoProbeControl : public QMediaControl$/;"	class	inherits:QMediaControl
QMediaVideoProbeControl::flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediavideoprobecontrol.h	/^    void flush();$/;"	prototype	class:QMediaVideoProbeControl	access:public	signature:()
QMediaVideoProbeControl::QMediaVideoProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediavideoprobecontrol.h	/^    explicit QMediaVideoProbeControl(QObject *parent = nullptr);$/;"	prototype	class:QMediaVideoProbeControl	access:protected	signature:(QObject *parent = nullptr)
QMediaVideoProbeControl::videoFrameProbed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediavideoprobecontrol.h	/^    void videoFrameProbed(const QVideoFrame &frame);$/;"	prototype	class:QMediaVideoProbeControl	access:public	signature:(const QVideoFrame &frame)
QMediaVideoProbeControl::~QMediaVideoProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediavideoprobecontrol.h	/^    virtual ~QMediaVideoProbeControl();$/;"	prototype	class:QMediaVideoProbeControl	access:public	signature:()
QMemoryVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmemoryvideobuffer_p.h	/^    QMemoryVideoBuffer(const QByteArray &data, int bytesPerLine);$/;"	prototype	class:QMemoryVideoBuffer	access:public	signature:(const QByteArray &data, int bytesPerLine)
QMemoryVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmemoryvideobuffer_p.h	/^class Q_MULTIMEDIA_EXPORT QMemoryVideoBuffer : public QAbstractVideoBuffer$/;"	class	inherits:QAbstractVideoBuffer
QMemoryVideoBuffer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmemoryvideobuffer_p.h	/^    MapMode mapMode() const override;$/;"	member	class:QMemoryVideoBuffer	access:public
QMemoryVideoBuffer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmemoryvideobuffer_p.h	/^    uchar *map(MapMode mode, int *numBytes, int *bytesPerLine) override;$/;"	member	class:QMemoryVideoBuffer	access:public
QMemoryVideoBuffer::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmemoryvideobuffer_p.h	/^    void unmap() override;$/;"	member	class:QMemoryVideoBuffer	access:public
QMemoryVideoBuffer::QMemoryVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmemoryvideobuffer_p.h	/^    QMemoryVideoBuffer(const QByteArray &data, int bytesPerLine);$/;"	prototype	class:QMemoryVideoBuffer	access:public	signature:(const QByteArray &data, int bytesPerLine)
QMemoryVideoBuffer::~QMemoryVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmemoryvideobuffer_p.h	/^    ~QMemoryVideoBuffer();$/;"	prototype	class:QMemoryVideoBuffer	access:public	signature:()
QMetaDataReaderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    explicit QMetaDataReaderControl(QObject *parent = nullptr);$/;"	prototype	class:QMetaDataReaderControl	access:protected	signature:(QObject *parent = nullptr)
QMetaDataReaderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^class Q_MULTIMEDIA_EXPORT QMetaDataReaderControl : public QMediaControl$/;"	class	inherits:QMediaControl
QMetaDataReaderControl::availableMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    virtual QStringList availableMetaData() const = 0;$/;"	prototype	class:QMetaDataReaderControl	access:public	signature:() const
QMetaDataReaderControl::isMetaDataAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    virtual bool isMetaDataAvailable() const = 0;$/;"	prototype	class:QMetaDataReaderControl	access:public	signature:() const
QMetaDataReaderControl::metaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    virtual QVariant metaData(const QString &key) const = 0;$/;"	prototype	class:QMetaDataReaderControl	access:public	signature:(const QString &key) const
QMetaDataReaderControl::metaDataAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    void metaDataAvailableChanged(bool available);$/;"	prototype	class:QMetaDataReaderControl	access:public	signature:(bool available)
QMetaDataReaderControl::metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    void metaDataChanged();$/;"	prototype	class:QMetaDataReaderControl	access:public	signature:()
QMetaDataReaderControl::metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    void metaDataChanged(const QString &key, const QVariant &value);$/;"	prototype	class:QMetaDataReaderControl	access:public	signature:(const QString &key, const QVariant &value)
QMetaDataReaderControl::QMetaDataReaderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    explicit QMetaDataReaderControl(QObject *parent = nullptr);$/;"	prototype	class:QMetaDataReaderControl	access:protected	signature:(QObject *parent = nullptr)
QMetaDataReaderControl::~QMetaDataReaderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    ~QMetaDataReaderControl();$/;"	prototype	class:QMetaDataReaderControl	access:public	signature:()
QMetaDataWriterControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    explicit QMetaDataWriterControl(QObject *parent = nullptr);$/;"	prototype	class:QMetaDataWriterControl	access:protected	signature:(QObject *parent = nullptr)
QMetaDataWriterControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^class Q_MULTIMEDIA_EXPORT QMetaDataWriterControl : public QMediaControl$/;"	class	inherits:QMediaControl
QMetaDataWriterControl::availableMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    virtual QStringList availableMetaData() const = 0;$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:() const
QMetaDataWriterControl::isMetaDataAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    virtual bool isMetaDataAvailable() const = 0;$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:() const
QMetaDataWriterControl::isWritable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    virtual bool isWritable() const = 0;$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:() const
QMetaDataWriterControl::metaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    virtual QVariant metaData(const QString &key) const = 0;$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:(const QString &key) const
QMetaDataWriterControl::metaDataAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    void metaDataAvailableChanged(bool available);$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:(bool available)
QMetaDataWriterControl::metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    void metaDataChanged();$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:()
QMetaDataWriterControl::metaDataChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    void metaDataChanged(const QString &key, const QVariant &value);$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:(const QString &key, const QVariant &value)
QMetaDataWriterControl::QMetaDataWriterControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    explicit QMetaDataWriterControl(QObject *parent = nullptr);$/;"	prototype	class:QMetaDataWriterControl	access:protected	signature:(QObject *parent = nullptr)
QMetaDataWriterControl::setMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    virtual void setMetaData(const QString &key, const QVariant &value) = 0;$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:(const QString &key, const QVariant &value)
QMetaDataWriterControl::writableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    void writableChanged(bool writable);$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:(bool writable)
QMetaDataWriterControl::~QMetaDataWriterControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    ~QMetaDataWriterControl();$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:()
QMultimedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^namespace QMultimedia$/;"	namespace
QMultimedia::AvailabilityStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^    enum AvailabilityStatus$/;"	enum	namespace:QMultimedia
QMultimedia::Available	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        Available,$/;"	enumerator	enum:QMultimedia::AvailabilityStatus
QMultimedia::AverageBitRateEncoding	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        AverageBitRateEncoding,$/;"	enumerator	enum:QMultimedia::EncodingMode
QMultimedia::Busy	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        Busy,$/;"	enumerator	enum:QMultimedia::AvailabilityStatus
QMultimedia::ConstantBitRateEncoding	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        ConstantBitRateEncoding,$/;"	enumerator	enum:QMultimedia::EncodingMode
QMultimedia::ConstantQualityEncoding	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        ConstantQualityEncoding,$/;"	enumerator	enum:QMultimedia::EncodingMode
QMultimedia::EncodingMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^    enum EncodingMode$/;"	enum	namespace:QMultimedia
QMultimedia::EncodingQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^    enum EncodingQuality$/;"	enum	namespace:QMultimedia
QMultimedia::HighQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        HighQuality,$/;"	enumerator	enum:QMultimedia::EncodingQuality
QMultimedia::LowQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        LowQuality,$/;"	enumerator	enum:QMultimedia::EncodingQuality
QMultimedia::MaybeSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        MaybeSupported,$/;"	enumerator	enum:QMultimedia::SupportEstimate
QMultimedia::NormalQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        NormalQuality,$/;"	enumerator	enum:QMultimedia::EncodingQuality
QMultimedia::NotSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        NotSupported,$/;"	enumerator	enum:QMultimedia::SupportEstimate
QMultimedia::PreferredService	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        PreferredService$/;"	enumerator	enum:QMultimedia::SupportEstimate
QMultimedia::ProbablySupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        ProbablySupported,$/;"	enumerator	enum:QMultimedia::SupportEstimate
QMultimedia::ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        ResourceError$/;"	enumerator	enum:QMultimedia::AvailabilityStatus
QMultimedia::ServiceMissing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        ServiceMissing,$/;"	enumerator	enum:QMultimedia::AvailabilityStatus
QMultimedia::SupportEstimate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^    enum SupportEstimate$/;"	enum	namespace:QMultimedia
QMultimedia::TwoPassEncoding	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        TwoPassEncoding$/;"	enumerator	enum:QMultimedia::EncodingMode
QMultimedia::VeryHighQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        VeryHighQuality$/;"	enumerator	enum:QMultimedia::EncodingQuality
QMultimedia::VeryLowQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        VeryLowQuality,$/;"	enumerator	enum:QMultimedia::EncodingQuality
qMultiplySamples	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiohelpers_p.h	/^Q_MULTIMEDIA_EXPORT void qMultiplySamples(qreal factor, const QAudioFormat& format, const void *src, void* dest, int len);$/;"	prototype	namespace:QAudioHelperInternal	signature:(qreal factor, const QAudioFormat& format, const void *src, void* dest, int len)
qNormalizedOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^inline int qNormalizedOrientation(int o)$/;"	function	namespace:__anon1	signature:(int o)
QPixmapHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        QPixmapHandle,$/;"	enumerator	enum:QAbstractVideoBuffer::HandleType
QPlaylistFileParser	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    QPlaylistFileParser(QObject *parent = 0);$/;"	prototype	class:QPlaylistFileParser	access:public	signature:(QObject *parent = 0)
QPlaylistFileParser	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^class Q_MULTIMEDIA_EXPORT QPlaylistFileParser : public QObject$/;"	class	inherits:QObject
QPlaylistFileParser::abort	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void abort();$/;"	prototype	class:QPlaylistFileParser	access:public	signature:()
QPlaylistFileParser::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    QScopedPointer<QPlaylistFileParserPrivate> d_ptr;$/;"	member	class:QPlaylistFileParser	access:private
QPlaylistFileParser::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void error(QPlaylistFileParser::ParserError err, const QString& errorMsg);$/;"	prototype	class:QPlaylistFileParser	access:public	signature:(QPlaylistFileParser::ParserError err, const QString& errorMsg)
QPlaylistFileParser::FileType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    enum FileType$/;"	enum	class:QPlaylistFileParser	access:public
QPlaylistFileParser::findByDataHeader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    static FileType findByDataHeader(const char *data, quint32 size);$/;"	prototype	class:QPlaylistFileParser	access:private	signature:(const char *data, quint32 size)
QPlaylistFileParser::findByMimeType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    static FileType findByMimeType(const QString &mime);$/;"	prototype	class:QPlaylistFileParser	access:private	signature:(const QString &mime)
QPlaylistFileParser::findBySuffixType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    static FileType findBySuffixType(const QString &suffix);$/;"	prototype	class:QPlaylistFileParser	access:private	signature:(const QString &suffix)
QPlaylistFileParser::findPlaylistType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    static FileType findPlaylistType(const QString &suffix,$/;"	prototype	class:QPlaylistFileParser	access:private	signature:(const QString &suffix, const QString& mime, const char *data = 0, quint32 size = 0)
QPlaylistFileParser::findPlaylistType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    static FileType findPlaylistType(QIODevice *device,$/;"	prototype	class:QPlaylistFileParser	access:private	signature:(QIODevice *device, const QString& mime)
QPlaylistFileParser::finished	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void finished();$/;"	prototype	class:QPlaylistFileParser	access:public	signature:()
QPlaylistFileParser::FormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        FormatError,$/;"	enumerator	enum:QPlaylistFileParser::ParserError
QPlaylistFileParser::FormatNotSupportedError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        FormatNotSupportedError,$/;"	enumerator	enum:QPlaylistFileParser::ParserError
QPlaylistFileParser::handleData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void handleData();$/;"	prototype	class:QPlaylistFileParser	access:private	signature:()
QPlaylistFileParser::handleError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void handleError();$/;"	prototype	class:QPlaylistFileParser	access:private	signature:()
QPlaylistFileParser::M3U	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        M3U,$/;"	enumerator	enum:QPlaylistFileParser::FileType
QPlaylistFileParser::M3U8	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        M3U8, \/\/ UTF-8 version of M3U$/;"	enumerator	enum:QPlaylistFileParser::FileType
QPlaylistFileParser::NetworkError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        NetworkError$/;"	enumerator	enum:QPlaylistFileParser::ParserError
QPlaylistFileParser::newItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void newItem(const QVariant& content);$/;"	prototype	class:QPlaylistFileParser	access:public	signature:(const QVariant& content)
QPlaylistFileParser::NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        NoError,$/;"	enumerator	enum:QPlaylistFileParser::ParserError
QPlaylistFileParser::ParserError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    enum ParserError$/;"	enum	class:QPlaylistFileParser	access:public
QPlaylistFileParser::PLS	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        PLS$/;"	enumerator	enum:QPlaylistFileParser::FileType
QPlaylistFileParser::QPlaylistFileParser	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    QPlaylistFileParser(QObject *parent = 0);$/;"	prototype	class:QPlaylistFileParser	access:public	signature:(QObject *parent = 0)
QPlaylistFileParser::ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        ResourceError,$/;"	enumerator	enum:QPlaylistFileParser::ParserError
QPlaylistFileParser::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void start(const QMediaContent &media, QIODevice *stream = 0);$/;"	prototype	class:QPlaylistFileParser	access:public	signature:(const QMediaContent &media, QIODevice *stream = 0)
QPlaylistFileParser::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void start(const QNetworkRequest &request, const QString &mimeType = QString());$/;"	prototype	class:QPlaylistFileParser	access:public	signature:(const QNetworkRequest &request, const QString &mimeType = QString())
QPlaylistFileParser::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void start(QIODevice *stream, const QString &mimeType = QString());$/;"	prototype	class:QPlaylistFileParser	access:private	signature:(QIODevice *stream, const QString &mimeType = QString())
QPlaylistFileParser::UNKNOWN	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        UNKNOWN,$/;"	enumerator	enum:QPlaylistFileParser::FileType
QPlaylistFileParser::~QPlaylistFileParser	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    ~QPlaylistFileParser();$/;"	prototype	class:QPlaylistFileParser	access:public	signature:()
QRadioData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    explicit QRadioData(QMediaObject *mediaObject, QObject *parent = nullptr);$/;"	prototype	class:QRadioData	access:public	signature:(QMediaObject *mediaObject, QObject *parent = nullptr)
QRadioData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^class Q_MULTIMEDIA_EXPORT QRadioData : public QObject, public QMediaBindableInterface$/;"	class	inherits:QObject,QMediaBindableInterface
QRadioData::AdultHits	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        AlarmTest, Alarm, Talk, ClassicRock, AdultHits,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Alarm	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        AlarmTest, Alarm, Talk, ClassicRock, AdultHits,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::AlarmTest	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        AlarmTest, Alarm, Talk, ClassicRock, AdultHits,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::alternativeFrequenciesEnabledChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void alternativeFrequenciesEnabledChanged(bool enabled);$/;"	prototype	class:QRadioData	access:public	signature:(bool enabled)
QRadioData::availability	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QMultimedia::AvailabilityStatus availability() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
QRadioData::ChildrensProgrammes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        ChildrensProgrammes, SocialAffairs, Religion,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Classical	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SoftRock, Top40, Soft, Nostalgia, Classical,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::ClassicRock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        AlarmTest, Alarm, Talk, ClassicRock, AdultHits,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::College	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        College$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::CountryMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PhoneIn, Travel, Leisure, JazzMusic, CountryMusic,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Culture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        Sport, Education, Drama, Culture, Science, Varied,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::CurrentAffairs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum ProgramType { Undefined = 0, News, CurrentAffairs, Information,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Documentary	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        NationalMusic, OldiesMusic, FolkMusic, Documentary,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Drama	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        Sport, Education, Drama, Culture, Science, Varied,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::d_func	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    Q_PRIVATE_SLOT(d_func(), void _q_serviceDestroyed())$/;"	prototype	class:QRadioData	access:private	signature:()
QRadioData::d_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QRadioDataPrivate *d_ptr;$/;"	member	class:QRadioData	access:protected
QRadioData::EasyListening	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PopMusic, RockMusic, EasyListening, LightClassical,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Education	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        Sport, Education, Drama, Culture, Science, Varied,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enum	class:QRadioData	access:public
QRadioData::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    Error error() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
QRadioData::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void error(QRadioData::Error error);$/;"	prototype	class:QRadioData	access:public	signature:(QRadioData::Error error)
QRadioData::errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QString errorString() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
QRadioData::Finance	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SeriousClassical, OtherMusic, Weather, Finance,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::FolkMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        NationalMusic, OldiesMusic, FolkMusic, Documentary,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Information	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum ProgramType { Undefined = 0, News, CurrentAffairs, Information,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::isAlternativeFrequenciesEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    bool isAlternativeFrequenciesEnabled() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
QRadioData::JazzMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PhoneIn, Travel, Leisure, JazzMusic, CountryMusic,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Language	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        RhythmAndBlues, SoftRhythmAndBlues, Language,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Leisure	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PhoneIn, Travel, Leisure, JazzMusic, CountryMusic,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::LightClassical	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PopMusic, RockMusic, EasyListening, LightClassical,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::NationalMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        NationalMusic, OldiesMusic, FolkMusic, Documentary,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::News	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum ProgramType { Undefined = 0, News, CurrentAffairs, Information,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioData::Error
QRadioData::Nostalgia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SoftRock, Top40, Soft, Nostalgia, Classical,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::OldiesMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        NationalMusic, OldiesMusic, FolkMusic, Documentary,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::OpenError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioData::Error
QRadioData::OtherMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SeriousClassical, OtherMusic, Weather, Finance,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::OutOfRangeError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioData::Error
QRadioData::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    bool setMediaObject(QMediaObject *) override;$/;"	member	class:QRadioData	access:protected
QRadioData::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QMediaObject *mediaObject() const override;$/;"	member	class:QRadioData	access:public
QRadioData::Personality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        ReligiousMusic, ReligiousTalk, Personality, Public,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::PhoneIn	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PhoneIn, Travel, Leisure, JazzMusic, CountryMusic,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::PopMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PopMusic, RockMusic, EasyListening, LightClassical,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::ProgramType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum ProgramType { Undefined = 0, News, CurrentAffairs, Information,$/;"	enum	class:QRadioData	access:public
QRadioData::programType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    ProgramType programType() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
QRadioData::programTypeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void programTypeChanged(QRadioData::ProgramType programType);$/;"	prototype	class:QRadioData	access:public	signature:(QRadioData::ProgramType programType)
QRadioData::programTypeName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QString programTypeName() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
QRadioData::programTypeNameChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void programTypeNameChanged(QString programTypeName);$/;"	prototype	class:QRadioData	access:public	signature:(QString programTypeName)
QRadioData::Public	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        ReligiousMusic, ReligiousTalk, Personality, Public,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::QRadioData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    explicit QRadioData(QMediaObject *mediaObject, QObject *parent = nullptr);$/;"	prototype	class:QRadioData	access:public	signature:(QMediaObject *mediaObject, QObject *parent = nullptr)
QRadioData::radioText	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QString radioText() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
QRadioData::radioTextChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void radioTextChanged(QString radioText);$/;"	prototype	class:QRadioData	access:public	signature:(QString radioText)
QRadioData::Religion	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        ChildrensProgrammes, SocialAffairs, Religion,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::ReligiousMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        ReligiousMusic, ReligiousTalk, Personality, Public,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::ReligiousTalk	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        ReligiousMusic, ReligiousTalk, Personality, Public,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioData::Error
QRadioData::RhythmAndBlues	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        RhythmAndBlues, SoftRhythmAndBlues, Language,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::RockMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PopMusic, RockMusic, EasyListening, LightClassical,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Science	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        Sport, Education, Drama, Culture, Science, Varied,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::SeriousClassical	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SeriousClassical, OtherMusic, Weather, Finance,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::setAlternativeFrequenciesEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void setAlternativeFrequenciesEnabled(bool enabled);$/;"	prototype	class:QRadioData	access:public	signature:(bool enabled)
QRadioData::SocialAffairs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        ChildrensProgrammes, SocialAffairs, Religion,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Soft	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SoftRock, Top40, Soft, Nostalgia, Classical,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::SoftRhythmAndBlues	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        RhythmAndBlues, SoftRhythmAndBlues, Language,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::SoftRock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SoftRock, Top40, Soft, Nostalgia, Classical,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Sport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        Sport, Education, Drama, Culture, Science, Varied,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::stationId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QString stationId() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
QRadioData::stationIdChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void stationIdChanged(QString stationId);$/;"	prototype	class:QRadioData	access:public	signature:(QString stationId)
QRadioData::stationName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QString stationName() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
QRadioData::stationNameChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void stationNameChanged(QString stationName);$/;"	prototype	class:QRadioData	access:public	signature:(QString stationName)
QRadioData::Talk	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        AlarmTest, Alarm, Talk, ClassicRock, AdultHits,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Top40	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SoftRock, Top40, Soft, Nostalgia, Classical,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Travel	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PhoneIn, Travel, Leisure, JazzMusic, CountryMusic,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Undefined	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum ProgramType { Undefined = 0, News, CurrentAffairs, Information,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Varied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        Sport, Education, Drama, Culture, Science, Varied,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::Weather	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SeriousClassical, OtherMusic, Weather, Finance,$/;"	enumerator	enum:QRadioData::ProgramType
QRadioData::~QRadioData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    ~QRadioData();$/;"	prototype	class:QRadioData	access:public	signature:()
QRadioDataControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    explicit QRadioDataControl(QObject *parent = nullptr);$/;"	prototype	class:QRadioDataControl	access:protected	signature:(QObject *parent = nullptr)
QRadioDataControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^class Q_MULTIMEDIA_EXPORT QRadioDataControl : public QMediaControl$/;"	class	inherits:QMediaControl
QRadioDataControl::alternativeFrequenciesEnabledChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    void alternativeFrequenciesEnabledChanged(bool enabled);$/;"	prototype	class:QRadioDataControl	access:public	signature:(bool enabled)
QRadioDataControl::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual QRadioData::Error error() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
QRadioDataControl::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    void error(QRadioData::Error err);$/;"	prototype	class:QRadioDataControl	access:public	signature:(QRadioData::Error err)
QRadioDataControl::errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual QString errorString() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
QRadioDataControl::isAlternativeFrequenciesEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual bool isAlternativeFrequenciesEnabled() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
QRadioDataControl::programType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual QRadioData::ProgramType programType() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
QRadioDataControl::programTypeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    void programTypeChanged(QRadioData::ProgramType programType);$/;"	prototype	class:QRadioDataControl	access:public	signature:(QRadioData::ProgramType programType)
QRadioDataControl::programTypeName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual QString programTypeName() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
QRadioDataControl::programTypeNameChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    void programTypeNameChanged(QString programTypeName);$/;"	prototype	class:QRadioDataControl	access:public	signature:(QString programTypeName)
QRadioDataControl::QRadioDataControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    explicit QRadioDataControl(QObject *parent = nullptr);$/;"	prototype	class:QRadioDataControl	access:protected	signature:(QObject *parent = nullptr)
QRadioDataControl::radioText	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual QString radioText() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
QRadioDataControl::radioTextChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    void radioTextChanged(QString radioText);$/;"	prototype	class:QRadioDataControl	access:public	signature:(QString radioText)
QRadioDataControl::setAlternativeFrequenciesEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual void setAlternativeFrequenciesEnabled(bool enabled) = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:(bool enabled)
QRadioDataControl::stationId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual QString stationId() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
QRadioDataControl::stationIdChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    void stationIdChanged(QString stationId);$/;"	prototype	class:QRadioDataControl	access:public	signature:(QString stationId)
QRadioDataControl::stationName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual QString stationName() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
QRadioDataControl::stationNameChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    void stationNameChanged(QString stationName);$/;"	prototype	class:QRadioDataControl	access:public	signature:(QString stationName)
QRadioDataControl::~QRadioDataControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    ~QRadioDataControl();$/;"	prototype	class:QRadioDataControl	access:public	signature:()
QRadioTuner	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    explicit QRadioTuner(QObject *parent = nullptr);$/;"	prototype	class:QRadioTuner	access:public	signature:(QObject *parent = nullptr)
QRadioTuner	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^class Q_MULTIMEDIA_EXPORT QRadioTuner : public QMediaObject$/;"	class	inherits:QMediaObject
QRadioTuner::ActiveState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum State { ActiveState, StoppedState };$/;"	enumerator	enum:QRadioTuner::State
QRadioTuner::AM	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Band { AM, FM, SW, LW, FM2 };$/;"	enumerator	enum:QRadioTuner::Band
QRadioTuner::antennaConnectedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void antennaConnectedChanged(bool connectionStatus);$/;"	prototype	class:QRadioTuner	access:public	signature:(bool connectionStatus)
QRadioTuner::Auto	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum StereoMode { ForceStereo, ForceMono, Auto };$/;"	enumerator	enum:QRadioTuner::StereoMode
QRadioTuner::band	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    Band band() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
QRadioTuner::Band	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Band { AM, FM, SW, LW, FM2 };$/;"	enum	class:QRadioTuner	access:public
QRadioTuner::bandChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void bandChanged(QRadioTuner::Band band);$/;"	prototype	class:QRadioTuner	access:public	signature:(QRadioTuner::Band band)
QRadioTuner::cancelSearch	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void cancelSearch();$/;"	prototype	class:QRadioTuner	access:public	signature:()
QRadioTuner::Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enum	class:QRadioTuner	access:public
QRadioTuner::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    Error error() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
QRadioTuner::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void error(QRadioTuner::Error error);$/;"	prototype	class:QRadioTuner	access:public	signature:(QRadioTuner::Error error)
QRadioTuner::errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    QString errorString() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
QRadioTuner::FM	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Band { AM, FM, SW, LW, FM2 };$/;"	enumerator	enum:QRadioTuner::Band
QRadioTuner::FM2	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Band { AM, FM, SW, LW, FM2 };$/;"	enumerator	enum:QRadioTuner::Band
QRadioTuner::ForceMono	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum StereoMode { ForceStereo, ForceMono, Auto };$/;"	enumerator	enum:QRadioTuner::StereoMode
QRadioTuner::ForceStereo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum StereoMode { ForceStereo, ForceMono, Auto };$/;"	enumerator	enum:QRadioTuner::StereoMode
QRadioTuner::frequency	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    int frequency() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
QRadioTuner::frequencyChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void frequencyChanged(int frequency);$/;"	prototype	class:QRadioTuner	access:public	signature:(int frequency)
QRadioTuner::frequencyRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    QPair<int,int> frequencyRange(Band band) const;$/;"	prototype	class:QRadioTuner	access:public	signature:(Band band) const
QRadioTuner::frequencyStep	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    int frequencyStep(Band band) const;$/;"	prototype	class:QRadioTuner	access:public	signature:(Band band) const
QRadioTuner::isAntennaConnected	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    bool isAntennaConnected() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
QRadioTuner::isBandSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    bool isBandSupported(Band b) const;$/;"	prototype	class:QRadioTuner	access:public	signature:(Band b) const
QRadioTuner::isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    bool isMuted() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
QRadioTuner::isSearching	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    bool isSearching() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
QRadioTuner::isStereo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    bool isStereo() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
QRadioTuner::LW	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Band { AM, FM, SW, LW, FM2 };$/;"	enumerator	enum:QRadioTuner::Band
QRadioTuner::mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void mutedChanged(bool muted);$/;"	prototype	class:QRadioTuner	access:public	signature:(bool muted)
QRadioTuner::NoError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioTuner::Error
QRadioTuner::OpenError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioTuner::Error
QRadioTuner::OutOfRangeError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioTuner::Error
QRadioTuner::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    QMultimedia::AvailabilityStatus availability() const override;$/;"	member	class:QRadioTuner	access:public
QRadioTuner::QRadioTuner	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    explicit QRadioTuner(QObject *parent = nullptr);$/;"	prototype	class:QRadioTuner	access:public	signature:(QObject *parent = nullptr)
QRadioTuner::radioData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    QRadioData *radioData() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
QRadioTuner::ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioTuner::Error
QRadioTuner::searchAllStations	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void searchAllStations(QRadioTuner::SearchMode searchMode = QRadioTuner::SearchFast);$/;"	prototype	class:QRadioTuner	access:public	signature:(QRadioTuner::SearchMode searchMode = QRadioTuner::SearchFast)
QRadioTuner::searchBackward	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void searchBackward();$/;"	prototype	class:QRadioTuner	access:public	signature:()
QRadioTuner::SearchFast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum SearchMode { SearchFast, SearchGetStationId };$/;"	enumerator	enum:QRadioTuner::SearchMode
QRadioTuner::searchForward	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void searchForward();$/;"	prototype	class:QRadioTuner	access:public	signature:()
QRadioTuner::SearchGetStationId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum SearchMode { SearchFast, SearchGetStationId };$/;"	enumerator	enum:QRadioTuner::SearchMode
QRadioTuner::searchingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void searchingChanged(bool searching);$/;"	prototype	class:QRadioTuner	access:public	signature:(bool searching)
QRadioTuner::SearchMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum SearchMode { SearchFast, SearchGetStationId };$/;"	enum	class:QRadioTuner	access:public
QRadioTuner::setBand	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void setBand(Band band);$/;"	prototype	class:QRadioTuner	access:public	signature:(Band band)
QRadioTuner::setFrequency	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void setFrequency(int frequency);$/;"	prototype	class:QRadioTuner	access:public	signature:(int frequency)
QRadioTuner::setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void setMuted(bool muted);$/;"	prototype	class:QRadioTuner	access:public	signature:(bool muted)
QRadioTuner::setStereoMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void setStereoMode(QRadioTuner::StereoMode mode);$/;"	prototype	class:QRadioTuner	access:public	signature:(QRadioTuner::StereoMode mode)
QRadioTuner::setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void setVolume(int volume);$/;"	prototype	class:QRadioTuner	access:public	signature:(int volume)
QRadioTuner::signalStrength	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    int signalStrength() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
QRadioTuner::signalStrengthChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void signalStrengthChanged(int signalStrength);$/;"	prototype	class:QRadioTuner	access:public	signature:(int signalStrength)
QRadioTuner::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void start();$/;"	prototype	class:QRadioTuner	access:public	signature:()
QRadioTuner::State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum State { ActiveState, StoppedState };$/;"	enum	class:QRadioTuner	access:public
QRadioTuner::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    State state() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
QRadioTuner::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void stateChanged(QRadioTuner::State state);$/;"	prototype	class:QRadioTuner	access:public	signature:(QRadioTuner::State state)
QRadioTuner::stationFound	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void stationFound(int frequency, QString stationId);$/;"	prototype	class:QRadioTuner	access:public	signature:(int frequency, QString stationId)
QRadioTuner::StereoMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum StereoMode { ForceStereo, ForceMono, Auto };$/;"	enum	class:QRadioTuner	access:public
QRadioTuner::stereoMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    StereoMode stereoMode() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
QRadioTuner::stereoStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void stereoStatusChanged(bool stereo);$/;"	prototype	class:QRadioTuner	access:public	signature:(bool stereo)
QRadioTuner::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void stop();$/;"	prototype	class:QRadioTuner	access:public	signature:()
QRadioTuner::StoppedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum State { ActiveState, StoppedState };$/;"	enumerator	enum:QRadioTuner::State
QRadioTuner::SW	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Band { AM, FM, SW, LW, FM2 };$/;"	enumerator	enum:QRadioTuner::Band
QRadioTuner::volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    int volume() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
QRadioTuner::volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void volumeChanged(int volume);$/;"	prototype	class:QRadioTuner	access:public	signature:(int volume)
QRadioTuner::~QRadioTuner	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    ~QRadioTuner();$/;"	prototype	class:QRadioTuner	access:public	signature:()
QRadioTunerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    explicit QRadioTunerControl(QObject *parent = nullptr);$/;"	prototype	class:QRadioTunerControl	access:protected	signature:(QObject *parent = nullptr)
QRadioTunerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^class Q_MULTIMEDIA_EXPORT QRadioTunerControl : public QMediaControl$/;"	class	inherits:QMediaControl
QRadioTunerControl::antennaConnectedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void antennaConnectedChanged(bool connectionStatus);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(bool connectionStatus)
QRadioTunerControl::band	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual QRadioTuner::Band band() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
QRadioTunerControl::bandChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void bandChanged(QRadioTuner::Band band);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::Band band)
QRadioTunerControl::cancelSearch	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void cancelSearch() = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:()
QRadioTunerControl::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual QRadioTuner::Error error() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
QRadioTunerControl::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void error(QRadioTuner::Error err);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::Error err)
QRadioTunerControl::errorString	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual QString errorString() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
QRadioTunerControl::frequency	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual int frequency() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
QRadioTunerControl::frequencyChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void frequencyChanged(int frequency);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(int frequency)
QRadioTunerControl::frequencyRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual QPair<int,int> frequencyRange(QRadioTuner::Band b) const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::Band b) const
QRadioTunerControl::frequencyStep	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual int frequencyStep(QRadioTuner::Band b) const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::Band b) const
QRadioTunerControl::isAntennaConnected	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual bool isAntennaConnected() const { return true; }$/;"	function	class:QRadioTunerControl	access:public	signature:() const
QRadioTunerControl::isBandSupported	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual bool isBandSupported(QRadioTuner::Band b) const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::Band b) const
QRadioTunerControl::isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual bool isMuted() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
QRadioTunerControl::isSearching	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual bool isSearching() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
QRadioTunerControl::isStereo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual bool isStereo() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
QRadioTunerControl::mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void mutedChanged(bool muted);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(bool muted)
QRadioTunerControl::QRadioTunerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    explicit QRadioTunerControl(QObject *parent = nullptr);$/;"	prototype	class:QRadioTunerControl	access:protected	signature:(QObject *parent = nullptr)
QRadioTunerControl::searchAllStations	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void searchAllStations(QRadioTuner::SearchMode searchMode = QRadioTuner::SearchFast) = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::SearchMode searchMode = QRadioTuner::SearchFast)
QRadioTunerControl::searchBackward	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void searchBackward() = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:()
QRadioTunerControl::searchForward	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void searchForward() = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:()
QRadioTunerControl::searchingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void searchingChanged(bool searching);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(bool searching)
QRadioTunerControl::setBand	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void setBand(QRadioTuner::Band b) = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::Band b)
QRadioTunerControl::setFrequency	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void setFrequency(int frequency) = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(int frequency)
QRadioTunerControl::setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void setMuted(bool muted) = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(bool muted)
QRadioTunerControl::setStereoMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void setStereoMode(QRadioTuner::StereoMode mode) = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::StereoMode mode)
QRadioTunerControl::setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void setVolume(int volume) = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(int volume)
QRadioTunerControl::signalStrength	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual int signalStrength() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
QRadioTunerControl::signalStrengthChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void signalStrengthChanged(int signalStrength);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(int signalStrength)
QRadioTunerControl::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void start() = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:()
QRadioTunerControl::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual QRadioTuner::State state() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
QRadioTunerControl::stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void stateChanged(QRadioTuner::State state);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::State state)
QRadioTunerControl::stationFound	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void stationFound(int frequency, QString stationId);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(int frequency, QString stationId)
QRadioTunerControl::stereoMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual QRadioTuner::StereoMode stereoMode() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
QRadioTunerControl::stereoStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void stereoStatusChanged(bool stereo);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(bool stereo)
QRadioTunerControl::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void stop() = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:()
QRadioTunerControl::volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual int volume() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
QRadioTunerControl::volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void volumeChanged(int volume);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(int volume)
QRadioTunerControl::~QRadioTunerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    ~QRadioTunerControl();$/;"	prototype	class:QRadioTunerControl	access:public	signature:()
QSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QSample();$/;"	prototype	class:QSample	access:private	signature:()
QSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QSample(const QUrl& url, QSampleCache *parent);$/;"	prototype	class:QSample	access:protected	signature:(const QUrl& url, QSampleCache *parent)
QSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^class Q_MULTIMEDIA_EXPORT QSample : public QObject$/;"	class	inherits:QObject
QSample::addRef	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void addRef();$/;"	prototype	class:QSample	access:private	signature:()
QSample::cleanup	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void cleanup();$/;"	prototype	class:QSample	access:private	signature:()
QSample::Creating	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^        Creating,$/;"	enumerator	enum:QSample::State
QSample::data	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    const QByteArray& data() const { Q_ASSERT(state() == Ready); return m_soundData; }$/;"	function	class:QSample	access:public	signature:() const
QSample::decoderError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void decoderError();$/;"	prototype	class:QSample	access:private	signature:()
QSample::decoderReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void decoderReady();$/;"	prototype	class:QSample	access:private	signature:()
QSample::Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^        Error,$/;"	enumerator	enum:QSample::State
QSample::error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void error();$/;"	prototype	class:QSample	access:public	signature:()
QSample::format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    const QAudioFormat& format() const { Q_ASSERT(state() == Ready); return m_audioFormat; }$/;"	function	class:QSample	access:public	signature:() const
QSample::load	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void load();$/;"	prototype	class:QSample	access:private	signature:()
QSample::loadIfNecessary	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void loadIfNecessary();$/;"	prototype	class:QSample	access:private	signature:()
QSample::Loading	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^        Loading,$/;"	enumerator	enum:QSample::State
QSample::m_audioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QAudioFormat m_audioFormat;$/;"	member	class:QSample	access:private
QSample::m_mutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    mutable QMutex m_mutex;$/;"	member	class:QSample	access:private
QSample::m_parent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QSampleCache *m_parent;$/;"	member	class:QSample	access:private
QSample::m_ref	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    int          m_ref;$/;"	member	class:QSample	access:private
QSample::m_sampleReadLength	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    qint64       m_sampleReadLength;$/;"	member	class:QSample	access:private
QSample::m_soundData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QByteArray   m_soundData;$/;"	member	class:QSample	access:private
QSample::m_state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    State        m_state;$/;"	member	class:QSample	access:private
QSample::m_stream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QIODevice    *m_stream;$/;"	member	class:QSample	access:private
QSample::m_url	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QUrl         m_url;$/;"	member	class:QSample	access:private
QSample::m_waveDecoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QWaveDecoder *m_waveDecoder;$/;"	member	class:QSample	access:private
QSample::onReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void onReady();$/;"	prototype	class:QSample	access:private	signature:()
QSample::QSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QSample();$/;"	prototype	class:QSample	access:private	signature:()
QSample::QSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QSample(const QUrl& url, QSampleCache *parent);$/;"	prototype	class:QSample	access:protected	signature:(const QUrl& url, QSampleCache *parent)
QSample::readSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void readSample();$/;"	prototype	class:QSample	access:private	signature:()
QSample::Ready	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^        Ready,$/;"	enumerator	enum:QSample::State
QSample::ready	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void ready();$/;"	prototype	class:QSample	access:public	signature:()
QSample::release	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void release();$/;"	prototype	class:QSample	access:public	signature:()
QSample::State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    enum State$/;"	enum	class:QSample	access:public
QSample::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    State state() const;$/;"	prototype	class:QSample	access:public	signature:() const
QSample::~QSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    ~QSample();$/;"	prototype	class:QSample	access:private	signature:()
QSampleCache	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QSampleCache(QObject *parent = 0);$/;"	prototype	class:QSampleCache	access:public	signature:(QObject *parent = 0)
QSampleCache	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^class Q_MULTIMEDIA_EXPORT QSampleCache : public QObject$/;"	class	inherits:QObject
QSampleCache::isCached	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    bool isCached(const QUrl& url) const;$/;"	prototype	class:QSampleCache	access:public	signature:(const QUrl& url) const
QSampleCache::isLoading	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    bool isLoading() const;$/;"	prototype	class:QSampleCache	access:public	signature:() const
QSampleCache::isLoadingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void isLoadingChanged();$/;"	prototype	class:QSampleCache	access:public	signature:()
QSampleCache::loadingRelease	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void loadingRelease();$/;"	prototype	class:QSampleCache	access:private	signature:()
QSampleCache::m_capacity	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    qint64 m_capacity;$/;"	member	class:QSampleCache	access:private
QSampleCache::m_loadingMutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QMutex m_loadingMutex;$/;"	member	class:QSampleCache	access:private
QSampleCache::m_loadingRefCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    int m_loadingRefCount;$/;"	member	class:QSampleCache	access:private
QSampleCache::m_loadingThread	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QThread m_loadingThread;$/;"	member	class:QSampleCache	access:private
QSampleCache::m_mutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    mutable QMutex m_mutex;$/;"	member	class:QSampleCache	access:private
QSampleCache::m_networkAccessManager	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QNetworkAccessManager *m_networkAccessManager;$/;"	member	class:QSampleCache	access:private
QSampleCache::m_samples	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QMap<QUrl, QSample*> m_samples;$/;"	member	class:QSampleCache	access:private
QSampleCache::m_staleSamples	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QSet<QSample*> m_staleSamples;$/;"	member	class:QSampleCache	access:private
QSampleCache::m_usage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    qint64 m_usage;$/;"	member	class:QSampleCache	access:private
QSampleCache::networkAccessManager	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QNetworkAccessManager& networkAccessManager();$/;"	prototype	class:QSampleCache	access:private	signature:()
QSampleCache::notifyUnreferencedSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    bool notifyUnreferencedSample(QSample* sample);$/;"	prototype	class:QSampleCache	access:private	signature:(QSample* sample)
QSampleCache::QSampleCache	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QSampleCache(QObject *parent = 0);$/;"	prototype	class:QSampleCache	access:public	signature:(QObject *parent = 0)
QSampleCache::refresh	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void refresh(qint64 usageChange);$/;"	prototype	class:QSampleCache	access:private	signature:(qint64 usageChange)
QSampleCache::removeUnreferencedSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void removeUnreferencedSample(QSample* sample);$/;"	prototype	class:QSampleCache	access:private	signature:(QSample* sample)
QSampleCache::requestSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QSample* requestSample(const QUrl& url);$/;"	prototype	class:QSampleCache	access:public	signature:(const QUrl& url)
QSampleCache::setCapacity	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void setCapacity(qint64 capacity);$/;"	prototype	class:QSampleCache	access:public	signature:(qint64 capacity)
QSampleCache::unloadSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void unloadSample(QSample* sample);$/;"	prototype	class:QSampleCache	access:private	signature:(QSample* sample)
QSampleCache::~QSampleCache	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    ~QSampleCache();$/;"	prototype	class:QSampleCache	access:public	signature:()
QSGVideoNode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    QSGVideoNode();$/;"	prototype	class:QSGVideoNode	access:public	signature:()
QSGVideoNode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^class Q_MULTIMEDIAQUICK_EXPORT QSGVideoNode : public QSGGeometryNode$/;"	class	inherits:QSGGeometryNode
QSGVideoNode::FrameFiltered	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^        FrameFiltered = 0x01$/;"	enumerator	enum:QSGVideoNode::FrameFlag
QSGVideoNode::FrameFlag	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    enum FrameFlag {$/;"	enum	class:QSGVideoNode	access:public
QSGVideoNode::handleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    virtual QAbstractVideoBuffer::HandleType handleType() const = 0;$/;"	prototype	class:QSGVideoNode	access:public	signature:() const
QSGVideoNode::m_orientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    int m_orientation;$/;"	member	class:QSGVideoNode	access:private
QSGVideoNode::m_rect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    QRectF m_rect;$/;"	member	class:QSGVideoNode	access:private
QSGVideoNode::m_textureRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    QRectF m_textureRect;$/;"	member	class:QSGVideoNode	access:private
QSGVideoNode::pixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    virtual QVideoFrame::PixelFormat pixelFormat() const = 0;$/;"	prototype	class:QSGVideoNode	access:public	signature:() const
QSGVideoNode::QSGVideoNode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    QSGVideoNode();$/;"	prototype	class:QSGVideoNode	access:public	signature:()
QSGVideoNode::setCurrentFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    virtual void setCurrentFrame(const QVideoFrame &frame, FrameFlags flags) = 0;$/;"	prototype	class:QSGVideoNode	access:public	signature:(const QVideoFrame &frame, FrameFlags flags)
QSGVideoNode::setTexturedRectGeometry	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    void setTexturedRectGeometry(const QRectF &boundingRect, const QRectF &textureRect, int orientation);$/;"	prototype	class:QSGVideoNode	access:public	signature:(const QRectF &boundingRect, const QRectF &textureRect, int orientation)
QSGVideoNodeFactoryInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^class Q_MULTIMEDIAQUICK_EXPORT QSGVideoNodeFactoryInterface$/;"	class
QSGVideoNodeFactoryInterface::createNode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    virtual QSGVideoNode *createNode(const QVideoSurfaceFormat &format) = 0;$/;"	prototype	class:QSGVideoNodeFactoryInterface	access:public	signature:(const QVideoSurfaceFormat &format)
QSGVideoNodeFactoryInterface::supportedPixelFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    virtual QList<QVideoFrame::PixelFormat> supportedPixelFormats(QAbstractVideoBuffer::HandleType handleType) const = 0;$/;"	prototype	class:QSGVideoNodeFactoryInterface	access:public	signature:(QAbstractVideoBuffer::HandleType handleType) const
QSGVideoNodeFactoryInterface::~QSGVideoNodeFactoryInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    virtual ~QSGVideoNodeFactoryInterface();$/;"	prototype	class:QSGVideoNodeFactoryInterface	access:public	signature:()
QSGVideoNodeFactoryPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^class Q_MULTIMEDIAQUICK_EXPORT QSGVideoNodeFactoryPlugin : public QObject, public QSGVideoNodeFactoryInterface$/;"	class	inherits:QObject,QSGVideoNodeFactoryInterface
QSGVideoNodeFactoryPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    QList<QVideoFrame::PixelFormat> supportedPixelFormats(QAbstractVideoBuffer::HandleType handleType) const override = 0;$/;"	member	class:QSGVideoNodeFactoryPlugin	access:public
QSGVideoNodeFactoryPlugin::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    QSGVideoNode *createNode(const QVideoSurfaceFormat &format) override = 0;$/;"	member	class:QSGVideoNodeFactoryPlugin	access:public
QSound	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    explicit QSound(const QString &filename, QObject *parent = nullptr);$/;"	prototype	class:QSound	access:public	signature:(const QString &filename, QObject *parent = nullptr)
QSound	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^class Q_MULTIMEDIA_EXPORT QSound : public QObject$/;"	class	inherits:QObject
QSound::deleteOnComplete	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    void deleteOnComplete();$/;"	prototype	class:QSound	access:private	signature:()
QSound::fileName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    QString fileName() const;$/;"	prototype	class:QSound	access:public	signature:() const
QSound::Infinite	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^        Infinite = -1$/;"	enumerator	enum:QSound::Loop
QSound::isFinished	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    bool isFinished() const;$/;"	prototype	class:QSound	access:public	signature:() const
QSound::Loop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    enum Loop$/;"	enum	class:QSound	access:public
QSound::loops	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    int loops() const;$/;"	prototype	class:QSound	access:public	signature:() const
QSound::loopsRemaining	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    int loopsRemaining() const;$/;"	prototype	class:QSound	access:public	signature:() const
QSound::m_soundEffect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    QSoundEffect *m_soundEffect = nullptr;$/;"	member	class:QSound	access:private
QSound::play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    static void play(const QString &filename);$/;"	prototype	class:QSound	access:public	signature:(const QString &filename)
QSound::play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    void play();$/;"	prototype	class:QSound	access:public	signature:()
QSound::QSound	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    explicit QSound(const QString &filename, QObject *parent = nullptr);$/;"	prototype	class:QSound	access:public	signature:(const QString &filename, QObject *parent = nullptr)
QSound::setLoops	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    void setLoops(int);$/;"	prototype	class:QSound	access:public	signature:(int)
QSound::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    void stop();$/;"	prototype	class:QSound	access:public	signature:()
QSound::~QSound	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    ~QSound();$/;"	prototype	class:QSound	access:public	signature:()
QSoundEffect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    explicit QSoundEffect(QObject *parent = nullptr);$/;"	prototype	class:QSoundEffect	access:public	signature:(QObject *parent = nullptr)
QSoundEffect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^class Q_MULTIMEDIA_EXPORT QSoundEffect : public QObject$/;"	class	inherits:QObject
QSoundEffect::category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    QString category() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
QSoundEffect::categoryChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void categoryChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
QSoundEffect::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    QSoundEffectPrivate *d = nullptr;$/;"	member	class:QSoundEffect	access:private
QSoundEffect::Error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^        Error$/;"	enumerator	enum:QSoundEffect::Status
QSoundEffect::Infinite	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^        Infinite = -2$/;"	enumerator	enum:QSoundEffect::Loop
QSoundEffect::isLoaded	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    bool isLoaded() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
QSoundEffect::isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    bool isMuted() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
QSoundEffect::isPlaying	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    bool isPlaying() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
QSoundEffect::loadedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void loadedChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
QSoundEffect::Loading	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^        Loading,$/;"	enumerator	enum:QSoundEffect::Status
QSoundEffect::Loop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    enum Loop$/;"	enum	class:QSoundEffect	access:public
QSoundEffect::loopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    int loopCount() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
QSoundEffect::loopCountChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void loopCountChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
QSoundEffect::loopsRemaining	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    int loopsRemaining() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
QSoundEffect::loopsRemainingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void loopsRemainingChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
QSoundEffect::mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void mutedChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
QSoundEffect::Null	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^        Null,$/;"	enumerator	enum:QSoundEffect::Status
QSoundEffect::play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void play();$/;"	prototype	class:QSoundEffect	access:public	signature:()
QSoundEffect::playingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void playingChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
QSoundEffect::QSoundEffect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    explicit QSoundEffect(QObject *parent = nullptr);$/;"	prototype	class:QSoundEffect	access:public	signature:(QObject *parent = nullptr)
QSoundEffect::Ready	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^        Ready,$/;"	enumerator	enum:QSoundEffect::Status
QSoundEffect::setCategory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void setCategory(const QString &category);$/;"	prototype	class:QSoundEffect	access:public	signature:(const QString &category)
QSoundEffect::setLoopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void setLoopCount(int loopCount);$/;"	prototype	class:QSoundEffect	access:public	signature:(int loopCount)
QSoundEffect::setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void setMuted(bool muted);$/;"	prototype	class:QSoundEffect	access:public	signature:(bool muted)
QSoundEffect::setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void setSource(const QUrl &url);$/;"	prototype	class:QSoundEffect	access:public	signature:(const QUrl &url)
QSoundEffect::setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void setVolume(qreal volume);$/;"	prototype	class:QSoundEffect	access:public	signature:(qreal volume)
QSoundEffect::source	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    QUrl source() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
QSoundEffect::sourceChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void sourceChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
QSoundEffect::Status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    enum Status$/;"	enum	class:QSoundEffect	access:public
QSoundEffect::status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    Status status() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
QSoundEffect::statusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void statusChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
QSoundEffect::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void stop();$/;"	prototype	class:QSoundEffect	access:public	signature:()
QSoundEffect::supportedMimeTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    static QStringList supportedMimeTypes();$/;"	prototype	class:QSoundEffect	access:public	signature:()
QSoundEffect::volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    qreal volume() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
QSoundEffect::volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void volumeChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
QSoundEffect::~QSoundEffect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    ~QSoundEffect();$/;"	prototype	class:QSoundEffect	access:public	signature:()
QSoundEffectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    explicit QSoundEffectPrivate(QObject* parent);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(QObject* parent)
QSoundEffectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^class QSoundEffectPrivate : public QObject$/;"	class	inherits:QObject
QSoundEffectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    explicit QSoundEffectPrivate(QObject *parent);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(QObject *parent)
QSoundEffectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^class QSoundEffectPrivate : public QObject$/;"	class	inherits:QObject
QSoundEffectPrivate::category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QString category() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QString category() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::categoryChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void categoryChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::categoryChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void categoryChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::contextFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void contextFailed();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
QSoundEffectPrivate::contextReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void contextReady();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
QSoundEffectPrivate::createPulseStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void createPulseStream();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
QSoundEffectPrivate::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    PrivateSoundSource *d = nullptr;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::decoderError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void decoderError();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
QSoundEffectPrivate::emptyComplete	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void emptyComplete(void *stream, bool reload);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(void *stream, bool reload)
QSoundEffectPrivate::emptyStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void emptyStream(EmptyStreamOptions options = EmptyStreamOptions());$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(EmptyStreamOptions options = EmptyStreamOptions())
QSoundEffectPrivate::EmptyStreamOption	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    enum EmptyStreamOption {$/;"	enum	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::handleAvailabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void handleAvailabilityChanged(bool available);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(bool available)
QSoundEffectPrivate::isLoaded	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool isLoaded() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::isLoaded	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    bool isLoaded() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool isMuted() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::isMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    bool isMuted() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::isPlaying	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool isPlaying() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::isPlaying	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    bool isPlaying() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::loadedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void loadedChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::loadedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void loadedChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::loopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int loopCount() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::loopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    int loopCount() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::loopsRemaining	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int loopsRemaining() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::loopsRemaining	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    int loopsRemaining() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::loopsRemainingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void loopsRemainingChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::loopsRemainingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void loopsRemainingChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void mutedChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::mutedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void mutedChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::m_category	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QString m_category;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_emptying	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_emptying = false;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_loopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int m_loopCount = 1;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_muted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_muted = false;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_name	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QByteArray m_name;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_playing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_playing = false;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_playQueued	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_playQueued = false;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int m_position = 0;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_pulseBufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int m_pulseBufferSize = 0;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_pulseSpec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    pa_sample_spec m_pulseSpec;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_pulseStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    pa_stream *m_pulseStream = nullptr;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_ref	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QSoundEffectRef *m_ref = nullptr;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_reloadCategory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_reloadCategory = false;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_resources	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QMediaPlayerResourceSetInterface *m_resources = nullptr;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_resourcesAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_resourcesAvailable = false;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_runningCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int m_runningCount = 0;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_sample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QSample *m_sample = nullptr;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_sampleReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_sampleReady = false;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_sinkInputId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int m_sinkInputId = -1;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_source	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QUrl m_source;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QSoundEffect::Status m_status = QSoundEffect::Null;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_stopping	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    bool m_stopping = false;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    qreal m_volume = 1.0;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::m_volumeLock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    mutable QMutex m_volumeLock;$/;"	member	class:QSoundEffectPrivate	access:private
QSoundEffectPrivate::play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void play();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::play	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void play();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::playAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void playAvailable();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
QSoundEffectPrivate::playingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void playingChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::playingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void playingChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::playSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void playSample();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
QSoundEffectPrivate::prepare	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void prepare();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
QSoundEffectPrivate::QSoundEffectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    explicit QSoundEffectPrivate(QObject* parent);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(QObject* parent)
QSoundEffectPrivate::QSoundEffectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    explicit QSoundEffectPrivate(QObject *parent);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(QObject *parent)
QSoundEffectPrivate::release	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void release();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::release	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void release();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::ReloadSampleWhenDone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^        ReloadSampleWhenDone = 0x1$/;"	enumerator	enum:QSoundEffectPrivate::EmptyStreamOption
QSoundEffectPrivate::sampleReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void sampleReady();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
QSoundEffectPrivate::setCategory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setCategory(const QString &category);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(const QString &category)
QSoundEffectPrivate::setCategory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setCategory(const QString &);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(const QString &)
QSoundEffectPrivate::setLoopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setLoopCount(int loopCount);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(int loopCount)
QSoundEffectPrivate::setLoopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setLoopCount(int loopCount);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(int loopCount)
QSoundEffectPrivate::setLoopsRemaining	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setLoopsRemaining(int loopsRemaining);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(int loopsRemaining)
QSoundEffectPrivate::setLoopsRemaining	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setLoopsRemaining(int loopsRemaining);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(int loopsRemaining)
QSoundEffectPrivate::setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setMuted(bool muted);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(bool muted)
QSoundEffectPrivate::setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setMuted(bool muted);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(bool muted)
QSoundEffectPrivate::setPlaying	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setPlaying(bool playing);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(bool playing)
QSoundEffectPrivate::setPlaying	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setPlaying(bool playing);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(bool playing)
QSoundEffectPrivate::setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setSource(const QUrl &url);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(const QUrl &url)
QSoundEffectPrivate::setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setSource(const QUrl &url);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(const QUrl &url)
QSoundEffectPrivate::setStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setStatus(QSoundEffect::Status status);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(QSoundEffect::Status status)
QSoundEffectPrivate::setStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setStatus(QSoundEffect::Status status);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(QSoundEffect::Status status)
QSoundEffectPrivate::setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setVolume(qreal volume);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(qreal volume)
QSoundEffectPrivate::setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setVolume(qreal volume);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(qreal volume)
QSoundEffectPrivate::source	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QUrl source() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::source	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QUrl source() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QSoundEffect::Status status() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QSoundEffect::Status status() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::statusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void statusChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::statusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void statusChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void stop();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void stop();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::streamReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void streamReady();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
QSoundEffectPrivate::stream_adjust_prebuffer_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_adjust_prebuffer_callback(pa_stream *s, int success, void *userdata);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(pa_stream *s, int success, void *userdata)
QSoundEffectPrivate::stream_cork_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_cork_callback(pa_stream *s, int success, void *userdata);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(pa_stream *s, int success, void *userdata)
QSoundEffectPrivate::stream_flush_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_flush_callback(pa_stream *s, int success, void *userdata);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(pa_stream *s, int success, void *userdata)
QSoundEffectPrivate::stream_flush_reload_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_flush_reload_callback(pa_stream *s, int success, void *userdata);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(pa_stream *s, int success, void *userdata)
QSoundEffectPrivate::stream_state_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_state_callback(pa_stream *s, void *userdata);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(pa_stream *s, void *userdata)
QSoundEffectPrivate::stream_underrun_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_underrun_callback(pa_stream *s, void *userdata);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(pa_stream *s, void *userdata)
QSoundEffectPrivate::stream_write_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_write_callback(pa_stream *s, size_t length, void *userdata);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(pa_stream *s, size_t length, void *userdata)
QSoundEffectPrivate::stream_write_done_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_write_done_callback(void *p);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(void *p)
QSoundEffectPrivate::supportedMimeTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static QStringList supportedMimeTypes();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::supportedMimeTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    static QStringList supportedMimeTypes();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::underRun	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void underRun();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
QSoundEffectPrivate::unloadPulseStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void unloadPulseStream();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
QSoundEffectPrivate::uploadSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void uploadSample();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
QSoundEffectPrivate::volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    qreal volume() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    qreal volume() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
QSoundEffectPrivate::volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void volumeChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void volumeChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::writeToStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int writeToStream(const void *data, int size);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(const void *data, int size)
QSoundEffectPrivate::~QSoundEffectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    ~QSoundEffectPrivate();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
QSoundEffectPrivate::~QSoundEffectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    ~QSoundEffectPrivate();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
qt_gst_caps_can_intersect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^Q_GSTTOOLS_EXPORT gboolean qt_gst_caps_can_intersect(const GstCaps * caps1, const GstCaps * caps2);$/;"	prototype	signature:(const GstCaps * caps1, const GstCaps * caps2)
qt_gst_caps_normalize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^Q_GSTTOOLS_EXPORT GstCaps *qt_gst_caps_normalize(GstCaps *caps);$/;"	prototype	signature:(GstCaps *caps)
qt_gst_element_get_factory_name	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^Q_GSTTOOLS_EXPORT const gchar *qt_gst_element_get_factory_name(GstElement *element);$/;"	prototype	signature:(GstElement *element)
qt_gst_element_query_duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^Q_GSTTOOLS_EXPORT gboolean qt_gst_element_query_duration(GstElement *element, GstFormat format, gint64 *cur);$/;"	prototype	signature:(GstElement *element, GstFormat format, gint64 *cur)
qt_gst_element_query_position	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^Q_GSTTOOLS_EXPORT gboolean qt_gst_element_query_position(GstElement *element, GstFormat format, gint64 *cur);$/;"	prototype	signature:(GstElement *element, GstFormat format, gint64 *cur)
qt_gst_object_ref_sink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^Q_GSTTOOLS_EXPORT void qt_gst_object_ref_sink(gpointer object);$/;"	prototype	signature:(gpointer object)
qt_gst_pad_get_caps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^Q_GSTTOOLS_EXPORT GstCaps *qt_gst_pad_get_caps(GstPad *pad);$/;"	prototype	signature:(GstPad *pad)
qt_gst_pad_get_current_caps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^Q_GSTTOOLS_EXPORT GstCaps *qt_gst_pad_get_current_caps(GstPad *pad);$/;"	prototype	signature:(GstPad *pad)
qt_gst_structure_new_empty	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^Q_GSTTOOLS_EXPORT GstStructure *qt_gst_structure_new_empty(const char *name);$/;"	prototype	signature:(const char *name)
qt_gst_util_double_to_fraction	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^Q_GSTTOOLS_EXPORT void qt_gst_util_double_to_fraction(gdouble src, gint *dest_n, gint *dest_d);$/;"	prototype	signature:(gdouble src, gint *dest_n, gint *dest_d)
qt_gst_video_sinks	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^Q_GSTTOOLS_EXPORT GList *qt_gst_video_sinks();$/;"	prototype	signature:()
qt_imageFromVideoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideoframe_p.h	/^Q_MULTIMEDIA_EXPORT QImage qt_imageFromVideoFrame(const QVideoFrame &frame);$/;"	prototype	signature:(const QVideoFrame &frame)
qt_real_to_fraction	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmultimediautils_p.h	/^Q_MULTIMEDIA_EXPORT void qt_real_to_fraction(qreal value, int *numerator, int *denominator);$/;"	prototype	signature:(qreal value, int *numerator, int *denominator)
quality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QMultimedia::EncodingQuality quality() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
quality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QMultimedia::EncodingQuality quality() const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:() const
quality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QMultimedia::EncodingQuality quality() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
queuedFlush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void queuedFlush();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:()
queuedRender	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void queuedRender();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:()
queuedStart	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void queuedStart();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:()
queuedStop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void queuedStop();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:()
queueSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    qint64 queueSize() const { return m_maxBytes; }$/;"	function	class:QGstAppSrc	access:public	signature:() const
QVideoDeviceSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    explicit QVideoDeviceSelectorControl(QObject *parent = nullptr);$/;"	prototype	class:QVideoDeviceSelectorControl	access:protected	signature:(QObject *parent = nullptr)
QVideoDeviceSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^class Q_MULTIMEDIA_EXPORT QVideoDeviceSelectorControl : public QMediaControl$/;"	class	inherits:QMediaControl
QVideoDeviceSelectorControl::defaultDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    virtual int defaultDevice() const = 0;$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:() const
QVideoDeviceSelectorControl::deviceCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    virtual int deviceCount() const = 0;$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:() const
QVideoDeviceSelectorControl::deviceDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    virtual QString deviceDescription(int index) const = 0;$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:(int index) const
QVideoDeviceSelectorControl::deviceName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    virtual QString deviceName(int index) const = 0;$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:(int index) const
QVideoDeviceSelectorControl::devicesChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    void devicesChanged();$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:()
QVideoDeviceSelectorControl::QVideoDeviceSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    explicit QVideoDeviceSelectorControl(QObject *parent = nullptr);$/;"	prototype	class:QVideoDeviceSelectorControl	access:protected	signature:(QObject *parent = nullptr)
QVideoDeviceSelectorControl::selectedDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    virtual int selectedDevice() const = 0;$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:() const
QVideoDeviceSelectorControl::selectedDeviceChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    void selectedDeviceChanged(const QString &name);$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:(const QString &name)
QVideoDeviceSelectorControl::selectedDeviceChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    void selectedDeviceChanged(int index);$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:(int index)
QVideoDeviceSelectorControl::setSelectedDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    virtual void setSelectedDevice(int index) = 0;$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:(int index)
QVideoDeviceSelectorControl::~QVideoDeviceSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    virtual ~QVideoDeviceSelectorControl();$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:()
QVideoEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVideoEncoderSettings();$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:()
QVideoEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVideoEncoderSettings(const QVideoEncoderSettings& other);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QVideoEncoderSettings& other)
QVideoEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^class Q_MULTIMEDIA_EXPORT QVideoEncoderSettings$/;"	class
QVideoEncoderSettings::bitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    int bitRate() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
QVideoEncoderSettings::codec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QString codec() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
QVideoEncoderSettings::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QSharedDataPointer<QVideoEncoderSettingsPrivate> d;$/;"	member	class:QVideoEncoderSettings	access:private
QVideoEncoderSettings::encodingMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QMultimedia::EncodingMode encodingMode() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
QVideoEncoderSettings::encodingOption	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVariant encodingOption(const QString &option) const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QString &option) const
QVideoEncoderSettings::encodingOptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVariantMap encodingOptions() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
QVideoEncoderSettings::frameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    qreal frameRate() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
QVideoEncoderSettings::isNull	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool isNull() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
QVideoEncoderSettings::operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool operator!=(const QVideoEncoderSettings &other) const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QVideoEncoderSettings &other) const
QVideoEncoderSettings::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVideoEncoderSettings& operator=(const QVideoEncoderSettings &other);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QVideoEncoderSettings &other)
QVideoEncoderSettings::operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    bool operator==(const QVideoEncoderSettings &other) const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QVideoEncoderSettings &other) const
QVideoEncoderSettings::quality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QMultimedia::EncodingQuality quality() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
QVideoEncoderSettings::QVideoEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVideoEncoderSettings();$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:()
QVideoEncoderSettings::QVideoEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QVideoEncoderSettings(const QVideoEncoderSettings& other);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QVideoEncoderSettings& other)
QVideoEncoderSettings::resolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QSize resolution() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
QVideoEncoderSettings::setBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setBitRate(int bitrate);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(int bitrate)
QVideoEncoderSettings::setCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setCodec(const QString &);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QString &)
QVideoEncoderSettings::setEncodingMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingMode(QMultimedia::EncodingMode);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(QMultimedia::EncodingMode)
QVideoEncoderSettings::setEncodingOption	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingOption(const QString &option, const QVariant &value);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QString &option, const QVariant &value)
QVideoEncoderSettings::setEncodingOptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingOptions(const QVariantMap &options);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QVariantMap &options)
QVideoEncoderSettings::setFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setFrameRate(qreal rate);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(qreal rate)
QVideoEncoderSettings::setQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setQuality(QMultimedia::EncodingQuality quality);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(QMultimedia::EncodingQuality quality)
QVideoEncoderSettings::setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setResolution(const QSize &);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QSize &)
QVideoEncoderSettings::setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setResolution(int width, int height);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(int width, int height)
QVideoEncoderSettings::~QVideoEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    ~QVideoEncoderSettings();$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:()
QVideoEncoderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    explicit QVideoEncoderSettingsControl(QObject *parent = nullptr);$/;"	prototype	class:QVideoEncoderSettingsControl	access:protected	signature:(QObject *parent = nullptr)
QVideoEncoderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^class Q_MULTIMEDIA_EXPORT QVideoEncoderSettingsControl : public QMediaControl$/;"	class	inherits:QMediaControl
QVideoEncoderSettingsControl::QVideoEncoderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    explicit QVideoEncoderSettingsControl(QObject *parent = nullptr);$/;"	prototype	class:QVideoEncoderSettingsControl	access:protected	signature:(QObject *parent = nullptr)
QVideoEncoderSettingsControl::setVideoSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    virtual void setVideoSettings(const QVideoEncoderSettings &settings) = 0;$/;"	prototype	class:QVideoEncoderSettingsControl	access:public	signature:(const QVideoEncoderSettings &settings)
QVideoEncoderSettingsControl::supportedFrameRates	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    virtual QList<qreal> supportedFrameRates(const QVideoEncoderSettings &settings,$/;"	prototype	class:QVideoEncoderSettingsControl	access:public	signature:(const QVideoEncoderSettings &settings, bool *continuous = nullptr) const
QVideoEncoderSettingsControl::supportedResolutions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    virtual QList<QSize> supportedResolutions(const QVideoEncoderSettings &settings,$/;"	prototype	class:QVideoEncoderSettingsControl	access:public	signature:(const QVideoEncoderSettings &settings, bool *continuous = nullptr) const
QVideoEncoderSettingsControl::supportedVideoCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    virtual QStringList supportedVideoCodecs() const = 0;$/;"	prototype	class:QVideoEncoderSettingsControl	access:public	signature:() const
QVideoEncoderSettingsControl::videoCodecDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    virtual QString videoCodecDescription(const QString &codec) const = 0;$/;"	prototype	class:QVideoEncoderSettingsControl	access:public	signature:(const QString &codec) const
QVideoEncoderSettingsControl::videoSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    virtual QVideoEncoderSettings videoSettings() const = 0;$/;"	prototype	class:QVideoEncoderSettingsControl	access:public	signature:() const
QVideoEncoderSettingsControl::~QVideoEncoderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    virtual ~QVideoEncoderSettingsControl();$/;"	prototype	class:QVideoEncoderSettingsControl	access:public	signature:()
QVideoFilterRunnable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^class Q_MULTIMEDIA_EXPORT QVideoFilterRunnable$/;"	class
QVideoFilterRunnable::LastInChain	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^        LastInChain = 0x01$/;"	enumerator	enum:QVideoFilterRunnable::RunFlag
QVideoFilterRunnable::run	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    virtual QVideoFrame run(QVideoFrame *input, const QVideoSurfaceFormat &surfaceFormat, RunFlags flags) = 0;$/;"	prototype	class:QVideoFilterRunnable	access:public	signature:(QVideoFrame *input, const QVideoSurfaceFormat &surfaceFormat, RunFlags flags)
QVideoFilterRunnable::RunFlag	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    enum RunFlag {$/;"	enum	class:QVideoFilterRunnable	access:public
QVideoFilterRunnable::~QVideoFilterRunnable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    virtual ~QVideoFilterRunnable();$/;"	prototype	class:QVideoFilterRunnable	access:public	signature:()
QVideoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVideoFrame();$/;"	prototype	class:QVideoFrame	access:public	signature:()
QVideoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVideoFrame(const QImage &image);$/;"	prototype	class:QVideoFrame	access:public	signature:(const QImage &image)
QVideoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVideoFrame(const QVideoFrame &other);$/;"	prototype	class:QVideoFrame	access:public	signature:(const QVideoFrame &other)
QVideoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVideoFrame(int bytes, const QSize &size, int bytesPerLine, PixelFormat format);$/;"	prototype	class:QVideoFrame	access:public	signature:(int bytes, const QSize &size, int bytesPerLine, PixelFormat format)
QVideoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVideoFrame(QAbstractVideoBuffer *buffer, const QSize &size, PixelFormat format);$/;"	prototype	class:QVideoFrame	access:public	signature:(QAbstractVideoBuffer *buffer, const QSize &size, PixelFormat format)
QVideoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^class Q_MULTIMEDIA_EXPORT QVideoFrame$/;"	class
QVideoFrame::availableMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVariantMap availableMetaData() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::bits	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    const uchar *bits() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::bits	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    const uchar *bits(int plane) const;$/;"	prototype	class:QVideoFrame	access:public	signature:(int plane) const
QVideoFrame::bits	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    uchar *bits();$/;"	prototype	class:QVideoFrame	access:public	signature:()
QVideoFrame::bits	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    uchar *bits(int plane);$/;"	prototype	class:QVideoFrame	access:public	signature:(int plane)
QVideoFrame::BottomField	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        BottomField,$/;"	enumerator	enum:QVideoFrame::FieldType
QVideoFrame::bytesPerLine	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    int bytesPerLine() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::bytesPerLine	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    int bytesPerLine(int plane) const;$/;"	prototype	class:QVideoFrame	access:public	signature:(int plane) const
QVideoFrame::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QExplicitlySharedDataPointer<QVideoFramePrivate> d;$/;"	member	class:QVideoFrame	access:private
QVideoFrame::endTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    qint64 endTime() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::FieldType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    enum FieldType$/;"	enum	class:QVideoFrame	access:public
QVideoFrame::fieldType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    FieldType fieldType() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::Format_AdobeDng	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_AdobeDng,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_ARGB32	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_ARGB32,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_ARGB32_Premultiplied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_ARGB32_Premultiplied,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_ARGB8565_Premultiplied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_ARGB8565_Premultiplied,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_AYUV444	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_AYUV444,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_AYUV444_Premultiplied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_AYUV444_Premultiplied,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_BGR24	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_BGR24,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_BGR32	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_BGR32,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_BGR555	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_BGR555,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_BGR565	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_BGR565,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_BGRA32	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_BGRA32,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_BGRA32_Premultiplied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_BGRA32_Premultiplied,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_BGRA5658_Premultiplied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_BGRA5658_Premultiplied,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_CameraRaw	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_CameraRaw,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_IMC1	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_IMC1,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_IMC2	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_IMC2,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_IMC3	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_IMC3,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_IMC4	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_IMC4,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_Invalid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_Invalid,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_Jpeg	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_Jpeg,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_NV12	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_NV12,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_NV21	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_NV21,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_RGB24	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_RGB24,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_RGB32	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_RGB32,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_RGB555	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_RGB555,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_RGB565	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_RGB565,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_User	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_User = 1000$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_UYVY	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_UYVY,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_Y16	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_Y16,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_Y8	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_Y8,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_YUV420P	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_YUV420P,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_YUV444	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_YUV444,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_YUYV	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_YUYV,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::Format_YV12	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        Format_YV12,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::handle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVariant handle() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::handleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QAbstractVideoBuffer::HandleType handleType() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::height	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    int height() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::imageFormatFromPixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    static QImage::Format imageFormatFromPixelFormat(PixelFormat format);$/;"	prototype	class:QVideoFrame	access:public	signature:(PixelFormat format)
QVideoFrame::InterlacedFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        InterlacedFrame$/;"	enumerator	enum:QVideoFrame::FieldType
QVideoFrame::isMapped	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    bool isMapped() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::isReadable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    bool isReadable() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::isValid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    bool isValid() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::isWritable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    bool isWritable() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::map	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    bool map(QAbstractVideoBuffer::MapMode mode);$/;"	prototype	class:QVideoFrame	access:public	signature:(QAbstractVideoBuffer::MapMode mode)
QVideoFrame::mapMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QAbstractVideoBuffer::MapMode mapMode() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::mappedBytes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    int mappedBytes() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::metaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVariant metaData(const QString &key) const;$/;"	prototype	class:QVideoFrame	access:public	signature:(const QString &key) const
QVideoFrame::NPixelFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        NPixelFormats,$/;"	enumerator	enum:QVideoFrame::PixelFormat
QVideoFrame::operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    bool operator!=(const QVideoFrame &other) const;$/;"	prototype	class:QVideoFrame	access:public	signature:(const QVideoFrame &other) const
QVideoFrame::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVideoFrame &operator =(const QVideoFrame &other);$/;"	prototype	class:QVideoFrame	access:public	signature:(const QVideoFrame &other)
QVideoFrame::operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    bool operator==(const QVideoFrame &other) const;$/;"	prototype	class:QVideoFrame	access:public	signature:(const QVideoFrame &other) const
QVideoFrame::PixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    enum PixelFormat$/;"	enum	class:QVideoFrame	access:public
QVideoFrame::pixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    PixelFormat pixelFormat() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::pixelFormatFromImageFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    static PixelFormat pixelFormatFromImageFormat(QImage::Format format);$/;"	prototype	class:QVideoFrame	access:public	signature:(QImage::Format format)
QVideoFrame::planeCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    int planeCount() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::ProgressiveFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        ProgressiveFrame,$/;"	enumerator	enum:QVideoFrame::FieldType
QVideoFrame::QVideoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVideoFrame();$/;"	prototype	class:QVideoFrame	access:public	signature:()
QVideoFrame::QVideoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVideoFrame(const QImage &image);$/;"	prototype	class:QVideoFrame	access:public	signature:(const QImage &image)
QVideoFrame::QVideoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVideoFrame(const QVideoFrame &other);$/;"	prototype	class:QVideoFrame	access:public	signature:(const QVideoFrame &other)
QVideoFrame::QVideoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVideoFrame(int bytes, const QSize &size, int bytesPerLine, PixelFormat format);$/;"	prototype	class:QVideoFrame	access:public	signature:(int bytes, const QSize &size, int bytesPerLine, PixelFormat format)
QVideoFrame::QVideoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QVideoFrame(QAbstractVideoBuffer *buffer, const QSize &size, PixelFormat format);$/;"	prototype	class:QVideoFrame	access:public	signature:(QAbstractVideoBuffer *buffer, const QSize &size, PixelFormat format)
QVideoFrame::setEndTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    void setEndTime(qint64 time);$/;"	prototype	class:QVideoFrame	access:public	signature:(qint64 time)
QVideoFrame::setFieldType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    void setFieldType(FieldType);$/;"	prototype	class:QVideoFrame	access:public	signature:(FieldType)
QVideoFrame::setMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    void setMetaData(const QString &key, const QVariant &value);$/;"	prototype	class:QVideoFrame	access:public	signature:(const QString &key, const QVariant &value)
QVideoFrame::setStartTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    void setStartTime(qint64 time);$/;"	prototype	class:QVideoFrame	access:public	signature:(qint64 time)
QVideoFrame::size	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QSize size() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::startTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    qint64 startTime() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::TopField	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        TopField,$/;"	enumerator	enum:QVideoFrame::FieldType
QVideoFrame::unmap	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    void unmap();$/;"	prototype	class:QVideoFrame	access:public	signature:()
QVideoFrame::width	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    int width() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
QVideoFrame::~QVideoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    ~QVideoFrame();$/;"	prototype	class:QVideoFrame	access:public	signature:()
QVideoOutputOrientationHandler	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideooutputorientationhandler_p.h	/^    explicit QVideoOutputOrientationHandler(QObject *parent = 0);$/;"	prototype	class:QVideoOutputOrientationHandler	access:public	signature:(QObject *parent = 0)
QVideoOutputOrientationHandler	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideooutputorientationhandler_p.h	/^class Q_MULTIMEDIA_EXPORT QVideoOutputOrientationHandler : public QObject$/;"	class	inherits:QObject
QVideoOutputOrientationHandler::currentOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideooutputorientationhandler_p.h	/^    int currentOrientation() const;$/;"	prototype	class:QVideoOutputOrientationHandler	access:public	signature:() const
QVideoOutputOrientationHandler::m_currentOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideooutputorientationhandler_p.h	/^    int m_currentOrientation;$/;"	member	class:QVideoOutputOrientationHandler	access:private
QVideoOutputOrientationHandler::orientationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideooutputorientationhandler_p.h	/^    void orientationChanged(int angle);$/;"	prototype	class:QVideoOutputOrientationHandler	access:public	signature:(int angle)
QVideoOutputOrientationHandler::QVideoOutputOrientationHandler	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideooutputorientationhandler_p.h	/^    explicit QVideoOutputOrientationHandler(QObject *parent = 0);$/;"	prototype	class:QVideoOutputOrientationHandler	access:public	signature:(QObject *parent = 0)
QVideoOutputOrientationHandler::screenOrientationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideooutputorientationhandler_p.h	/^    void screenOrientationChanged(Qt::ScreenOrientation orientation);$/;"	prototype	class:QVideoOutputOrientationHandler	access:private	signature:(Qt::ScreenOrientation orientation)
QVideoProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    explicit QVideoProbe(QObject *parent = nullptr);$/;"	prototype	class:QVideoProbe	access:public	signature:(QObject *parent = nullptr)
QVideoProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^class Q_MULTIMEDIA_EXPORT QVideoProbe : public QObject$/;"	class	inherits:QObject
QVideoProbe::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    QVideoProbePrivate *d;$/;"	member	class:QVideoProbe	access:private
QVideoProbe::flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    void flush();$/;"	prototype	class:QVideoProbe	access:public	signature:()
QVideoProbe::isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    bool isActive() const;$/;"	prototype	class:QVideoProbe	access:public	signature:() const
QVideoProbe::QVideoProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    explicit QVideoProbe(QObject *parent = nullptr);$/;"	prototype	class:QVideoProbe	access:public	signature:(QObject *parent = nullptr)
QVideoProbe::setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    bool setSource(QMediaObject *source);$/;"	prototype	class:QVideoProbe	access:public	signature:(QMediaObject *source)
QVideoProbe::setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    bool setSource(QMediaRecorder *source);$/;"	prototype	class:QVideoProbe	access:public	signature:(QMediaRecorder *source)
QVideoProbe::videoFrameProbed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    void videoFrameProbed(const QVideoFrame &frame);$/;"	prototype	class:QVideoProbe	access:public	signature:(const QVideoFrame &frame)
QVideoProbe::~QVideoProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    ~QVideoProbe();$/;"	prototype	class:QVideoProbe	access:public	signature:()
QVideoRendererControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideorenderercontrol.h	/^    explicit QVideoRendererControl(QObject *parent = nullptr);$/;"	prototype	class:QVideoRendererControl	access:protected	signature:(QObject *parent = nullptr)
QVideoRendererControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideorenderercontrol.h	/^class Q_MULTIMEDIA_EXPORT QVideoRendererControl : public QMediaControl$/;"	class	inherits:QMediaControl
QVideoRendererControl::QVideoRendererControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideorenderercontrol.h	/^    explicit QVideoRendererControl(QObject *parent = nullptr);$/;"	prototype	class:QVideoRendererControl	access:protected	signature:(QObject *parent = nullptr)
QVideoRendererControl::setSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideorenderercontrol.h	/^    virtual void setSurface(QAbstractVideoSurface *surface) = 0;$/;"	prototype	class:QVideoRendererControl	access:public	signature:(QAbstractVideoSurface *surface)
QVideoRendererControl::surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideorenderercontrol.h	/^    virtual QAbstractVideoSurface *surface() const = 0;$/;"	prototype	class:QVideoRendererControl	access:public	signature:() const
QVideoRendererControl::~QVideoRendererControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideorenderercontrol.h	/^    ~QVideoRendererControl();$/;"	prototype	class:QVideoRendererControl	access:public	signature:()
QVideoSurfaceFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QVideoSurfaceFormat($/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:( const QSize &size, QVideoFrame::PixelFormat pixelFormat, QAbstractVideoBuffer::HandleType handleType = QAbstractVideoBuffer::NoHandle)
QVideoSurfaceFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QVideoSurfaceFormat();$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:()
QVideoSurfaceFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QVideoSurfaceFormat(const QVideoSurfaceFormat &format);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const QVideoSurfaceFormat &format)
QVideoSurfaceFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^class Q_MULTIMEDIA_EXPORT QVideoSurfaceFormat$/;"	class
QVideoSurfaceFormat::BottomToTop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        BottomToTop$/;"	enumerator	enum:QVideoSurfaceFormat::Direction
QVideoSurfaceFormat::d	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QSharedDataPointer<QVideoSurfaceFormatPrivate> d;$/;"	member	class:QVideoSurfaceFormat	access:private
QVideoSurfaceFormat::Direction	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    enum Direction$/;"	enum	class:QVideoSurfaceFormat	access:public
QVideoSurfaceFormat::frameHeight	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    int frameHeight() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
QVideoSurfaceFormat::frameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    qreal frameRate() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
QVideoSurfaceFormat::frameSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QSize frameSize() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
QVideoSurfaceFormat::frameWidth	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    int frameWidth() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
QVideoSurfaceFormat::handleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QAbstractVideoBuffer::HandleType handleType() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
QVideoSurfaceFormat::isMirrored	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    bool isMirrored() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
QVideoSurfaceFormat::isValid	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    bool isValid() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
QVideoSurfaceFormat::operator !=	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    bool operator !=(const QVideoSurfaceFormat &format) const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const QVideoSurfaceFormat &format) const
QVideoSurfaceFormat::operator =	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QVideoSurfaceFormat &operator =(const QVideoSurfaceFormat &format);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const QVideoSurfaceFormat &format)
QVideoSurfaceFormat::operator ==	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    bool operator ==(const QVideoSurfaceFormat &format) const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const QVideoSurfaceFormat &format) const
QVideoSurfaceFormat::pixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QSize pixelAspectRatio() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
QVideoSurfaceFormat::pixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QVideoFrame::PixelFormat pixelFormat() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
QVideoSurfaceFormat::property	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QVariant property(const char *name) const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const char *name) const
QVideoSurfaceFormat::propertyNames	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QList<QByteArray> propertyNames() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
QVideoSurfaceFormat::QVideoSurfaceFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QVideoSurfaceFormat($/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:( const QSize &size, QVideoFrame::PixelFormat pixelFormat, QAbstractVideoBuffer::HandleType handleType = QAbstractVideoBuffer::NoHandle)
QVideoSurfaceFormat::QVideoSurfaceFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QVideoSurfaceFormat();$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:()
QVideoSurfaceFormat::QVideoSurfaceFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QVideoSurfaceFormat(const QVideoSurfaceFormat &format);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const QVideoSurfaceFormat &format)
QVideoSurfaceFormat::scanLineDirection	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    Direction scanLineDirection() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
QVideoSurfaceFormat::setFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setFrameRate(qreal rate);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(qreal rate)
QVideoSurfaceFormat::setFrameSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setFrameSize(const QSize &size);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const QSize &size)
QVideoSurfaceFormat::setFrameSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setFrameSize(int width, int height);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(int width, int height)
QVideoSurfaceFormat::setMirrored	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setMirrored(bool mirrored);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(bool mirrored)
QVideoSurfaceFormat::setPixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setPixelAspectRatio(const QSize &ratio);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const QSize &ratio)
QVideoSurfaceFormat::setPixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setPixelAspectRatio(int width, int height);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(int width, int height)
QVideoSurfaceFormat::setProperty	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setProperty(const char *name, const QVariant &value);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const char *name, const QVariant &value)
QVideoSurfaceFormat::setScanLineDirection	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setScanLineDirection(Direction direction);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(Direction direction)
QVideoSurfaceFormat::setViewport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setViewport(const QRect &viewport);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const QRect &viewport)
QVideoSurfaceFormat::setYCbCrColorSpace	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setYCbCrColorSpace(YCbCrColorSpace colorSpace);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(YCbCrColorSpace colorSpace)
QVideoSurfaceFormat::sizeHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QSize sizeHint() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
QVideoSurfaceFormat::TopToBottom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        TopToBottom,$/;"	enumerator	enum:QVideoSurfaceFormat::Direction
QVideoSurfaceFormat::viewport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QRect viewport() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
QVideoSurfaceFormat::YCbCrColorSpace	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    enum YCbCrColorSpace$/;"	enum	class:QVideoSurfaceFormat	access:public
QVideoSurfaceFormat::yCbCrColorSpace	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    YCbCrColorSpace yCbCrColorSpace() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
QVideoSurfaceFormat::YCbCr_BT601	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        YCbCr_BT601,$/;"	enumerator	enum:QVideoSurfaceFormat::YCbCrColorSpace
QVideoSurfaceFormat::YCbCr_BT709	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        YCbCr_BT709,$/;"	enumerator	enum:QVideoSurfaceFormat::YCbCrColorSpace
QVideoSurfaceFormat::YCbCr_CustomMatrix	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        YCbCr_CustomMatrix$/;"	enumerator	enum:QVideoSurfaceFormat::YCbCrColorSpace
QVideoSurfaceFormat::YCbCr_JPEG	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        YCbCr_JPEG,$/;"	enumerator	enum:QVideoSurfaceFormat::YCbCrColorSpace
QVideoSurfaceFormat::YCbCr_Undefined	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        YCbCr_Undefined,$/;"	enumerator	enum:QVideoSurfaceFormat::YCbCrColorSpace
QVideoSurfaceFormat::YCbCr_xvYCC601	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        YCbCr_xvYCC601,$/;"	enumerator	enum:QVideoSurfaceFormat::YCbCrColorSpace
QVideoSurfaceFormat::YCbCr_xvYCC709	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        YCbCr_xvYCC709,$/;"	enumerator	enum:QVideoSurfaceFormat::YCbCrColorSpace
QVideoSurfaceFormat::~QVideoSurfaceFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    ~QVideoSurfaceFormat();$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:()
QVideoSurfaceGstDelegate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QVideoSurfaceGstDelegate(QAbstractVideoSurface *surface);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:(QAbstractVideoSurface *surface)
QVideoSurfaceGstDelegate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^class QVideoSurfaceGstDelegate : public QObject$/;"	class	inherits:QObject
QVideoSurfaceGstDelegate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QVideoSurfaceGstDelegate(QAbstractVideoSurface *surface);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:(QAbstractVideoSurface *surface)
QVideoSurfaceGstDelegate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^class QVideoSurfaceGstDelegate : public QObject$/;"	class	inherits:QObject
QVideoSurfaceGstDelegate::caps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstCaps *caps();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
QVideoSurfaceGstDelegate::clearPoolBuffers	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void clearPoolBuffers();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
QVideoSurfaceGstDelegate::flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    void flush();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
QVideoSurfaceGstDelegate::flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void flush();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
QVideoSurfaceGstDelegate::handleEvent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool handleEvent(QMutexLocker *locker);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:(QMutexLocker *locker)
QVideoSurfaceGstDelegate::isActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    bool isActive();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
QVideoSurfaceGstDelegate::m_activeRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QGstVideoRenderer *m_activeRenderer;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_bytesPerLine	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    int m_bytesPerLine;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_flush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool m_flush;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QVideoSurfaceFormat m_format;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_frame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QVideoFrame m_frame;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_mutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QMutex m_mutex;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_mutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QMutex m_mutex;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_notified	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool m_notified;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_pool	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QGstBufferPoolInterface *m_pool;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_poolMutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QMutex m_poolMutex;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_pools	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QList<QGstBufferPoolInterface *> m_pools;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_renderBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstBuffer *m_renderBuffer;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_renderCondition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QWaitCondition m_renderCondition;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_renderCondition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QWaitCondition m_renderCondition;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_renderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QGstVideoRenderer *m_renderer;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_renderers	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QList<QGstVideoRenderer *> m_renderers;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_renderReturn	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstFlowReturn m_renderReturn;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_renderReturn	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    GstFlowReturn m_renderReturn;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_setupCondition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QWaitCondition m_setupCondition;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_setupCondition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QWaitCondition m_setupCondition;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_startCanceled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    bool m_startCanceled;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_startCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstCaps *m_startCaps;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_started	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    bool m_started;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool m_stop;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_supportedPixelFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QList<QVideoFrame::PixelFormat> m_supportedPixelFormats;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_supportedPoolPixelFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QList<QVideoFrame::PixelFormat> m_supportedPoolPixelFormats;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QPointer<QAbstractVideoSurface> m_surface;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QPointer<QAbstractVideoSurface> m_surface;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::m_surfaceCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstCaps *m_surfaceCaps;$/;"	member	class:QVideoSurfaceGstDelegate	access:private
QVideoSurfaceGstDelegate::notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    void notify();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:()
QVideoSurfaceGstDelegate::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool event(QEvent *event) override;$/;"	member	class:QVideoSurfaceGstDelegate	access:public
QVideoSurfaceGstDelegate::pool	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QGstBufferPoolInterface *pool() { return m_pool; }$/;"	function	class:QVideoSurfaceGstDelegate	access:public	signature:()
QVideoSurfaceGstDelegate::poolMutex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QMutex *poolMutex() { return &m_poolMutex; }$/;"	function	class:QVideoSurfaceGstDelegate	access:public	signature:()
QVideoSurfaceGstDelegate::proposeAllocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool proposeAllocation(GstQuery *query);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:(GstQuery *query)
QVideoSurfaceGstDelegate::queuedFlush	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void queuedFlush();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:()
QVideoSurfaceGstDelegate::queuedRender	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void queuedRender();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:()
QVideoSurfaceGstDelegate::queuedStart	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void queuedStart();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:()
QVideoSurfaceGstDelegate::queuedStop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void queuedStop();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:()
QVideoSurfaceGstDelegate::QVideoSurfaceGstDelegate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    QVideoSurfaceGstDelegate(QAbstractVideoSurface *surface);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:(QAbstractVideoSurface *surface)
QVideoSurfaceGstDelegate::QVideoSurfaceGstDelegate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QVideoSurfaceGstDelegate(QAbstractVideoSurface *surface);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:(QAbstractVideoSurface *surface)
QVideoSurfaceGstDelegate::render	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstFlowReturn render(GstBuffer *buffer);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:(GstBuffer *buffer)
QVideoSurfaceGstDelegate::render	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    GstFlowReturn render(GstBuffer *buffer);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:(GstBuffer *buffer)
QVideoSurfaceGstDelegate::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool start(GstCaps *caps);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:(GstCaps *caps)
QVideoSurfaceGstDelegate::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    bool start(const QVideoSurfaceFormat &format, int bytesPerLine);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:(const QVideoSurfaceFormat &format, int bytesPerLine)
QVideoSurfaceGstDelegate::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    void stop();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
QVideoSurfaceGstDelegate::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void stop();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
QVideoSurfaceGstDelegate::supportedPixelFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QList<QVideoFrame::PixelFormat> supportedPixelFormats($/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:( QAbstractVideoBuffer::HandleType handleType = QAbstractVideoBuffer::NoHandle) const
QVideoSurfaceGstDelegate::surfaceFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QVideoSurfaceFormat surfaceFormat() const;$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:() const
QVideoSurfaceGstDelegate::unlock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    void unlock();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
QVideoSurfaceGstDelegate::unlock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void unlock();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
QVideoSurfaceGstDelegate::updateSupportedFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    void updateSupportedFormats();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:()
QVideoSurfaceGstDelegate::updateSupportedFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void updateSupportedFormats();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:()
QVideoSurfaceGstDelegate::waitForAsyncEvent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool waitForAsyncEvent(QMutexLocker *locker, QWaitCondition *condition, unsigned long time);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:(QMutexLocker *locker, QWaitCondition *condition, unsigned long time)
QVideoSurfaceGstDelegate::~QVideoSurfaceGstDelegate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    ~QVideoSurfaceGstDelegate();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
QVideoSurfaceGstDelegate::~QVideoSurfaceGstDelegate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    ~QVideoSurfaceGstDelegate();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
QVideoSurfaceGstSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^class QVideoSurfaceGstSink$/;"	class
QVideoSurfaceGstSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^typedef QGstVideoRendererSink QVideoSurfaceGstSink;$/;"	typedef
QVideoSurfaceGstSink::base_init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static void base_init(gpointer g_class);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(gpointer g_class)
QVideoSurfaceGstSink::buffer_alloc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static GstFlowReturn buffer_alloc($/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:( GstBaseSink *sink, guint64 offset, guint size, GstCaps *caps, GstBuffer **buffer)
QVideoSurfaceGstSink::change_state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static GstStateChangeReturn change_state(GstElement *element, GstStateChange transition);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GstElement *element, GstStateChange transition)
QVideoSurfaceGstSink::class_init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static void class_init(gpointer g_class, gpointer class_data);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(gpointer g_class, gpointer class_data)
QVideoSurfaceGstSink::createSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static QVideoSurfaceGstSink *createSink(QAbstractVideoSurface *surface);$/;"	prototype	class:QVideoSurfaceGstSink	access:public	signature:(QAbstractVideoSurface *surface)
QVideoSurfaceGstSink::finalize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static void finalize(GObject *object);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GObject *object)
QVideoSurfaceGstSink::get_caps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static GstCaps *get_caps(GstBaseSink *sink);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GstBaseSink *sink)
QVideoSurfaceGstSink::get_type	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static GType get_type();$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:()
QVideoSurfaceGstSink::handleShowPrerollChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static void handleShowPrerollChange(GObject *o, GParamSpec *p, gpointer d);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GObject *o, GParamSpec *p, gpointer d)
QVideoSurfaceGstSink::instance_init	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static void instance_init(GTypeInstance *instance, gpointer g_class);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GTypeInstance *instance, gpointer g_class)
QVideoSurfaceGstSink::parent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    GstVideoSink parent;$/;"	member	class:QVideoSurfaceGstSink	access:public
QVideoSurfaceGstSink::setSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static void setSurface(QAbstractVideoSurface *surface) { Q_UNUSED(surface); }$/;"	function	class:QVideoSurfaceGstSink	access:public	signature:(QAbstractVideoSurface *surface)
QVideoSurfaceGstSink::set_caps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static gboolean set_caps(GstBaseSink *sink, GstCaps *caps);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GstBaseSink *sink, GstCaps *caps)
QVideoSurfaceGstSink::start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static gboolean start(GstBaseSink *sink);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GstBaseSink *sink)
QVideoSurfaceGstSink::stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static gboolean stop(GstBaseSink *sink);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GstBaseSink *sink)
QVideoSurfaceGstSink::unlock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static gboolean unlock(GstBaseSink *sink);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GstBaseSink *sink)
QVideoSurfaceOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    QVideoSurfaceOutput(QObject*parent = 0);$/;"	prototype	class:QVideoSurfaceOutput	access:public	signature:(QObject*parent = 0)
QVideoSurfaceOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^class QVideoSurfaceOutput : public QObject, public QMediaBindableInterface$/;"	class	inherits:QObject,QMediaBindableInterface
QVideoSurfaceOutput::m_control	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    QPointer<QVideoRendererControl> m_control;$/;"	member	class:QVideoSurfaceOutput	access:private
QVideoSurfaceOutput::m_object	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    QPointer<QMediaObject> m_object;$/;"	member	class:QVideoSurfaceOutput	access:private
QVideoSurfaceOutput::m_service	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    QPointer<QMediaService> m_service;$/;"	member	class:QVideoSurfaceOutput	access:private
QVideoSurfaceOutput::m_surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    QPointer<QAbstractVideoSurface> m_surface;$/;"	member	class:QVideoSurfaceOutput	access:private
QVideoSurfaceOutput::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    bool setMediaObject(QMediaObject *object) override;$/;"	member	class:QVideoSurfaceOutput	access:protected
QVideoSurfaceOutput::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    QMediaObject *mediaObject() const override;$/;"	member	class:QVideoSurfaceOutput	access:public
QVideoSurfaceOutput::QVideoSurfaceOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    QVideoSurfaceOutput(QObject*parent = 0);$/;"	prototype	class:QVideoSurfaceOutput	access:public	signature:(QObject*parent = 0)
QVideoSurfaceOutput::setVideoSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    void setVideoSurface(QAbstractVideoSurface *surface);$/;"	prototype	class:QVideoSurfaceOutput	access:public	signature:(QAbstractVideoSurface *surface)
QVideoSurfaceOutput::~QVideoSurfaceOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    ~QVideoSurfaceOutput();$/;"	prototype	class:QVideoSurfaceOutput	access:public	signature:()
QVideoWindowControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    explicit QVideoWindowControl(QObject *parent = nullptr);$/;"	prototype	class:QVideoWindowControl	access:protected	signature:(QObject *parent = nullptr)
QVideoWindowControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^class Q_MULTIMEDIA_EXPORT QVideoWindowControl : public QMediaControl$/;"	class	inherits:QMediaControl
QVideoWindowControl::aspectRatioMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual Qt::AspectRatioMode aspectRatioMode() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
QVideoWindowControl::brightness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual int brightness() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
QVideoWindowControl::brightnessChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    void brightnessChanged(int brightness);$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int brightness)
QVideoWindowControl::contrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual int contrast() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
QVideoWindowControl::contrastChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    void contrastChanged(int contrast);$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int contrast)
QVideoWindowControl::displayRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual QRect displayRect() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
QVideoWindowControl::fullScreenChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    void fullScreenChanged(bool fullScreen);$/;"	prototype	class:QVideoWindowControl	access:public	signature:(bool fullScreen)
QVideoWindowControl::hue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual int hue() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
QVideoWindowControl::hueChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    void hueChanged(int hue);$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int hue)
QVideoWindowControl::isFullScreen	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual bool isFullScreen() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
QVideoWindowControl::nativeSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual QSize nativeSize() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
QVideoWindowControl::nativeSizeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    void nativeSizeChanged();$/;"	prototype	class:QVideoWindowControl	access:public	signature:()
QVideoWindowControl::QVideoWindowControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    explicit QVideoWindowControl(QObject *parent = nullptr);$/;"	prototype	class:QVideoWindowControl	access:protected	signature:(QObject *parent = nullptr)
QVideoWindowControl::repaint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void repaint() = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:()
QVideoWindowControl::saturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual int saturation() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
QVideoWindowControl::saturationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    void saturationChanged(int saturation);$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int saturation)
QVideoWindowControl::setAspectRatioMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setAspectRatioMode(Qt::AspectRatioMode mode) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(Qt::AspectRatioMode mode)
QVideoWindowControl::setBrightness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setBrightness(int brightness) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int brightness)
QVideoWindowControl::setContrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setContrast(int contrast) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int contrast)
QVideoWindowControl::setDisplayRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setDisplayRect(const QRect &rect) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(const QRect &rect)
QVideoWindowControl::setFullScreen	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setFullScreen(bool fullScreen) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(bool fullScreen)
QVideoWindowControl::setHue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setHue(int hue) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int hue)
QVideoWindowControl::setSaturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setSaturation(int saturation) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int saturation)
QVideoWindowControl::setWinId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setWinId(WId id) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(WId id)
QVideoWindowControl::winId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual WId winId() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
QVideoWindowControl::~QVideoWindowControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    ~QVideoWindowControl();$/;"	prototype	class:QVideoWindowControl	access:public	signature:()
QWaveDecoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    explicit QWaveDecoder(QIODevice *source, QObject *parent = 0);$/;"	prototype	class:QWaveDecoder	access:public	signature:(QIODevice *source, QObject *parent = 0)
QWaveDecoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^class QWaveDecoder : public QIODevice$/;"	class	inherits:QIODevice
QWaveDecoder::audioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    QAudioFormat audioFormat() const;$/;"	prototype	class:QWaveDecoder	access:public	signature:() const
QWaveDecoder::bigEndian	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    bool bigEndian;$/;"	member	class:QWaveDecoder	access:private
QWaveDecoder::chunk	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    struct chunk$/;"	struct	class:QWaveDecoder	access:private
QWaveDecoder::chunk::id	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        char        id[4];$/;"	member	struct:QWaveDecoder::chunk	access:public
QWaveDecoder::chunk::size	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        quint32     size;$/;"	member	struct:QWaveDecoder::chunk	access:public
QWaveDecoder::dataSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    qint64 dataSize;$/;"	member	class:QWaveDecoder	access:private
QWaveDecoder::discardBytes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    void discardBytes(qint64 numBytes);$/;"	prototype	class:QWaveDecoder	access:private	signature:(qint64 numBytes)
QWaveDecoder::duration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    int duration() const;$/;"	prototype	class:QWaveDecoder	access:public	signature:() const
QWaveDecoder::enoughDataAvailable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    bool enoughDataAvailable();$/;"	prototype	class:QWaveDecoder	access:private	signature:()
QWaveDecoder::findChunk	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    bool findChunk(const char *chunkId);$/;"	prototype	class:QWaveDecoder	access:private	signature:(const char *chunkId)
QWaveDecoder::format	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    QAudioFormat format;$/;"	member	class:QWaveDecoder	access:private
QWaveDecoder::formatKnown	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    void formatKnown();$/;"	prototype	class:QWaveDecoder	access:public	signature:()
QWaveDecoder::handleData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    void handleData();$/;"	prototype	class:QWaveDecoder	access:private	signature:()
QWaveDecoder::haveFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    bool haveFormat;$/;"	member	class:QWaveDecoder	access:private
QWaveDecoder::InitialState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        InitialState,$/;"	enumerator	enum:QWaveDecoder::State
QWaveDecoder::junkToSkip	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    quint32 junkToSkip;$/;"	member	class:QWaveDecoder	access:private
QWaveDecoder::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    bool isSequential() const override;$/;"	member	class:QWaveDecoder	access:public
QWaveDecoder::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    qint64 bytesAvailable() const override;$/;"	member	class:QWaveDecoder	access:public
QWaveDecoder::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    qint64 readData(char *data, qint64 maxlen) override;$/;"	member	class:QWaveDecoder	access:private
QWaveDecoder::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    qint64 size() const override;$/;"	member	class:QWaveDecoder	access:public
QWaveDecoder::override	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    qint64 writeData(const char *data, qint64 len) override;$/;"	member	class:QWaveDecoder	access:private
QWaveDecoder::parsingError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    void parsingError();$/;"	prototype	class:QWaveDecoder	access:public	signature:()
QWaveDecoder::parsingFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    void parsingFailed();$/;"	prototype	class:QWaveDecoder	access:private	signature:()
QWaveDecoder::peekChunk	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    bool peekChunk(chunk* pChunk, bool handleEndianness = true);$/;"	prototype	class:QWaveDecoder	access:private	signature:(chunk* pChunk, bool handleEndianness = true)
QWaveDecoder::QWaveDecoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    explicit QWaveDecoder(QIODevice *source, QObject *parent = 0);$/;"	prototype	class:QWaveDecoder	access:public	signature:(QIODevice *source, QObject *parent = 0)
QWaveDecoder::RIFFHeader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    struct RIFFHeader$/;"	struct	class:QWaveDecoder	access:private
QWaveDecoder::RIFFHeader::descriptor	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        chunk       descriptor;$/;"	member	struct:QWaveDecoder::RIFFHeader	access:public
QWaveDecoder::RIFFHeader::type	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        char        type[4];$/;"	member	struct:QWaveDecoder::RIFFHeader	access:public
QWaveDecoder::source	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    QIODevice *source;$/;"	member	class:QWaveDecoder	access:private
QWaveDecoder::State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    enum State {$/;"	enum	class:QWaveDecoder	access:private
QWaveDecoder::state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    State state;$/;"	member	class:QWaveDecoder	access:private
QWaveDecoder::WaitingForDataState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        WaitingForDataState$/;"	enumerator	enum:QWaveDecoder::State
QWaveDecoder::WaitingForFormatState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        WaitingForFormatState,$/;"	enumerator	enum:QWaveDecoder::State
QWaveDecoder::WAVEHeader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    struct WAVEHeader$/;"	struct	class:QWaveDecoder	access:private
QWaveDecoder::WAVEHeader::audioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        quint16     audioFormat;$/;"	member	struct:QWaveDecoder::WAVEHeader	access:public
QWaveDecoder::WAVEHeader::bitsPerSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        quint16     bitsPerSample;$/;"	member	struct:QWaveDecoder::WAVEHeader	access:public
QWaveDecoder::WAVEHeader::blockAlign	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        quint16     blockAlign;$/;"	member	struct:QWaveDecoder::WAVEHeader	access:public
QWaveDecoder::WAVEHeader::byteRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        quint32     byteRate;$/;"	member	struct:QWaveDecoder::WAVEHeader	access:public
QWaveDecoder::WAVEHeader::descriptor	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        chunk       descriptor;$/;"	member	struct:QWaveDecoder::WAVEHeader	access:public
QWaveDecoder::WAVEHeader::numChannels	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        quint16     numChannels;$/;"	member	struct:QWaveDecoder::WAVEHeader	access:public
QWaveDecoder::WAVEHeader::sampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        quint32     sampleRate;$/;"	member	struct:QWaveDecoder::WAVEHeader	access:public
QWaveDecoder::~QWaveDecoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    ~QWaveDecoder();$/;"	prototype	class:QWaveDecoder	access:public	signature:()
Q_DECLARE_METATYPE	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^Q_DECLARE_METATYPE(QGstreamerMessage);$/;"	prototype	signature:(QGstreamerMessage)
Q_DECL_NOTHROW	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        Q_DECL_CONSTEXPR FrameRateRange() Q_DECL_NOTHROW$/;"	member	struct:QCamera::FrameRateRange	access:public
Q_DECL_NOTHROW	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        Q_DECL_CONSTEXPR FrameRateRange(qreal minimum, qreal maximum) Q_DECL_NOTHROW$/;"	member	struct:QCamera::FrameRateRange	access:public
Q_DECL_NOTHROW	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    friend Q_MULTIMEDIA_EXPORT bool operator==(const QCameraViewfinderSettings &lhs, const QCameraViewfinderSettings &rhs) Q_DECL_NOTHROW;$/;"	member	class:QCameraViewfinderSettings	access:public
Q_PROPERTY	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    Q_PROPERTY(QQmlListProperty<QAbstractVideoFilter> filters READ filters);$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:(QQmlListProperty<QAbstractVideoFilter> filters READ filters)
q_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qabstractvideobuffer_p.h	/^    QAbstractVideoBuffer *q_ptr;$/;"	member	class:QAbstractVideoBufferPrivate	access:public
q_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediacontrol_p.h	/^    QMediaControl *q_ptr;$/;"	member	class:QMediaControlPrivate	access:public
q_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    QMediaObject *q_ptr;$/;"	member	class:QMediaObjectPrivate	access:public
q_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    QMediaPlaylist *q_ptr;$/;"	member	class:QMediaPlaylistPrivate	access:public
q_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaRecorder *q_ptr;$/;"	member	class:QMediaRecorderPrivate	access:public
q_ptr	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaservice_p.h	/^    QMediaService *q_ptr;$/;"	member	class:QMediaServicePrivate	access:public
radioData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    QRadioData *radioData() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
radioText	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QString radioText() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
radioText	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual QString radioText() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
radioTextChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void radioTextChanged(QString radioText);$/;"	prototype	class:QRadioData	access:public	signature:(QString radioText)
radioTextChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    void radioTextChanged(QString radioText);$/;"	prototype	class:QRadioDataControl	access:public	signature:(QString radioText)
Random	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum PlaybackMode { CurrentItemOnce, CurrentItemInLoop, Sequential, Loop, Random };$/;"	enumerator	enum:QMediaPlaylist::PlaybackMode
rank	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^        GstRank rank;$/;"	member	struct:QGstCodecsInfo::CodecInfo	access:public
RatingOrganization	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString RatingOrganization;$/;"	member	namespace:QMediaMetaData
rawMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^    GstMessage* rawMessage() const;$/;"	prototype	class:QGstreamerMessage	access:public	signature:() const
read	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    QAudioBuffer read() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
read	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual QAudioBuffer read() = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:()
readItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual QMediaContent readItem() = 0;$/;"	prototype	class:QMediaPlaylistReader	access:public	signature:()
readItems	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    bool readItems(QMediaPlaylistReader *reader);$/;"	prototype	class:QMediaPlaylistPrivate	access:public	signature:(QMediaPlaylistReader *reader)
ReadOnly	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        ReadOnly  = 0x01,$/;"	enumerator	enum:QAbstractVideoBuffer::MapMode
readSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void readSample();$/;"	prototype	class:QSample	access:private	signature:()
ReadWrite	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        ReadWrite = ReadOnly | WriteOnly$/;"	enumerator	enum:QAbstractVideoBuffer::MapMode
Ready	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^        Ready,$/;"	enumerator	enum:QSample::State
ready	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void ready();$/;"	prototype	class:QSample	access:public	signature:()
Ready	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^        Ready,$/;"	enumerator	enum:QSoundEffect::Status
readyChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void readyChanged(bool);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:(bool)
readyChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    void readyChanged(bool);$/;"	prototype	class:QGstreamerVideoRenderer	access:public	signature:(bool)
readyChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void readyChanged(bool);$/;"	prototype	class:QGstreamerVideoWidgetControl	access:public	signature:(bool)
readyChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void readyChanged(bool);$/;"	prototype	class:QGstreamerVideoWindow	access:public	signature:(bool)
readyForCaptureChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void readyForCaptureChanged(bool ready);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(bool ready)
readyForCaptureChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    void readyForCaptureChanged(bool ready);$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(bool ready)
realm	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QString realm() const;$/;"	prototype	class:QAudioDeviceInfo	access:private	signature:() const
record	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void record();$/;"	prototype	class:QMediaRecorder	access:public	signature:()
RecordingInProgress	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        RecordingInProgress,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
RecordingStarted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        RecordingStarted,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
RecordingState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        RecordingState,$/;"	enumerator	enum:QMediaRecorder::State
RecordingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        RecordingStatus,$/;"	enumerator	enum:QMediaRecorder::Status
RecordingStopped	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        RecordingStopped,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
RecordingSupport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^        RecordingSupport = 0x02,$/;"	enumerator	enum:QMediaServiceProviderHint::Feature
refresh	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void refresh(qint64 usageChange);$/;"	prototype	class:QSampleCache	access:private	signature:(qint64 usageChange)
release	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual void release() = 0;$/;"	prototype	class:QAbstractAudioBuffer	access:public	signature:()
release	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    virtual void release() = 0;$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:()
release	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void release();$/;"	prototype	class:QSample	access:public	signature:()
release	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void release();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
release	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void release();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
release	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual void release();$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:()
release	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual void release(QMediaService *service) = 0;$/;"	prototype	struct:QMediaServiceProviderFactoryInterface	access:public	signature:(QMediaService *service)
releaseControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void releaseControl() = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:()
releaseControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^    virtual void releaseControl(QMediaControl *control) = 0;$/;"	prototype	class:QMediaService	access:public	signature:(QMediaControl *control)
releaseResources	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void releaseResources() { }$/;"	function	class:QDeclarativeVideoBackend	access:public	signature:()
releaseService	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual void releaseService(QMediaService *service) = 0;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(QMediaService *service)
releaseSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void releaseSource() = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:()
Religion	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        ChildrensProgrammes, SocialAffairs, Religion,$/;"	enumerator	enum:QRadioData::ProgramType
ReligiousMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        ReligiousMusic, ReligiousTalk, Personality, Public,$/;"	enumerator	enum:QRadioData::ProgramType
ReligiousTalk	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        ReligiousMusic, ReligiousTalk, Personality, Public,$/;"	enumerator	enum:QRadioData::ProgramType
relinked	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  gboolean relinked;$/;"	member	struct:_GstVideoConnector	access:public
ReloadSampleWhenDone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^        ReloadSampleWhenDone = 0x1$/;"	enumerator	enum:QSoundEffectPrivate::EmptyStreamOption
removeAudioBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void removeAudioBufferProbe();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
removeInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    void removeInterval(const QMediaTimeInterval &interval);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeInterval &interval)
removeInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    void removeInterval(qint64 start, qint64 end);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(qint64 start, qint64 end)
removeMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool removeMedia(int pos);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int pos)
removeMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool removeMedia(int start, int end);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(int start, int end)
removeMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool removeMedia(int pos);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int pos)
removeMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool removeMedia(int start, int end);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int start, int end)
removeMessageFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    void removeMessageFilter(QObject *filter);$/;"	prototype	class:QGstreamerBusHelper	access:public	signature:(QObject *filter)
removeProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void removeProbe(QGstreamerAudioProbeControl* probe);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QGstreamerAudioProbeControl* probe)
removeProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void removeProbe(QGstreamerVideoProbeControl* probe);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QGstreamerVideoProbeControl* probe)
removeProbeFromPad	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    void removeProbeFromPad(GstPad *pad);$/;"	prototype	class:QGstreamerBufferProbe	access:public	signature:(GstPad *pad)
removePropertyWatch	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void removePropertyWatch(QByteArray const &name);$/;"	prototype	class:QMediaObject	access:protected	signature:(QByteArray const &name)
removeTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    void removeTimeRange(const QMediaTimeRange&);$/;"	prototype	class:QMediaTimeRange	access:public	signature:(const QMediaTimeRange&)
removeUnreferencedSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void removeUnreferencedSample(QSample* sample);$/;"	prototype	class:QSampleCache	access:private	signature:(QSample* sample)
removeVideoBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void removeVideoBufferProbe();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
render	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    GstFlowReturn render(GstBuffer *buffer);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:(GstBuffer *buffer)
render	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    GstFlowReturn render(GstBuffer *buffer);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:(GstBuffer *buffer)
renderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QGstreamerVideoRendererInterface *renderer() const { return m_renderer; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
rendererChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void rendererChanged();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
renderFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void renderFrame();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:private	signature:()
repaint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void repaint() = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:()
request	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QNetworkRequest request() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
Request	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        Request,$/;"	enumerator	enum:QMediaResource::Property
request	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QNetworkRequest request() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
requestControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^    template <typename T> inline T requestControl() {$/;"	function	class:QMediaService	access:public	signature:()
requestControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^    virtual QMediaControl* requestControl(const char *name) = 0;$/;"	prototype	class:QMediaService	access:public	signature:(const char *name)
requestedAperture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    qreal requestedAperture() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
requestedDigitalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    virtual qreal requestedDigitalZoom() const = 0;$/;"	prototype	class:QCameraZoomControl	access:public	signature:() const
requestedDigitalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    void requestedDigitalZoomChanged(qreal digitalZoom);$/;"	prototype	class:QCameraZoomControl	access:public	signature:(qreal digitalZoom)
requestedIsoSensitivity	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    int requestedIsoSensitivity() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
requestedLocks	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCamera::LockTypes requestedLocks;$/;"	member	class:QCameraPrivate	access:public
requestedLocks	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCamera::LockTypes requestedLocks() const;$/;"	prototype	class:QCamera	access:public	signature:() const
requestedOpticalZoom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    virtual qreal requestedOpticalZoom() const = 0;$/;"	prototype	class:QCameraZoomControl	access:public	signature:() const
requestedOpticalZoomChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    void requestedOpticalZoomChanged(qreal opticalZoom);$/;"	prototype	class:QCameraZoomControl	access:public	signature:(qreal opticalZoom)
requestedShutterSpeed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    qreal requestedShutterSpeed() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
requestedValue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    virtual QVariant requestedValue(ExposureParameter parameter) const = 0;$/;"	prototype	class:QCameraExposureControl	access:public	signature:(ExposureParameter parameter) const
requestedValueChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    void requestedValueChanged(int parameter);$/;"	prototype	class:QCameraExposureControl	access:public	signature:(int parameter)
requestSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    QSample* requestSample(const QUrl& url);$/;"	prototype	class:QSampleCache	access:public	signature:(const QUrl& url)
requestService	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QMediaService* requestService(const QByteArray &type, const QMediaServiceProviderHint &hint = QMediaServiceProviderHint()) = 0;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &type, const QMediaServiceProviderHint &hint = QMediaServiceProviderHint())
resend_new_segment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  void (*resend_new_segment) (GstElement * element, gboolean emitFailedSignal);$/;"	member	struct:_GstVideoConnectorClass	access:public
reset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void reset();$/;"	prototype	class:QAudioInput	access:public	signature:()
reset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void reset();$/;"	prototype	class:QAudioOutput	access:public	signature:()
reset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void reset() = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:()
reset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void reset() = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:()
resetEventFeedback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    virtual void resetEventFeedback(EventType) = 0;$/;"	prototype	class:QCameraFeedbackControl	access:public	signature:(EventType)
resolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    QSize resolution() const;$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:() const
Resolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^        Resolution,$/;"	enumerator	enum:QCameraViewfinderSettingsControl::ViewfinderParameter
resolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QSize resolution() const;$/;"	prototype	class:QImageEncoderSettings	access:public	signature:() const
resolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    QSize resolution() const;$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:() const
Resolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Resolution;$/;"	member	namespace:QMediaMetaData
Resolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        Resolution$/;"	enumerator	enum:QMediaResource::Property
resolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QSize resolution() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        ResourceError,$/;"	enumerator	enum:QPlaylistFileParser::ParserError
ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^        ResourceError$/;"	enumerator	enum:QAbstractVideoSurface::Error
ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^        ResourceError,$/;"	enumerator	enum:QAudioDecoder::Error
ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        ResourceError,$/;"	enumerator	enum:QCameraImageCapture::Error
ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        ResourceError,$/;"	enumerator	enum:QMediaPlayer::Error
ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        ResourceError,$/;"	enumerator	enum:QMediaRecorder::Error
ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        ResourceError$/;"	enumerator	enum:QMultimedia::AvailabilityStatus
ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioData::Error
ResourceError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Error { NoError, ResourceError, OpenError, OutOfRangeError };$/;"	enumerator	enum:QRadioTuner::Error
resources	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QMediaPlayerResourceSetInterface* resources() const;$/;"	prototype	class:QGstreamerPlayerControl	access:public	signature:() const
resources	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    QMediaResourceList resources() const;$/;"	prototype	class:QMediaContent	access:public	signature:() const
resourcesDenied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    void resourcesDenied();$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:()
resourcesGranted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    void resourcesGranted();$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:()
resourcesLost	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    void resourcesLost();$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:()
resourcesReleased	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    void resourcesReleased();$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:()
restartCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void restartCamera();$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:()
restartPending	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    bool restartPending;$/;"	member	class:QCameraPrivate	access:public
resume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void resume();$/;"	prototype	class:QAudioInput	access:public	signature:()
resume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void resume();$/;"	prototype	class:QAudioOutput	access:public	signature:()
resume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void resume() = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:()
resume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void resume() = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:()
resumeVideoProbes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void resumeVideoProbes();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
RhythmAndBlues	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        RhythmAndBlues, SoftRhythmAndBlues, Language,$/;"	enumerator	enum:QRadioData::ProgramType
RIFFHeader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    struct RIFFHeader$/;"	struct	class:QWaveDecoder	access:private
right	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^        T right;$/;"	member	struct:QAudioBuffer::StereoFrame	access:public
RingtoneRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        RingtoneRole,$/;"	enumerator	enum:QAudio::Role
RockMusic	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PopMusic, RockMusic, EasyListening, LightClassical,$/;"	enumerator	enum:QRadioData::ProgramType
Role	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Role {$/;"	enum	namespace:QAudio
RTSPSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^        RTSPSrc,$/;"	enumerator	enum:QGstreamerPlayerSession::SourceType
run	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    virtual QVideoFrame run(QVideoFrame *input, const QVideoSurfaceFormat &surfaceFormat, RunFlags flags) = 0;$/;"	prototype	class:QVideoFilterRunnable	access:public	signature:(QVideoFrame *input, const QVideoSurfaceFormat &surfaceFormat, RunFlags flags)
RunFlag	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    enum RunFlag {$/;"	enum	class:QVideoFilterRunnable	access:public
s	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    qint64 s;$/;"	member	class:QMediaTimeInterval	access:private
S16S	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    typedef StereoFrame<signed short> S16S;$/;"	typedef	class:QAudioBuffer	access:public
S16U	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    typedef StereoFrame<unsigned short> S16U;$/;"	typedef	class:QAudioBuffer	access:public
S32F	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    typedef StereoFrame<float> S32F;$/;"	typedef	class:QAudioBuffer	access:public
S8S	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    typedef StereoFrame<signed char> S8S;$/;"	typedef	class:QAudioBuffer	access:public
S8U	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    typedef StereoFrame<unsigned char> S8U;$/;"	typedef	class:QAudioBuffer	access:public
sampleCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    int sampleCount() const;$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
sampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        quint32     sampleRate;$/;"	member	struct:QWaveDecoder::WAVEHeader	access:public
sampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    int sampleRate() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
sampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    int sampleRate() const;$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:() const
SampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString SampleRate;$/;"	member	namespace:QMediaMetaData
SampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        SampleRate,$/;"	enumerator	enum:QMediaResource::Property
sampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    int sampleRate() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
sampleReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void sampleReady();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
sampleReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void sampleReady();$/;"	prototype	class:PrivateSoundSource	access:private	signature:()
sampleSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    int sampleSize() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
SampleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum SampleType { Unknown, SignedInt, UnSignedInt, Float };$/;"	enum	class:QAudioFormat	access:public
sampleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    QAudioFormat::SampleType sampleType() const;$/;"	prototype	class:QAudioFormat	access:public	signature:() const
saturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    int saturation() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
saturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    qreal saturation() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
Saturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        Saturation,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
Saturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Saturation;$/;"	member	namespace:QMediaMetaData
saturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual int saturation() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
SaturationAdjustment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        SaturationAdjustment,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
saturationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void saturationChanged(int saturation);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int saturation)
saturationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    void saturationChanged(int saturation);$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int saturation)
save	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool save(const QUrl &location, const char *format = 0);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(const QUrl &location, const char *format = 0)
save	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual bool save(QIODevice * device, const char *format);$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:(QIODevice * device, const char *format)
save	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool save(const QUrl &location, const char *format = nullptr);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(const QUrl &location, const char *format = nullptr)
save	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    bool save(QIODevice * device, const char *format);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(QIODevice * device, const char *format)
scanLineDirection	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    Direction scanLineDirection() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
SceneCaptureType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString SceneCaptureType;$/;"	member	namespace:QMediaMetaData
Science	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        Sport, Education, Drama, Culture, Science, Varied,$/;"	enumerator	enum:QRadioData::ProgramType
screenOrientationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideooutputorientationhandler_p.h	/^    void screenOrientationChanged(Qt::ScreenOrientation orientation);$/;"	prototype	class:QVideoOutputOrientationHandler	access:private	signature:(Qt::ScreenOrientation orientation)
searchAllStations	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void searchAllStations(QRadioTuner::SearchMode searchMode = QRadioTuner::SearchFast);$/;"	prototype	class:QRadioTuner	access:public	signature:(QRadioTuner::SearchMode searchMode = QRadioTuner::SearchFast)
searchAllStations	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void searchAllStations(QRadioTuner::SearchMode searchMode = QRadioTuner::SearchFast) = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::SearchMode searchMode = QRadioTuner::SearchFast)
searchAndLock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void searchAndLock();$/;"	prototype	class:QCamera	access:public	signature:()
searchAndLock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void searchAndLock(QCamera::LockTypes locks);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::LockTypes locks)
searchAndLock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^    virtual void searchAndLock(QCamera::LockTypes locks) = 0;$/;"	prototype	class:QCameraLocksControl	access:public	signature:(QCamera::LockTypes locks)
searchBackward	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void searchBackward();$/;"	prototype	class:QRadioTuner	access:public	signature:()
searchBackward	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void searchBackward() = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:()
SearchFast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum SearchMode { SearchFast, SearchGetStationId };$/;"	enumerator	enum:QRadioTuner::SearchMode
searchForward	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void searchForward();$/;"	prototype	class:QRadioTuner	access:public	signature:()
searchForward	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void searchForward() = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:()
SearchGetStationId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum SearchMode { SearchFast, SearchGetStationId };$/;"	enumerator	enum:QRadioTuner::SearchMode
Searching	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        Searching,$/;"	enumerator	enum:QCamera::LockStatus
searchingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void searchingChanged(bool searching);$/;"	prototype	class:QRadioTuner	access:public	signature:(bool searching)
searchingChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void searchingChanged(bool searching);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(bool searching)
SearchMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum SearchMode { SearchFast, SearchGetStationId };$/;"	enum	class:QRadioTuner	access:public
secondaryCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    static QString secondaryCamera() { return tr("Front camera"); }$/;"	function	class:QGstreamerVideoInputDeviceControl	access:public	signature:()
seek	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    bool seek(qint64 pos);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(qint64 pos)
seekableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void seekableChanged(bool);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(bool)
seekableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void seekableChanged(bool seekable);$/;"	prototype	class:QMediaPlayer	access:public	signature:(bool seekable)
seekableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void seekableChanged(bool seekable);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(bool seekable)
segment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  GstSegment segment;$/;"	member	struct:_GstVideoConnector	access:public
Selected	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        Selected,$/;"	enumerator	enum:QCameraFocusZone::FocusZoneStatus
selectedDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    virtual int selectedDevice() const = 0;$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:() const
selectedDeviceChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    void selectedDeviceChanged(const QString &name);$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:(const QString &name)
selectedDeviceChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    void selectedDeviceChanged(int index);$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:(int index)
sendEOS	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    void sendEOS();$/;"	prototype	class:QGstAppSrc	access:private	signature:()
Sequential	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    enum PlaybackMode { CurrentItemOnce, CurrentItemInLoop, Sequential, Loop, Random };$/;"	enumerator	enum:QMediaPlaylist::PlaybackMode
SeriousClassical	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SeriousClassical, OtherMusic, Weather, Finance,$/;"	enumerator	enum:QRadioData::ProgramType
service	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    QMediaService *service;$/;"	member	class:QMediaObjectPrivate	access:public
service	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    virtual QMediaService* service() const;$/;"	prototype	class:QMediaObject	access:public	signature:() const
ServiceMissing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        ServiceMissing,$/;"	enumerator	enum:QMultimedia::AvailabilityStatus
ServiceMissingError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^        ServiceMissingError$/;"	enumerator	enum:QAudioDecoder::Error
ServiceMissingError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        ServiceMissingError,$/;"	enumerator	enum:QCamera::Error
ServiceMissingError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        ServiceMissingError,$/;"	enumerator	enum:QMediaPlayer::Error
session	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    QGstreamerPlayerSession *session() { return m_session; }$/;"	function	class:QGstreamerPlayerControl	access:public	signature:()
setActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    void setActive(bool v);$/;"	prototype	class:QAbstractVideoFilter	access:public	signature:(bool v)
setActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    virtual void setActive(int streamNumber, bool state) = 0;$/;"	prototype	class:QMediaStreamsControl	access:public	signature:(int streamNumber, bool state)
setActiveInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    virtual void setActiveInput(const QString& name) = 0;$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:(const QString& name)
setActiveOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    virtual void setActiveOutput(const QString& name) = 0;$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:(const QString& name)
setActiveStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void setActiveStream(QMediaStreamsControl::StreamType streamType, int streamNumber);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QMediaStreamsControl::StreamType streamType, int streamNumber)
setAlternativeFrequenciesEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void setAlternativeFrequenciesEnabled(bool enabled);$/;"	prototype	class:QRadioData	access:public	signature:(bool enabled)
setAlternativeFrequenciesEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual void setAlternativeFrequenciesEnabled(bool enabled) = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:(bool enabled)
setAspectRatioMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setAspectRatioMode(Qt::AspectRatioMode mode);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(Qt::AspectRatioMode mode)
setAspectRatioMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setAspectRatioMode(Qt::AspectRatioMode mode) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(Qt::AspectRatioMode mode)
setAudioBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setAudioBitRate(int rate);$/;"	prototype	class:QMediaResource	access:public	signature:(int rate)
setAudioCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setAudioCodec(const QString &codec);$/;"	prototype	class:QMediaResource	access:public	signature:(const QString &codec)
setAudioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void setAudioFormat(const QAudioFormat &format);$/;"	prototype	class:QAudioDecoder	access:public	signature:(const QAudioFormat &format)
setAudioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual void setAudioFormat(const QAudioFormat &format) = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(const QAudioFormat &format)
setAudioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    void setAudioInput(const QString& name);$/;"	prototype	class:QAudioRecorder	access:public	signature:(const QString& name)
setAudioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorolecontrol.h	/^    virtual void setAudioRole(QAudio::Role role) = 0;$/;"	prototype	class:QAudioRoleControl	access:public	signature:(QAudio::Role role)
setAudioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setAudioRole(QAudio::Role audioRole);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QAudio::Role audioRole)
setAudioSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^    virtual void setAudioSettings(const QAudioEncoderSettings &settings) = 0;$/;"	prototype	class:QAudioEncoderSettingsControl	access:public	signature:(const QAudioEncoderSettings &settings)
setAudioSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void setAudioSettings(const QAudioEncoderSettings &audioSettings);$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QAudioEncoderSettings &audioSettings)
setAutoAperture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setAutoAperture();$/;"	prototype	class:QCameraExposure	access:public	signature:()
setAutoIsoSensitivity	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setAutoIsoSensitivity();$/;"	prototype	class:QCameraExposure	access:public	signature:()
setAutoOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void setAutoOrientation(bool);$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(bool)
setAutoShutterSpeed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setAutoShutterSpeed();$/;"	prototype	class:QCameraExposure	access:public	signature:()
setBand	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void setBand(Band band);$/;"	prototype	class:QRadioTuner	access:public	signature:(Band band)
setBand	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void setBand(QRadioTuner::Band b) = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::Band b)
setBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setBitRate(int bitrate);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(int bitrate)
setBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setBitRate(int bitrate);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(int bitrate)
setBrightness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setBrightness(int brightness);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int brightness)
setBrightness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setBrightness(qreal value);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(qreal value)
setBrightness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setBrightness(int brightness) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int brightness)
setBufferFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturebufferformatcontrol.h	/^    virtual void setBufferFormat(QVideoFrame::PixelFormat format) = 0;$/;"	prototype	class:QCameraCaptureBufferFormatControl	access:public	signature:(QVideoFrame::PixelFormat format)
setBufferFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void setBufferFormat(const QVideoFrame::PixelFormat format);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(const QVideoFrame::PixelFormat format)
setBufferProgress	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void setBufferProgress(int progress);$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:(int progress)
setBufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void setBufferSize(int bytes);$/;"	prototype	class:QAudioInput	access:public	signature:(int bytes)
setBufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void setBufferSize(int bytes);$/;"	prototype	class:QAudioOutput	access:public	signature:(int bytes)
setBufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setBufferSize(int value) = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:(int value)
setBufferSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setBufferSize(int value) = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:(int value)
setByteOrder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    void setByteOrder(QAudioFormat::Endian byteOrder);$/;"	prototype	class:QAudioFormat	access:public	signature:(QAudioFormat::Endian byteOrder)
setCapacity	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void setCapacity(qint64 capacity);$/;"	prototype	class:QSampleCache	access:public	signature:(qint64 capacity)
setCaptureDestination	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturedestinationcontrol.h	/^    virtual void setCaptureDestination(QCameraImageCapture::CaptureDestinations destination) = 0;$/;"	prototype	class:QCameraCaptureDestinationControl	access:public	signature:(QCameraImageCapture::CaptureDestinations destination)
setCaptureDestination	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void setCaptureDestination(CaptureDestinations destination);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(CaptureDestinations destination)
setCaptureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void setCaptureMode(QCamera::CaptureModes mode);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::CaptureModes mode)
setCaptureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    virtual void setCaptureMode(QCamera::CaptureModes) = 0;$/;"	prototype	class:QCameraControl	access:public	signature:(QCamera::CaptureModes)
setCategory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setCategory(const QString &category);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(const QString &category)
setCategory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setCategory(const QString &);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(const QString &)
setCategory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void setCategory(const QString &category);$/;"	prototype	class:QAudioOutput	access:public	signature:(const QString &category)
setCategory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setCategory(const QString &) { }$/;"	function	class:QAbstractAudioOutput	access:public	signature:(const QString &)
setCategory	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void setCategory(const QString &category);$/;"	prototype	class:QSoundEffect	access:public	signature:(const QString &category)
setChannelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    void setChannelCount(int channelCount);$/;"	prototype	class:QAudioFormat	access:public	signature:(int channelCount)
setChannelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setChannelCount(int channels);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(int channels)
setChannelCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setChannelCount(int channels);$/;"	prototype	class:QMediaResource	access:public	signature:(int channels)
setCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    void setCodec(const QString &codec);$/;"	prototype	class:QAudioFormat	access:public	signature:(const QString &codec)
setCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setCodec(const QString &);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QString &)
setCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setCodec(const QString &);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QString &)
setCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setCodec(const QString& codec);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QString& codec)
setColorFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setColorFilter(ColorFilter filter);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(ColorFilter filter)
setConfigurations	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmedianetworkaccesscontrol.h	/^    virtual void setConfigurations(const QList<QNetworkConfiguration> &configuration) = 0;$/;"	prototype	class:QMediaNetworkAccessControl	access:public	signature:(const QList<QNetworkConfiguration> &configuration)
setContainerFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontainercontrol.h	/^    virtual void setContainerFormat(const QString &format) = 0;$/;"	prototype	class:QMediaContainerControl	access:public	signature:(const QString &format)
setContainerFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void setContainerFormat(const QString &container);$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QString &container)
setContrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setContrast(int contrast);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int contrast)
setContrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setContrast(qreal value);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(qreal value)
setContrast	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setContrast(int contrast) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int contrast)
setCrossfadeTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    virtual void setCrossfadeTime(qreal crossfadeTime) = 0;$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:(qreal crossfadeTime)
setCurrentFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    virtual void setCurrentFrame(const QVideoFrame &frame, FrameFlags flags) = 0;$/;"	prototype	class:QSGVideoNode	access:public	signature:(const QVideoFrame &frame, FrameFlags flags)
setCurrentIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual void setCurrentIndex(int position) = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(int position)
setCurrentIndex	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void setCurrentIndex(int index);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(int index)
setCustomAudioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcustomaudiorolecontrol.h	/^    virtual void setCustomAudioRole(const QString &role) = 0;$/;"	prototype	class:QCustomAudioRoleControl	access:public	signature:(const QString &role)
setCustomAudioRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setCustomAudioRole(const QString &audioRole);$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QString &audioRole)
setCustomFocusPoint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void setCustomFocusPoint(const QPointF &point);$/;"	prototype	class:QCameraFocus	access:public	signature:(const QPointF &point)
setCustomFocusPoint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual void setCustomFocusPoint(const QPointF &point) = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:(const QPointF &point)
setDataSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setDataSize(const qint64 size);$/;"	prototype	class:QMediaResource	access:public	signature:(const qint64 size)
setDefaultServiceProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    static void setDefaultServiceProvider(QMediaServiceProvider *provider);$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(QMediaServiceProvider *provider)
setDenoisingLevel	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setDenoisingLevel(qreal value);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(qreal value)
setDisplayRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setDisplayRect(const QRect &rect) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(const QRect &rect)
setDriveMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    virtual void setDriveMode(QCameraImageCapture::DriveMode mode) = 0;$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:(QCameraImageCapture::DriveMode mode)
setEncodingMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingMode(QMultimedia::EncodingMode);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(QMultimedia::EncodingMode)
setEncodingMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingMode(QMultimedia::EncodingMode);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(QMultimedia::EncodingMode)
setEncodingOption	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingOption(const QString &option, const QVariant &value);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QString &option, const QVariant &value)
setEncodingOption	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingOption(const QString &option, const QVariant &value);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QString &option, const QVariant &value)
setEncodingOption	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingOption(const QString &option, const QVariant &value);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QString &option, const QVariant &value)
setEncodingOptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingOptions(const QVariantMap &options);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(const QVariantMap &options)
setEncodingOptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingOptions(const QVariantMap &options);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QVariantMap &options)
setEncodingOptions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setEncodingOptions(const QVariantMap &options);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QVariantMap &options)
setEncodingSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    void setEncodingSettings(const QImageEncoderSettings& settings);$/;"	prototype	class:QCameraImageCapture	access:public	signature:(const QImageEncoderSettings& settings)
setEncodingSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void setEncodingSettings(const QAudioEncoderSettings &audioSettings,$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QAudioEncoderSettings &audioSettings, const QVideoEncoderSettings &videoSettings = QVideoEncoderSettings(), const QString &containerMimeType = QString())
setEndTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    void setEndTime(qint64 time);$/;"	prototype	class:QVideoFrame	access:public	signature:(qint64 time)
setError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    void setError(Error error);$/;"	prototype	class:QAbstractVideoSurface	access:protected	signature:(Error error)
setEventFeedbackEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    virtual bool setEventFeedbackEnabled(EventType, bool) = 0;$/;"	prototype	class:QCameraFeedbackControl	access:public	signature:(EventType, bool)
setEventFeedbackSound	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    virtual bool setEventFeedbackSound(EventType, const QString &filePath) = 0;$/;"	prototype	class:QCameraFeedbackControl	access:public	signature:(EventType, const QString &filePath)
setExposureCompensation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setExposureCompensation(qreal ev);$/;"	prototype	class:QCameraExposure	access:public	signature:(qreal ev)
setExposureMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setExposureMode(ExposureMode mode);$/;"	prototype	class:QCameraExposure	access:public	signature:(ExposureMode mode)
setFieldType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    void setFieldType(FieldType);$/;"	prototype	class:QVideoFrame	access:public	signature:(FieldType)
setFillMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void setFillMode(FillMode mode);$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(FillMode mode)
setFlashMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setFlashMode(FlashModes mode);$/;"	prototype	class:QCameraExposure	access:public	signature:(FlashModes mode)
setFlashMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^    virtual void setFlashMode(QCameraExposure::FlashModes mode) = 0;$/;"	prototype	class:QCameraFlashControl	access:public	signature:(QCameraExposure::FlashModes mode)
setFocusMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void setFocusMode(FocusModes mode);$/;"	prototype	class:QCameraFocus	access:public	signature:(FocusModes mode)
setFocusMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual void setFocusMode(QCameraFocus::FocusModes mode) = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:(QCameraFocus::FocusModes mode)
setFocusPointMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void setFocusPointMode(FocusPointMode mode);$/;"	prototype	class:QCameraFocus	access:public	signature:(FocusPointMode mode)
setFocusPointMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    virtual void setFocusPointMode(QCameraFocus::FocusPointMode mode) = 0;$/;"	prototype	class:QCameraFocusControl	access:public	signature:(QCameraFocus::FocusPointMode mode)
setFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setFormat(const QAudioFormat& fmt) = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:(const QAudioFormat& fmt)
setFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setFormat(const QAudioFormat& fmt) = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:(const QAudioFormat& fmt)
setFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setFrameRate(qreal rate);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(qreal rate)
setFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setFrameRate(qreal rate);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(qreal rate)
setFrameSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setFrameSize(const QSize &size);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const QSize &size)
setFrameSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setFrameSize(int width, int height);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(int width, int height)
setFrameTimeStamps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    void setFrameTimeStamps(QVideoFrame *frame, GstBuffer *buffer);$/;"	prototype	namespace:QGstUtils	signature:(QVideoFrame *frame, GstBuffer *buffer)
setFrequency	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void setFrequency(int frequency);$/;"	prototype	class:QRadioTuner	access:public	signature:(int frequency)
setFrequency	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void setFrequency(int frequency) = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(int frequency)
setFullScreen	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setFullScreen(bool fullScreen) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(bool fullScreen)
setHue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setHue(int hue);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int hue)
setHue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setHue(int hue) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int hue)
setImageSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^    virtual void setImageSettings(const QImageEncoderSettings &settings) = 0;$/;"	prototype	class:QImageEncoderControl	access:public	signature:(const QImageEncoderSettings &settings)
setLanguage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setLanguage(const QString &language);$/;"	prototype	class:QMediaResource	access:public	signature:(const QString &language)
setLoopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setLoopCount(int loopCount);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(int loopCount)
setLoopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setLoopCount(int loopCount);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(int loopCount)
setLoopCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void setLoopCount(int loopCount);$/;"	prototype	class:QSoundEffect	access:public	signature:(int loopCount)
setLoops	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    void setLoops(int);$/;"	prototype	class:QSound	access:public	signature:(int)
setLoopsRemaining	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setLoopsRemaining(int loopsRemaining);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(int loopsRemaining)
setLoopsRemaining	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setLoopsRemaining(int loopsRemaining);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(int loopsRemaining)
setManualAperture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setManualAperture(qreal aperture);$/;"	prototype	class:QCameraExposure	access:public	signature:(qreal aperture)
setManualIsoSensitivity	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setManualIsoSensitivity(int iso);$/;"	prototype	class:QCameraExposure	access:public	signature:(int iso)
setManualShutterSpeed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setManualShutterSpeed(qreal seconds);$/;"	prototype	class:QCameraExposure	access:public	signature:(qreal seconds)
setManualWhiteBalance	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setManualWhiteBalance(qreal colorTemperature);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(qreal colorTemperature)
setMaximumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    void setMaximumFrameRate(qreal rate);$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:(qreal rate)
setMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setMedia(const QMediaContent &media, QIODevice *stream = nullptr);$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QMediaContent &media, QIODevice *stream = nullptr)
setMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void setMedia(const QMediaContent &media, QIODevice *stream) = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(const QMediaContent &media, QIODevice *stream)
setMediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediabindableinterface.h	/^    virtual bool setMediaObject(QMediaObject *object) = 0;$/;"	prototype	class:QMediaBindableInterface	access:protected	signature:(QMediaObject *object)
setMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT void setMetaData(GstBin *bin, const QMap<QByteArray, QVariant> &data);$/;"	prototype	namespace:QGstUtils	signature:(GstBin *bin, const QMap<QByteArray, QVariant> &data)
setMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT void setMetaData(GstElement *element, const QMap<QByteArray, QVariant> &data);$/;"	prototype	namespace:QGstUtils	signature:(GstElement *element, const QMap<QByteArray, QVariant> &data)
setMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void setMetaData(const QString &key, const QVariant &value);$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QString &key, const QVariant &value)
setMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    virtual void setMetaData(const QString &key, const QVariant &value) = 0;$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:(const QString &key, const QVariant &value)
setMetaData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    void setMetaData(const QString &key, const QVariant &value);$/;"	prototype	class:QVideoFrame	access:public	signature:(const QString &key, const QVariant &value)
setMeteringMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setMeteringMode(MeteringMode mode);$/;"	prototype	class:QCameraExposure	access:public	signature:(MeteringMode mode)
setMinimumFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    void setMinimumFrameRate(qreal rate);$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:(qreal rate)
setMirrored	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setMirrored(bool mirrored);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(bool mirrored)
setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void setMuted(bool muted);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(bool muted)
setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setMuted(bool muted);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(bool muted)
setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setMuted(bool muted);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(bool muted)
setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setMuted(bool muted);$/;"	prototype	class:QMediaPlayer	access:public	signature:(bool muted)
setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void setMuted(bool mute) = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(bool mute)
setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void setMuted(bool muted);$/;"	prototype	class:QMediaRecorder	access:public	signature:(bool muted)
setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual void setMuted(bool muted) = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(bool muted)
setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void setMuted(bool muted);$/;"	prototype	class:QRadioTuner	access:public	signature:(bool muted)
setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void setMuted(bool muted) = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(bool muted)
setMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void setMuted(bool muted);$/;"	prototype	class:QSoundEffect	access:public	signature:(bool muted)
setNativeResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    void setNativeResolution(const QSize &resolution);$/;"	prototype	class:QAbstractVideoSurface	access:protected	signature:(const QSize &resolution)
setNetworkConfigurations	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setNetworkConfigurations(const QList<QNetworkConfiguration> &configurations);$/;"	prototype	class:QMediaPlayer	access:public	signature:(const QList<QNetworkConfiguration> &configurations)
setNextMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    virtual void setNextMedia(const QMediaContent &media) = 0;$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:(const QMediaContent &media)
setNotifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void setNotifyInterval(int milliSeconds);$/;"	prototype	class:QAudioInput	access:public	signature:(int milliSeconds)
setNotifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void setNotifyInterval(int milliSeconds);$/;"	prototype	class:QAudioOutput	access:public	signature:(int milliSeconds)
setNotifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setNotifyInterval(int milliSeconds) = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:(int milliSeconds)
setNotifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setNotifyInterval(int milliSeconds) = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:(int milliSeconds)
setNotifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void setNotifyInterval(int milliSeconds);$/;"	prototype	class:QMediaObject	access:public	signature:(int milliSeconds)
setOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void setOrientation(int);$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(int)
setOutputLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    bool setOutputLocation(const QUrl &location);$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QUrl &location)
setOutputLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual bool setOutputLocation(const QUrl &location) = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(const QUrl &location)
setParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^    virtual void setParameter(ProcessingParameter parameter, const QVariant &value) = 0;$/;"	prototype	class:QCameraImageProcessingControl	access:public	signature:(ProcessingParameter parameter, const QVariant &value)
setPipeline	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void setPipeline(GstElement *pipeline);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(GstElement *pipeline)
setPixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    inline void setPixelAspectRatio(int horizontal, int vertical)$/;"	function	class:QCameraViewfinderSettings	access:public	signature:(int horizontal, int vertical)
setPixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    void setPixelAspectRatio(const QSize &ratio);$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:(const QSize &ratio)
setPixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setPixelAspectRatio(const QSize &ratio);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const QSize &ratio)
setPixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setPixelAspectRatio(int width, int height);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(int width, int height)
setPixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    void setPixelFormat(QVideoFrame::PixelFormat format);$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:(QVideoFrame::PixelFormat format)
setPlaybackMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual void setPlaybackMode(QMediaPlaylist::PlaybackMode mode) = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(QMediaPlaylist::PlaybackMode mode)
setPlaybackMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void setPlaybackMode(QMediaPlaylist::PlaybackMode mode);$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(QMediaPlaylist::PlaybackMode mode)
setPlaybackMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void setPlaybackMode(PlaybackMode mode);$/;"	prototype	class:QMediaPlaylist	access:public	signature:(PlaybackMode mode)
setPlaybackRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void setPlaybackRate(qreal rate);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(qreal rate)
setPlaybackRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setPlaybackRate(qreal rate);$/;"	prototype	class:QMediaPlayer	access:public	signature:(qreal rate)
setPlaybackRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void setPlaybackRate(qreal rate) = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(qreal rate)
setPlayerSession	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void setPlayerSession(const QGstreamerPlayerSession *playerSession);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:(const QGstreamerPlayerSession *playerSession)
setPlaying	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setPlaying(bool playing);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(bool playing)
setPlaying	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setPlaying(bool playing);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(bool playing)
setPlaylist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void setPlaylist(QMediaPlaylistProvider *playlist);$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:(QMediaPlaylistProvider *playlist)
setPlaylist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistsourcecontrol_p.h	/^    virtual void setPlaylist(QMediaPlaylist *) = 0;$/;"	prototype	class:QMediaPlaylistSourceControl	access:public	signature:(QMediaPlaylist *)
setPlaylist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setPlaylist(QMediaPlaylist *playlist);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QMediaPlaylist *playlist)
setPlaylistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual bool setPlaylistProvider(QMediaPlaylistProvider *playlist) = 0;$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:(QMediaPlaylistProvider *playlist)
setPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setPosition(qint64 position);$/;"	prototype	class:QMediaPlayer	access:public	signature:(qint64 position)
setPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void setPosition(qint64 position) = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(qint64 position)
setProperty	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setProperty(const char *name, const QVariant &value);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const char *name, const QVariant &value)
setQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setQuality(QMultimedia::EncodingQuality quality);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(QMultimedia::EncodingQuality quality)
setQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setQuality(QMultimedia::EncodingQuality quality);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(QMultimedia::EncodingQuality quality)
setQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setQuality(QMultimedia::EncodingQuality quality);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(QMultimedia::EncodingQuality quality)
setRenderRectangle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setRenderRectangle(const QRect &rect);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(const QRect &rect)
setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    inline void setResolution(int width, int height)$/;"	function	class:QCameraViewfinderSettings	access:public	signature:(int width, int height)
setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    void setResolution(const QSize &);$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:(const QSize &)
setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setResolution(const QSize &);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(const QSize &)
setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setResolution(const QSize &);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(const QSize &)
setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setResolution(int width, int height);$/;"	prototype	class:QImageEncoderSettings	access:public	signature:(int width, int height)
setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setResolution(int width, int height);$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:(int width, int height)
setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setResolution(const QSize &resolution);$/;"	prototype	class:QMediaResource	access:public	signature:(const QSize &resolution)
setResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setResolution(int width, int height);$/;"	prototype	class:QMediaResource	access:public	signature:(int width, int height)
setSampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    void setSampleRate(int sampleRate);$/;"	prototype	class:QAudioFormat	access:public	signature:(int sampleRate)
setSampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    void setSampleRate(int rate);$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:(int rate)
setSampleRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setSampleRate(int frequency);$/;"	prototype	class:QMediaResource	access:public	signature:(int frequency)
setSampleSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    void setSampleSize(int sampleSize);$/;"	prototype	class:QAudioFormat	access:public	signature:(int sampleSize)
setSampleType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    void setSampleType(QAudioFormat::SampleType sampleType);$/;"	prototype	class:QAudioFormat	access:public	signature:(QAudioFormat::SampleType sampleType)
setSaturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setSaturation(int saturation);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(int saturation)
setSaturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setSaturation(qreal value);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(qreal value)
setSaturation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setSaturation(int saturation) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(int saturation)
setScanLineDirection	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setScanLineDirection(Direction direction);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(Direction direction)
setSeekable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void setSeekable(bool);$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:(bool)
setSelectedDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    virtual void setSelectedDevice(int index) = 0;$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:(int index)
setSharpeningLevel	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setSharpeningLevel(qreal value);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(qreal value)
setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void setSource(QObject *source);$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:(QObject *source)
setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setSource(const QUrl &url);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(const QUrl &url)
setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setSource(const QUrl &url);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(const QUrl &url)
setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    bool setSource(QMediaObject *source);$/;"	prototype	class:QAudioProbe	access:public	signature:(QMediaObject *source)
setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    bool setSource(QMediaRecorder *source);$/;"	prototype	class:QAudioProbe	access:public	signature:(QMediaRecorder *source)
setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void setSource(const QUrl &url);$/;"	prototype	class:QSoundEffect	access:public	signature:(const QUrl &url)
setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    bool setSource(QMediaObject *source);$/;"	prototype	class:QVideoProbe	access:public	signature:(QMediaObject *source)
setSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    bool setSource(QMediaRecorder *source);$/;"	prototype	class:QVideoProbe	access:public	signature:(QMediaRecorder *source)
setSourceDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void setSourceDevice(QIODevice *device);$/;"	prototype	class:QAudioDecoder	access:public	signature:(QIODevice *device)
setSourceDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual void setSourceDevice(QIODevice *device) = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(QIODevice *device)
setSourceFilename	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void setSourceFilename(const QString &fileName);$/;"	prototype	class:QAudioDecoder	access:public	signature:(const QString &fileName)
setSourceFilename	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual void setSourceFilename(const QString &fileName) = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(const QString &fileName)
setSpotMeteringPoint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void setSpotMeteringPoint(const QPointF &point);$/;"	prototype	class:QCameraExposure	access:public	signature:(const QPointF &point)
setStartTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    void setStartTime(qint64 time);$/;"	prototype	class:QVideoFrame	access:public	signature:(qint64 time)
setState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void setState(QCamera::State);$/;"	prototype	class:QCameraPrivate	access:public	signature:(QCamera::State)
setState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    virtual void setState(QCamera::State state) = 0;$/;"	prototype	class:QCameraControl	access:public	signature:(QCamera::State state)
setState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual void setState(QMediaRecorder::State state) = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(QMediaRecorder::State state)
setStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setStatus(QSoundEffect::Status status);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(QSoundEffect::Status status)
setStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setStatus(QSoundEffect::Status status);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(QSoundEffect::Status status)
setStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void setStatus(FocusZoneStatus status);$/;"	prototype	class:QCameraFocusZone	access:public	signature:(FocusZoneStatus status)
setStereoMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void setStereoMode(QRadioTuner::StereoMode mode);$/;"	prototype	class:QRadioTuner	access:public	signature:(QRadioTuner::StereoMode mode)
setStereoMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void setStereoMode(QRadioTuner::StereoMode mode) = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::StereoMode mode)
setStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    void setStream(QIODevice *);$/;"	prototype	class:QGstAppSrc	access:public	signature:(QIODevice *)
setSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void setSurface(QAbstractVideoSurface *surface);$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:(QAbstractVideoSurface *surface)
setSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static void setSurface(QAbstractVideoSurface *surface);$/;"	prototype	class:QGstVideoRendererSink	access:public	signature:(QAbstractVideoSurface *surface)
setSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static void setSurface(QAbstractVideoSurface *surface) { Q_UNUSED(surface); }$/;"	function	class:QVideoSurfaceGstSink	access:public	signature:(QAbstractVideoSurface *surface)
setSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideorenderercontrol.h	/^    virtual void setSurface(QAbstractVideoSurface *surface) = 0;$/;"	prototype	class:QVideoRendererControl	access:public	signature:(QAbstractVideoSurface *surface)
setTexturedRectGeometry	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    void setTexturedRectGeometry(const QRectF &boundingRect, const QRectF &textureRect, int orientation);$/;"	prototype	class:QSGVideoNode	access:public	signature:(const QRectF &boundingRect, const QRectF &textureRect, int orientation)
settingsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    bool settingsChanged;$/;"	member	class:QMediaRecorderPrivate	access:public
setup	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    bool setup(GstElement *);$/;"	prototype	class:QGstAppSrc	access:public	signature:(GstElement *)
setupControls	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    void setupControls();$/;"	prototype	class:QMediaObject	access:private	signature:()
setValue	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    virtual bool setValue(ExposureParameter parameter, const QVariant& value) = 0;$/;"	prototype	class:QCameraExposureControl	access:public	signature:(ExposureParameter parameter, const QVariant& value)
setVideoBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setVideoBitRate(int rate);$/;"	prototype	class:QMediaResource	access:public	signature:(int rate)
setVideoCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    void setVideoCodec(const QString &codec);$/;"	prototype	class:QMediaResource	access:public	signature:(const QString &codec)
setVideoEnabled	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourceset_p.h	/^    virtual void setVideoEnabled(bool enabled) = 0;$/;"	prototype	class:QMediaPlayerResourceSetInterface	access:public	signature:(bool enabled)
setVideoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void setVideoOutput(QObject *output);$/;"	prototype	class:QGstreamerPlayerControl	access:public	signature:(QObject *output)
setVideoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setVideoOutput(QAbstractVideoSurface *surface);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QAbstractVideoSurface *surface)
setVideoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setVideoOutput(QGraphicsVideoItem *);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QGraphicsVideoItem *)
setVideoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setVideoOutput(QVideoWidget *);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QVideoWidget *)
setVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void setVideoRenderer(QObject *renderer);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QObject *renderer)
setVideoSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void setVideoSettings(const QVideoEncoderSettings &videoSettings);$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QVideoEncoderSettings &videoSettings)
setVideoSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    virtual void setVideoSettings(const QVideoEncoderSettings &settings) = 0;$/;"	prototype	class:QVideoEncoderSettingsControl	access:public	signature:(const QVideoEncoderSettings &settings)
setVideoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setVideoSink(GstElement *);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(GstElement *)
setVideoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorendererinterface_p.h	/^    virtual void setVideoSink(GstElement *) {};$/;"	function	class:QGstreamerVideoRendererInterface	access:public	signature:(GstElement *)
setVideoSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    void setVideoSurface(QAbstractVideoSurface *surface);$/;"	prototype	class:QVideoSurfaceOutput	access:public	signature:(QAbstractVideoSurface *surface)
setViewfinder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void setViewfinder(QAbstractVideoSurface *surface);$/;"	prototype	class:QCamera	access:public	signature:(QAbstractVideoSurface *surface)
setViewfinder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void setViewfinder(QGraphicsVideoItem *viewfinder);$/;"	prototype	class:QCamera	access:public	signature:(QGraphicsVideoItem *viewfinder)
setViewfinder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void setViewfinder(QVideoWidget *viewfinder);$/;"	prototype	class:QCamera	access:public	signature:(QVideoWidget *viewfinder)
setViewfinderParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    virtual void setViewfinderParameter(ViewfinderParameter parameter, const QVariant &value) = 0;$/;"	prototype	class:QCameraViewfinderSettingsControl	access:public	signature:(ViewfinderParameter parameter, const QVariant &value)
setViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void setViewfinderSettings(const QCameraViewfinderSettings &settings);$/;"	prototype	class:QCamera	access:public	signature:(const QCameraViewfinderSettings &settings)
setViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    virtual void setViewfinderSettings(const QCameraViewfinderSettings &settings) = 0;$/;"	prototype	class:QCameraViewfinderSettingsControl2	access:public	signature:(const QCameraViewfinderSettings &settings)
setViewport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setViewport(const QRect &viewport);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(const QRect &viewport)
setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void setVolume(int volume);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(int volume)
setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void setVolume(qreal volume);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(qreal volume)
setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void setVolume(qreal volume);$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:(qreal volume)
setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void setVolume(qreal volume);$/;"	prototype	class:QAudioInput	access:public	signature:(qreal volume)
setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void setVolume(qreal);$/;"	prototype	class:QAudioOutput	access:public	signature:(qreal)
setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setVolume(qreal) = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:(qreal)
setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void setVolume(qreal) {}$/;"	function	class:QAbstractAudioOutput	access:public	signature:(qreal)
setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void setVolume(int volume);$/;"	prototype	class:QMediaPlayer	access:public	signature:(int volume)
setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void setVolume(int volume) = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(int volume)
setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void setVolume(qreal volume);$/;"	prototype	class:QMediaRecorder	access:public	signature:(qreal volume)
setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual void setVolume(qreal volume) = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(qreal volume)
setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void setVolume(int volume);$/;"	prototype	class:QRadioTuner	access:public	signature:(int volume)
setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void setVolume(int volume) = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:(int volume)
setVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void setVolume(qreal volume);$/;"	prototype	class:QSoundEffect	access:public	signature:(qreal volume)
setWhiteBalanceMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    void setWhiteBalanceMode(WhiteBalanceMode mode);$/;"	prototype	class:QCameraImageProcessing	access:public	signature:(WhiteBalanceMode mode)
setWindowHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setWindowHandle(WId id);$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:(WId id)
setWindowHandle_helper	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void setWindowHandle_helper(WId id);$/;"	prototype	class:QGstreamerVideoOverlay	access:private	signature:(WId id)
setWinId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual void setWinId(WId id) = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:(WId id)
setYCbCrColorSpace	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    void setYCbCrColorSpace(YCbCrColorSpace colorSpace);$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:(YCbCrColorSpace colorSpace)
set_caps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static gboolean set_caps(GstBaseSink *sink, GstCaps *caps);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GstBaseSink *sink, GstCaps *caps)
set_caps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static gboolean set_caps(GstBaseSink *sink, GstCaps *caps);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GstBaseSink *sink, GstCaps *caps)
Sharpening	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        Sharpening,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
SharpeningAdjustment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        SharpeningAdjustment,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
sharpeningLevel	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    qreal sharpeningLevel() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
Sharpness	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Sharpness;$/;"	member	namespace:QMediaMetaData
showPrerollFrameChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    static void showPrerollFrameChanged(GObject *, GParamSpec *, QGstreamerVideoOverlay *);$/;"	prototype	class:QGstreamerVideoOverlay	access:private	signature:(GObject *, GParamSpec *, QGstreamerVideoOverlay *)
showPrerollFrames	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void showPrerollFrames(bool enabled);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(bool enabled)
show_frame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static GstFlowReturn show_frame(GstVideoSink *sink, GstBuffer *buffer);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GstVideoSink *sink, GstBuffer *buffer)
shuffle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual void shuffle();$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:()
shuffle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    void shuffle();$/;"	prototype	class:QMediaPlaylist	access:public	signature:()
shutterSpeed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    qreal shutterSpeed() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
ShutterSpeed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        ShutterSpeed,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
shutterSpeedChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void shutterSpeedChanged(qreal speed);$/;"	prototype	class:QCameraExposure	access:public	signature:(qreal speed)
shutterSpeedRangeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    void shutterSpeedRangeChanged();$/;"	prototype	class:QCameraExposure	access:public	signature:()
signalStrength	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    int signalStrength() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
signalStrength	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual int signalStrength() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
signalStrengthChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void signalStrengthChanged(int signalStrength);$/;"	prototype	class:QRadioTuner	access:public	signature:(int signalStrength)
signalStrengthChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void signalStrengthChanged(int signalStrength);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(int signalStrength)
SignedInt	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum SampleType { Unknown, SignedInt, UnSignedInt, Float };$/;"	enumerator	enum:QAudioFormat::SampleType
SingleImageCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^        SingleImageCapture$/;"	enumerator	enum:QCameraImageCapture::DriveMode
sinkChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void sinkChanged();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:()
sinkChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    void sinkChanged();$/;"	prototype	class:QGstreamerVideoRenderer	access:public	signature:()
sinkChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void sinkChanged();$/;"	prototype	class:QGstreamerVideoWidgetControl	access:public	signature:()
sinkChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    void sinkChanged();$/;"	prototype	class:QGstreamerVideoWindow	access:public	signature:()
sinkpad	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  GstPad *sinkpad;$/;"	member	struct:_GstVideoConnector	access:public
size	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        quint32     size;$/;"	member	struct:QWaveDecoder::chunk	access:public
Size	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Size;$/;"	member	namespace:QMediaMetaData
size	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    QSize size() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
sizeHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QSize sizeHint() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
SocialAffairs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        ChildrensProgrammes, SocialAffairs, Religion,$/;"	enumerator	enum:QRadioData::ProgramType
Soft	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SoftRock, Top40, Soft, Nostalgia, Classical,$/;"	enumerator	enum:QRadioData::ProgramType
SoftRhythmAndBlues	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        RhythmAndBlues, SoftRhythmAndBlues, Language,$/;"	enumerator	enum:QRadioData::ProgramType
SoftRock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SoftRock, Top40, Soft, Nostalgia, Classical,$/;"	enumerator	enum:QRadioData::ProgramType
SonificationRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        SonificationRole,$/;"	enumerator	enum:QAudio::Role
soundeffect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QSoundEffectPrivate *soundeffect = nullptr;$/;"	member	class:PrivateSoundSource	access:private
Sounds	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediastoragelocation_p.h	/^        Sounds$/;"	enumerator	enum:QMediaStorageLocation::MediaType
SoupHTTPSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^        SoupHTTPSrc,$/;"	enumerator	enum:QGstreamerPlayerSession::SourceType
source	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QObject *source() const { return m_source.data(); }$/;"	function	class:QDeclarativeVideoOutput	access:public	signature:() const
source	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QUrl source() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
source	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QUrl source() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
source	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    QIODevice *source;$/;"	member	class:QWaveDecoder	access:private
source	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    QUrl source() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
sourceChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void sourceChanged();$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:()
sourceChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void sourceChanged();$/;"	prototype	class:QAudioDecoder	access:public	signature:()
sourceChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void sourceChanged();$/;"	prototype	class:QAudioDecoderControl	access:public	signature:()
sourceChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void sourceChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
sourceDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    QIODevice* sourceDevice() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
sourceDevice	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual QIODevice* sourceDevice() const = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:() const
sourceFilename	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    QString sourceFilename() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
sourceFilename	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual QString sourceFilename() const = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:() const
sourceRect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    QRectF sourceRect() const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:() const
sourceRectChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void sourceRectChanged();$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:()
SourceType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    enum SourceType {$/;"	enum	class:QDeclarativeVideoOutput	access:public
sourceType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    SourceType sourceType() const;$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:() const
SourceType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    enum SourceType$/;"	enum	class:QGstreamerPlayerSession	access:private
Sport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        Sport, Education, Drama, Culture, Science, Varied,$/;"	enumerator	enum:QRadioData::ProgramType
spotMeteringPoint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    QPointF spotMeteringPoint() const;$/;"	prototype	class:QCameraExposure	access:public	signature:() const
SpotMeteringPoint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        SpotMeteringPoint,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
srcpad	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  GstPad *srcpad;$/;"	member	struct:_GstVideoConnector	access:public
StalledMedia	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        StalledMedia,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
StandbyStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        StandbyStatus,$/;"	enumerator	enum:QCamera::Status
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual bool start(QAbstractVideoSurface *surface, GstCaps *caps) = 0;$/;"	prototype	class:QGstVideoRenderer	access:public	signature:(QAbstractVideoSurface *surface, GstCaps *caps)
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool start(GstCaps *caps);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:(GstCaps *caps)
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void start(const QMediaContent &media, QIODevice *stream = 0);$/;"	prototype	class:QPlaylistFileParser	access:public	signature:(const QMediaContent &media, QIODevice *stream = 0)
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void start(const QNetworkRequest &request, const QString &mimeType = QString());$/;"	prototype	class:QPlaylistFileParser	access:public	signature:(const QNetworkRequest &request, const QString &mimeType = QString())
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    void start(QIODevice *stream, const QString &mimeType = QString());$/;"	prototype	class:QPlaylistFileParser	access:private	signature:(QIODevice *stream, const QString &mimeType = QString())
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    bool start(const QVideoSurfaceFormat &format, int bytesPerLine);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:(const QVideoSurfaceFormat &format, int bytesPerLine)
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static gboolean start(GstBaseSink *sink);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GstBaseSink *sink)
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    virtual bool start(const QVideoSurfaceFormat &format);$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(const QVideoSurfaceFormat &format)
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void start();$/;"	prototype	class:QAudioDecoder	access:public	signature:()
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual void start() = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:()
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    QIODevice* start();$/;"	prototype	class:QAudioInput	access:public	signature:()
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void start(QIODevice *device);$/;"	prototype	class:QAudioInput	access:public	signature:(QIODevice *device)
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    QIODevice* start();$/;"	prototype	class:QAudioOutput	access:public	signature:()
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void start(QIODevice *device);$/;"	prototype	class:QAudioOutput	access:public	signature:(QIODevice *device)
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QIODevice* start() = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:()
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QIODevice* start() = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:()
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void start(QIODevice *device) = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:(QIODevice *device)
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void start(QIODevice *device) = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:(QIODevice *device)
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void start();$/;"	prototype	class:QCamera	access:public	signature:()
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    qint64 start() const;$/;"	prototype	class:QMediaTimeInterval	access:public	signature:() const
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void start();$/;"	prototype	class:QRadioTuner	access:public	signature:()
start	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void start() = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:()
startFlushing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    void startFlushing();$/;"	prototype	class:QGstreamerVideoProbeControl	access:public	signature:()
StartingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        StartingStatus,$/;"	enumerator	enum:QCamera::Status
StartingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        StartingStatus,$/;"	enumerator	enum:QMediaRecorder::Status
startTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual qint64 startTime() const = 0;$/;"	prototype	class:QAbstractAudioBuffer	access:public	signature:() const
startTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    qint64 startTime() const;$/;"	prototype	class:QAudioBuffer	access:public	signature:() const
startTime	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    qint64 startTime() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCamera::State state;$/;"	member	class:QCameraPrivate	access:public
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMediaPlayer::State state() const { return m_state; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QMediaRecorder::State state;$/;"	member	class:QMediaRecorderPrivate	access:public
State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    enum State$/;"	enum	class:QSample	access:public
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    State state() const;$/;"	prototype	class:QSample	access:public	signature:() const
State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    enum State {$/;"	enum	class:QWaveDecoder	access:private
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    State state;$/;"	member	class:QWaveDecoder	access:private
State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum State { ActiveState, SuspendedState, StoppedState, IdleState, InterruptedState };$/;"	enum	namespace:QAudio
State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    enum State$/;"	enum	class:QAudioDecoder	access:public
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    State state() const;$/;"	prototype	class:QAudioDecoder	access:public	signature:() const
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual QAudioDecoder::State state() const = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:() const
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    QAudio::State state() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    QAudio::State state() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QAudio::State state() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QAudio::State state() const = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:() const
State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum State {$/;"	enum	class:QCamera	access:public
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    State state() const;$/;"	prototype	class:QCamera	access:public	signature:() const
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    virtual QCamera::State state() const = 0;$/;"	prototype	class:QCameraControl	access:public	signature:() const
State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    enum State$/;"	enum	class:QMediaPlayer	access:public
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    State state() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual QMediaPlayer::State state() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    enum State$/;"	enum	class:QMediaRecorder	access:public
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    State state() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual QMediaRecorder::State state() const = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:() const
State	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum State { ActiveState, StoppedState };$/;"	enum	class:QRadioTuner	access:public
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    State state() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
state	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual QRadioTuner::State state() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void stateChanged(QMediaPlayer::State state);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(QMediaPlayer::State state)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void stateChanged(QAudio::State);$/;"	prototype	class:PrivateSoundSource	access:private	signature:(QAudio::State)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void stateChanged(QAudioDecoder::State newState);$/;"	prototype	class:QAudioDecoder	access:public	signature:(QAudioDecoder::State newState)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    void stateChanged(QAudioDecoder::State newState);$/;"	prototype	class:QAudioDecoderControl	access:public	signature:(QAudioDecoder::State newState)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void stateChanged(QAudio::State state);$/;"	prototype	class:QAudioInput	access:public	signature:(QAudio::State state)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void stateChanged(QAudio::State state);$/;"	prototype	class:QAudioOutput	access:public	signature:(QAudio::State state)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    void stateChanged(QAudio::State state);$/;"	prototype	class:QAbstractAudioInput	access:public	signature:(QAudio::State state)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    void stateChanged(QAudio::State state);$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:(QAudio::State state)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void stateChanged(QCamera::State state);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::State state)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    void stateChanged(QCamera::State);$/;"	prototype	class:QCameraControl	access:public	signature:(QCamera::State)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void stateChanged(QMediaPlayer::State newState);$/;"	prototype	class:QMediaPlayer	access:public	signature:(QMediaPlayer::State newState)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void stateChanged(QMediaPlayer::State newState);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(QMediaPlayer::State newState)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void stateChanged(QMediaRecorder::State state);$/;"	prototype	class:QMediaRecorder	access:public	signature:(QMediaRecorder::State state)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    void stateChanged(QMediaRecorder::State state);$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(QMediaRecorder::State state)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void stateChanged(QRadioTuner::State state);$/;"	prototype	class:QRadioTuner	access:public	signature:(QRadioTuner::State state)
stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void stateChanged(QRadioTuner::State state);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(QRadioTuner::State state)
stationFound	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void stationFound(int frequency, QString stationId);$/;"	prototype	class:QRadioTuner	access:public	signature:(int frequency, QString stationId)
stationFound	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void stationFound(int frequency, QString stationId);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(int frequency, QString stationId)
stationId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QString stationId() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
stationId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual QString stationId() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
stationIdChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void stationIdChanged(QString stationId);$/;"	prototype	class:QRadioData	access:public	signature:(QString stationId)
stationIdChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    void stationIdChanged(QString stationId);$/;"	prototype	class:QRadioDataControl	access:public	signature:(QString stationId)
stationName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    QString stationName() const;$/;"	prototype	class:QRadioData	access:public	signature:() const
stationName	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    virtual QString stationName() const = 0;$/;"	prototype	class:QRadioDataControl	access:public	signature:() const
stationNameChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    void stationNameChanged(QString stationName);$/;"	prototype	class:QRadioData	access:public	signature:(QString stationName)
stationNameChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    void stationNameChanged(QString stationName);$/;"	prototype	class:QRadioDataControl	access:public	signature:(QString stationName)
status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    QSoundEffect::Status status() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    QSoundEffect::Status status() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
Status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    enum Status {$/;"	enum	class:QCamera	access:public
status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    Status status() const;$/;"	prototype	class:QCamera	access:public	signature:() const
status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    virtual QCamera::Status status() const = 0;$/;"	prototype	class:QCameraControl	access:public	signature:() const
status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    FocusZoneStatus status() const;$/;"	prototype	class:QCameraFocusZone	access:public	signature:() const
Status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    enum Status {$/;"	enum	class:QMediaRecorder	access:public
status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    Status status() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual QMediaRecorder::Status status() const = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:() const
Status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    enum Status$/;"	enum	class:QSoundEffect	access:public
status	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    Status status() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
statusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void statusChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
statusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void statusChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
statusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void statusChanged(QCamera::Status status);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::Status status)
statusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    void statusChanged(QCamera::Status);$/;"	prototype	class:QCameraControl	access:public	signature:(QCamera::Status)
statusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void statusChanged(QMediaRecorder::Status status);$/;"	prototype	class:QMediaRecorder	access:public	signature:(QMediaRecorder::Status status)
statusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    void statusChanged(QMediaRecorder::Status status);$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(QMediaRecorder::Status status)
statusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void statusChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
StereoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^        StereoFrame()$/;"	function	struct:QAudioBuffer::StereoFrame	access:public	signature:()
StereoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^        StereoFrame(T leftSample, T rightSample)$/;"	function	struct:QAudioBuffer::StereoFrame	access:public	signature:(T leftSample, T rightSample)
StereoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    template <typename T> struct StereoFrame {$/;"	struct	class:QAudioBuffer	access:public
StereoFrameDefault	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    template <typename T> struct StereoFrameDefault { enum { Default = 0 }; };$/;"	struct	class:QAudioBuffer	access:public
StereoFrameDefault	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^template <> struct QAudioBuffer::StereoFrameDefault<unsigned char> { enum { Default = 128 }; };$/;"	struct	class:QAudioBuffer
StereoFrameDefault	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^template <> struct QAudioBuffer::StereoFrameDefault<unsigned short> { enum { Default = 32768 }; };$/;"	struct	class:QAudioBuffer
StereoMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum StereoMode { ForceStereo, ForceMono, Auto };$/;"	enum	class:QRadioTuner	access:public
stereoMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    StereoMode stereoMode() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
stereoMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual QRadioTuner::StereoMode stereoMode() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
stereoStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void stereoStatusChanged(bool stereo);$/;"	prototype	class:QRadioTuner	access:public	signature:(bool stereo)
stereoStatusChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void stereoStatusChanged(bool stereo);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(bool stereo)
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void stop();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual void stop(QAbstractVideoSurface *surface) = 0;  \/\/ surface may be null if unexpectedly deleted.$/;"	prototype	class:QGstVideoRenderer	access:public	signature:(QAbstractVideoSurface *surface)
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static gboolean stop(GstBaseSink *sink);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GstBaseSink *sink)
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    void stop();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void stop();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void stop();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static gboolean stop(GstBaseSink *sink);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GstBaseSink *sink)
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void stop();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    virtual void stop();$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    void stop();$/;"	prototype	class:QAudioDecoder	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    virtual void stop() = 0;$/;"	prototype	class:QAudioDecoderControl	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void stop();$/;"	prototype	class:QAudioInput	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void stop();$/;"	prototype	class:QAudioOutput	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void stop() = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void stop() = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void stop();$/;"	prototype	class:QCamera	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void stop();$/;"	prototype	class:QMediaPlayer	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual void stop() = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void stop();$/;"	prototype	class:QMediaRecorder	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void stop();$/;"	prototype	class:QRadioTuner	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual void stop() = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    void stop();$/;"	prototype	class:QSound	access:public	signature:()
stop	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void stop();$/;"	prototype	class:QSoundEffect	access:public	signature:()
stopFlushing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    void stopFlushing();$/;"	prototype	class:QGstreamerVideoProbeControl	access:public	signature:()
StoppedError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^        StoppedError,$/;"	enumerator	enum:QAbstractVideoSurface::Error
StoppedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum State { ActiveState, SuspendedState, StoppedState, IdleState, InterruptedState };$/;"	enumerator	enum:QAudio::State
StoppedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^        StoppedState,$/;"	enumerator	enum:QAudioDecoder::State
StoppedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        StoppedState,$/;"	enumerator	enum:QMediaPlayer::State
StoppedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        StoppedState,$/;"	enumerator	enum:QMediaRecorder::State
StoppedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum State { ActiveState, StoppedState };$/;"	enumerator	enum:QRadioTuner::State
StoppingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        StoppingStatus,$/;"	enumerator	enum:QCamera::Status
stopRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void stopRenderer();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:()
stopRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorendererinterface_p.h	/^    virtual void stopRenderer() {}$/;"	function	class:QGstreamerVideoRendererInterface	access:public	signature:()
stream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    QIODevice *stream() const;$/;"	prototype	class:QGstAppSrc	access:public	signature:() const
streamCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    int streamCount() const { return m_streamProperties.count(); }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
streamCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    virtual int streamCount() = 0;$/;"	prototype	class:QMediaStreamsControl	access:public	signature:()
streamDestroyed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    void streamDestroyed();$/;"	prototype	class:QGstAppSrc	access:private	signature:()
StreamPlayback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        StreamPlayback = 0x02,$/;"	enumerator	enum:QMediaPlayer::Flag
StreamPlayback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^        StreamPlayback = 0x04,$/;"	enumerator	enum:QMediaServiceProviderHint::Feature
streamProperties	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMap<QString,QVariant> streamProperties(int streamNumber) const { return m_streamProperties[streamNumber]; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:(int streamNumber) const
streamReady	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void streamReady();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
streamsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void streamsChanged();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
streamsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    void streamsChanged();$/;"	prototype	class:QMediaStreamsControl	access:public	signature:()
streamType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMediaStreamsControl::StreamType streamType(int streamNumber) { return m_streamTypes.value(streamNumber, QMediaStreamsControl::UnknownStream); }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:(int streamNumber)
StreamType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    enum StreamType { UnknownStream, VideoStream, AudioStream, SubPictureStream, DataStream };$/;"	enum	class:QMediaStreamsControl	access:public
streamType	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    virtual StreamType streamType(int streamNumber) = 0;$/;"	prototype	class:QMediaStreamsControl	access:public	signature:(int streamNumber)
stream_adjust_prebuffer_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_adjust_prebuffer_callback(pa_stream *s, int success, void *userdata);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(pa_stream *s, int success, void *userdata)
stream_cork_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_cork_callback(pa_stream *s, int success, void *userdata);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(pa_stream *s, int success, void *userdata)
stream_flush_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_flush_callback(pa_stream *s, int success, void *userdata);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(pa_stream *s, int success, void *userdata)
stream_flush_reload_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_flush_reload_callback(pa_stream *s, int success, void *userdata);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(pa_stream *s, int success, void *userdata)
stream_state_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_state_callback(pa_stream *s, void *userdata);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(pa_stream *s, void *userdata)
stream_underrun_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_underrun_callback(pa_stream *s, void *userdata);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(pa_stream *s, void *userdata)
stream_write_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_write_callback(pa_stream *s, size_t length, void *userdata);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(pa_stream *s, size_t length, void *userdata)
stream_write_done_callback	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static void stream_write_done_callback(void *p);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(void *p)
Stretch	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^        Stretch            = Qt::IgnoreAspectRatio,$/;"	enumerator	enum:QDeclarativeVideoOutput::FillMode
structureFrameRateRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QPair<qreal, qreal> structureFrameRateRange(const GstStructure *s);$/;"	prototype	namespace:QGstUtils	signature:(const GstStructure *s)
structurePixelAspectRatio	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QSize structurePixelAspectRatio(const GstStructure *s);$/;"	prototype	namespace:QGstUtils	signature:(const GstStructure *s)
structurePixelFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QVideoFrame::PixelFormat structurePixelFormat(const GstStructure *s, int *bpp = 0);$/;"	prototype	namespace:QGstUtils	signature:(const GstStructure *s, int *bpp = 0)
structureResolution	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QSize structureResolution(const GstStructure *s);$/;"	prototype	namespace:QGstUtils	signature:(const GstStructure *s)
Subject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Subject;$/;"	member	namespace:QMediaMetaData
SubjectDistance	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString SubjectDistance;$/;"	member	namespace:QMediaMetaData
SubPictureStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    enum StreamType { UnknownStream, VideoStream, AudioStream, SubPictureStream, DataStream };$/;"	enumerator	enum:QMediaStreamsControl::StreamType
SubTitle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString SubTitle;$/;"	member	namespace:QMediaMetaData
supportedApertures	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    QList<qreal> supportedApertures(bool *continuous = nullptr) const;$/;"	prototype	class:QCameraExposure	access:public	signature:(bool *continuous = nullptr) const
supportedAudioCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^    virtual QStringList supportedAudioCodecs() const = 0;$/;"	prototype	class:QAudioEncoderSettingsControl	access:public	signature:() const
supportedAudioCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QStringList supportedAudioCodecs() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
supportedAudioRoles	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorolecontrol.h	/^    virtual QList<QAudio::Role> supportedAudioRoles() const = 0;$/;"	prototype	class:QAudioRoleControl	access:public	signature:() const
supportedAudioRoles	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QList<QAudio::Role> supportedAudioRoles() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
supportedAudioSampleRates	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QList<int> supportedAudioSampleRates(const QAudioEncoderSettings &settings = QAudioEncoderSettings(),$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QAudioEncoderSettings &settings = QAudioEncoderSettings(), bool *continuous = nullptr) const
supportedBufferFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturebufferformatcontrol.h	/^    virtual QList<QVideoFrame::PixelFormat> supportedBufferFormats() const = 0;$/;"	prototype	class:QCameraCaptureBufferFormatControl	access:public	signature:() const
supportedBufferFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QList<QVideoFrame::PixelFormat> supportedBufferFormats() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
supportedByteOrders	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QList<QAudioFormat::Endian> supportedByteOrders() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
supportedByteOrders	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QList<QAudioFormat::Endian> supportedByteOrders() = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:()
supportedChannelCounts	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QList<int> supportedChannelCounts() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
supportedChannelCounts	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QList<int> supportedChannelCounts() = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:()
supportedCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    QStringList supportedCodecs() const;$/;"	prototype	class:QGstCodecsInfo	access:public	signature:() const
supportedCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QStringList supportedCodecs() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
supportedCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QStringList supportedCodecs() = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:()
supportedContainers	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontainercontrol.h	/^    virtual QStringList supportedContainers() const = 0;$/;"	prototype	class:QMediaContainerControl	access:public	signature:() const
supportedContainers	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QStringList supportedContainers() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
supportedCustomAudioRoles	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcustomaudiorolecontrol.h	/^    virtual QStringList supportedCustomAudioRoles() const = 0;$/;"	prototype	class:QCustomAudioRoleControl	access:public	signature:() const
supportedCustomAudioRoles	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    QStringList supportedCustomAudioRoles() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
supportedFeatures	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QMediaServiceProviderHint::Features supportedFeatures(const QMediaService *service) const;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QMediaService *service) const
SupportedFeatures	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    enum Type { Null, ContentType, Device, SupportedFeatures, CameraPosition };$/;"	enumerator	enum:QMediaServiceProviderHint::Type
supportedFeatures	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QMediaServiceProviderHint::Features supportedFeatures(const QByteArray &service) const = 0;$/;"	prototype	struct:QMediaServiceFeaturesInterface	access:public	signature:(const QByteArray &service) const
supportedFormatsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    void supportedFormatsChanged();$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:()
supportedFrameRates	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QList<qreal> supportedFrameRates(const QVideoEncoderSettings &settings = QVideoEncoderSettings(),$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QVideoEncoderSettings &settings = QVideoEncoderSettings(), bool *continuous = nullptr) const
supportedFrameRates	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    virtual QList<qreal> supportedFrameRates(const QVideoEncoderSettings &settings,$/;"	prototype	class:QVideoEncoderSettingsControl	access:public	signature:(const QVideoEncoderSettings &settings, bool *continuous = nullptr) const
supportedImageCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QStringList supportedImageCodecs() const;$/;"	prototype	class:QCameraImageCapture	access:public	signature:() const
supportedImageCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^    virtual QStringList supportedImageCodecs() const = 0;$/;"	prototype	class:QImageEncoderControl	access:public	signature:() const
supportedIsoSensitivities	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    QList<int> supportedIsoSensitivities(bool *continuous = nullptr) const;$/;"	prototype	class:QCameraExposure	access:public	signature:(bool *continuous = nullptr) const
supportedLocks	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCamera::LockTypes supportedLocks() const;$/;"	prototype	class:QCamera	access:public	signature:() const
supportedLocks	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^    virtual QCamera::LockTypes supportedLocks() const = 0;$/;"	prototype	class:QCameraLocksControl	access:public	signature:() const
supportedMimeTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT QSet<QString> supportedMimeTypes(bool (*isValidFactory)(GstElementFactory *factory));$/;"	prototype	namespace:QGstUtils	signature:(bool (isValidFactory)GstElementFactory *factory))
supportedMimeTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaserviceprovider_p.h	/^    virtual QStringList supportedMimeTypes(const QByteArray &serviceType, int flags = 0) const;$/;"	prototype	class:QMediaServiceProvider	access:public	signature:(const QByteArray &serviceType, int flags = 0) const
supportedMimeTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    static QStringList supportedMimeTypes();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
supportedMimeTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    static QStringList supportedMimeTypes();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
supportedMimeTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    static QStringList supportedMimeTypes(Flags flags = Flags());$/;"	prototype	class:QMediaPlayer	access:public	signature:(Flags flags = Flags())
supportedMimeTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual QStringList supportedMimeTypes() const = 0;$/;"	prototype	struct:QMediaServiceSupportedFormatsInterface	access:public	signature:() const
supportedMimeTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    static QStringList supportedMimeTypes();$/;"	prototype	class:QSoundEffect	access:public	signature:()
supportedParameterRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    virtual QVariantList supportedParameterRange(ExposureParameter parameter, bool *continuous) const = 0;$/;"	prototype	class:QCameraExposureControl	access:public	signature:(ExposureParameter parameter, bool *continuous) const
supportedPixelFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    virtual QList<QVideoFrame::PixelFormat> supportedPixelFormats(QAbstractVideoBuffer::HandleType handleType) const = 0;$/;"	prototype	class:QSGVideoNodeFactoryInterface	access:public	signature:(QAbstractVideoBuffer::HandleType handleType) const
supportedPixelFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QList<QVideoFrame::PixelFormat> supportedPixelFormats($/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:( QAbstractVideoBuffer::HandleType handleType = QAbstractVideoBuffer::NoHandle) const
supportedPixelFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    virtual QList<QVideoFrame::PixelFormat> supportedPixelFormats($/;"	prototype	class:QAbstractVideoSurface	access:public	signature:( QAbstractVideoBuffer::HandleType type = QAbstractVideoBuffer::NoHandle) const
supportedResolutions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    QList<QSize> supportedResolutions(const QImageEncoderSettings &settings = QImageEncoderSettings(),$/;"	prototype	class:QCameraImageCapture	access:public	signature:(const QImageEncoderSettings &settings = QImageEncoderSettings(), bool *continuous = nullptr) const
supportedResolutions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^    virtual QList<QSize> supportedResolutions(const QImageEncoderSettings &settings,$/;"	prototype	class:QImageEncoderControl	access:public	signature:(const QImageEncoderSettings &settings, bool *continuous = nullptr) const
supportedResolutions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QList<QSize> supportedResolutions(const QVideoEncoderSettings &settings = QVideoEncoderSettings(),$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QVideoEncoderSettings &settings = QVideoEncoderSettings(), bool *continuous = nullptr) const
supportedResolutions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    virtual QList<QSize> supportedResolutions(const QVideoEncoderSettings &settings,$/;"	prototype	class:QVideoEncoderSettingsControl	access:public	signature:(const QVideoEncoderSettings &settings, bool *continuous = nullptr) const
supportedSampleRates	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QList<int> supportedSampleRates() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
supportedSampleRates	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^    virtual QList<int> supportedSampleRates(const QAudioEncoderSettings &settings,$/;"	prototype	class:QAudioEncoderSettingsControl	access:public	signature:(const QAudioEncoderSettings &settings, bool *continuous = nullptr) const
supportedSampleRates	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QList<int> supportedSampleRates() = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:()
supportedSampleSizes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QList<int> supportedSampleSizes() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
supportedSampleSizes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QList<int> supportedSampleSizes() = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:()
supportedSampleTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    QList<QAudioFormat::SampleType> supportedSampleTypes() const;$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:() const
supportedSampleTypes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual QList<QAudioFormat::SampleType> supportedSampleTypes() = 0;$/;"	prototype	class:QAbstractAudioDeviceInfo	access:public	signature:()
supportedShutterSpeeds	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    QList<qreal> supportedShutterSpeeds(bool *continuous = nullptr) const;$/;"	prototype	class:QCameraExposure	access:public	signature:(bool *continuous = nullptr) const
supportedVideoCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QStringList supportedVideoCodecs() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
supportedVideoCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    virtual QStringList supportedVideoCodecs() const = 0;$/;"	prototype	class:QVideoEncoderSettingsControl	access:public	signature:() const
supportedViewfinderFrameRateRanges	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QList<FrameRateRange> supportedViewfinderFrameRateRanges($/;"	prototype	class:QCamera	access:public	signature:( const QCameraViewfinderSettings &settings = QCameraViewfinderSettings()) const
supportedViewfinderPixelFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QList<QVideoFrame::PixelFormat> supportedViewfinderPixelFormats($/;"	prototype	class:QCamera	access:public	signature:( const QCameraViewfinderSettings &settings = QCameraViewfinderSettings()) const
supportedViewfinderResolutions	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QList<QSize> supportedViewfinderResolutions($/;"	prototype	class:QCamera	access:public	signature:( const QCameraViewfinderSettings &settings = QCameraViewfinderSettings()) const
supportedViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QList<QCameraViewfinderSettings> supportedViewfinderSettings($/;"	prototype	class:QCamera	access:public	signature:( const QCameraViewfinderSettings &settings = QCameraViewfinderSettings()) const
supportedViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    virtual QList<QCameraViewfinderSettings> supportedViewfinderSettings() const = 0;$/;"	prototype	class:QCameraViewfinderSettingsControl2	access:public	signature:() const
SupportEstimate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^    enum SupportEstimate$/;"	enum	namespace:QMultimedia
supressLockChangedSignal	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    bool supressLockChangedSignal;$/;"	member	class:QCameraPrivate	access:public
surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    QAbstractVideoSurface *surface() const;$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:() const
surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    QAbstractVideoSurface *surface() const;$/;"	prototype	class:QGstreamerVideoWindow	access:public	signature:() const
surface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideorenderercontrol.h	/^    virtual QAbstractVideoSurface *surface() const = 0;$/;"	prototype	class:QVideoRendererControl	access:public	signature:() const
surfaceFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    QVideoSurfaceFormat surfaceFormat() const;$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:() const
surfaceFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    QVideoSurfaceFormat surfaceFormat() const;$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:() const
surfaceFormatChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    void surfaceFormatChanged(const QVideoSurfaceFormat &format);$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:(const QVideoSurfaceFormat &format)
surfaceViewfinder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QVideoSurfaceOutput surfaceViewfinder;$/;"	member	class:QCameraPrivate	access:public
surroundingItemsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    void surroundingItemsChanged();$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:()
suspend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    void suspend();$/;"	prototype	class:QAudioInput	access:public	signature:()
suspend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    void suspend();$/;"	prototype	class:QAudioOutput	access:public	signature:()
suspend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void suspend()  = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:()
suspend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual void suspend() = 0;$/;"	prototype	class:QAbstractAudioOutput	access:public	signature:()
SuspendedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum State { ActiveState, SuspendedState, StoppedState, IdleState, InterruptedState };$/;"	enumerator	enum:QAudio::State
SW	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    enum Band { AM, FM, SW, LW, FM2 };$/;"	enumerator	enum:QRadioTuner::Band
syncControls	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    void syncControls(QMediaPlaylistControl *oldControl, QMediaPlaylistControl *newControl,$/;"	prototype	class:QMediaPlaylistPrivate	access:public	signature:(QMediaPlaylistControl *oldControl, QMediaPlaylistControl *newControl, int *removedStart, int *removedEnd, int *insertedStart, int *insertedEnd)
tags	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    QMap<QByteArray ,QVariant> tags() const { return m_tags; }$/;"	function	class:QGstreamerPlayerSession	access:public	signature:() const
tagsChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void tagsChanged();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
takeBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    virtual GstBuffer *takeBuffer(const QVideoSurfaceFormat &format, GstCaps *caps) = 0;$/;"	prototype	class:QGstBufferPoolInterface	access:public	signature:(const QVideoSurfaceFormat &format, GstCaps *caps)
Talk	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        AlarmTest, Alarm, Talk, ClassicRock, AdultHits,$/;"	enumerator	enum:QRadioData::ProgramType
ThumbnailImage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString ThumbnailImage;$/;"	member	namespace:QMediaMetaData
Title	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Title;$/;"	member	namespace:QMediaMetaData
Top40	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SoftRock, Top40, Soft, Nostalgia, Classical,$/;"	enumerator	enum:QRadioData::ProgramType
TopField	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^        TopField,$/;"	enumerator	enum:QVideoFrame::FieldType
TopToBottom	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        TopToBottom,$/;"	enumerator	enum:QVideoSurfaceFormat::Direction
TorchPower	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^        TorchPower,$/;"	enumerator	enum:QCameraExposureControl::ExposureParameter
TrackCount	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString TrackCount;$/;"	member	namespace:QMediaMetaData
TrackNumber	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString TrackNumber;$/;"	member	namespace:QMediaMetaData
translated	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    QMediaTimeInterval translated(qint64 offset) const;$/;"	prototype	class:QMediaTimeInterval	access:public	signature:(qint64 offset) const
Travel	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        PhoneIn, Travel, Leisure, JazzMusic, CountryMusic,$/;"	enumerator	enum:QRadioData::ProgramType
TwoPassEncoding	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        TwoPassEncoding$/;"	enumerator	enum:QMultimedia::EncodingMode
type	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        char        type[4];$/;"	member	struct:QWaveDecoder::RIFFHeader	access:public
Type	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    enum Type { Null, ContentType, Device, SupportedFeatures, CameraPosition };$/;"	enum	class:QMediaServiceProviderHint	access:public
type	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    Type type() const;$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:() const
UDPSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^        UDPSrc,$/;"	enumerator	enum:QGstreamerPlayerSession::SourceType
UnavailableStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        UnavailableStatus,$/;"	enumerator	enum:QCamera::Status
UnavailableStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        UnavailableStatus,$/;"	enumerator	enum:QMediaRecorder::Status
unbind	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    virtual void unbind(QObject *);$/;"	prototype	class:QMediaObject	access:public	signature:(QObject *)
Undefined	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    enum ProgramType { Undefined = 0, News, CurrentAffairs, Information,$/;"	enumerator	enum:QRadioData::ProgramType
underRun	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void underRun();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
UnderrunError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum Error { NoError, OpenError, IOError, UnderrunError, FatalError };$/;"	enumerator	enum:QAudio::Error
UNKNOWN	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^        UNKNOWN,$/;"	enumerator	enum:QPlaylistFileParser::FileType
Unknown	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum SampleType { Unknown, SignedInt, UnSignedInt, Float };$/;"	enumerator	enum:QAudioFormat::SampleType
UnknownMediaStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        UnknownMediaStatus,$/;"	enumerator	enum:QMediaPlayer::MediaStatus
UnknownRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        UnknownRole,$/;"	enumerator	enum:QAudio::Role
UnknownSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^        UnknownSrc,$/;"	enumerator	enum:QGstreamerPlayerSession::SourceType
UnknownStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    enum StreamType { UnknownStream, VideoStream, AudioStream, SubPictureStream, DataStream };$/;"	enumerator	enum:QMediaStreamsControl::StreamType
unload	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void unload();$/;"	prototype	class:QCamera	access:public	signature:()
UnloadedState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        UnloadedState,$/;"	enumerator	enum:QCamera::State
UnloadedStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        UnloadedStatus,$/;"	enumerator	enum:QCamera::Status
UnloadedStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^        UnloadedStatus,$/;"	enumerator	enum:QMediaRecorder::Status
UnloadingStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        UnloadingStatus,$/;"	enumerator	enum:QCamera::Status
unloadPulseStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void unloadPulseStream();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
unloadSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    void unloadSample(QSample* sample);$/;"	prototype	class:QSampleCache	access:private	signature:(QSample* sample)
unlock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    static gboolean unlock(GstBaseSink *sink);$/;"	prototype	class:QGstVideoRendererSink	access:private	signature:(GstBaseSink *sink)
unlock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    void unlock();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
unlock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    static gboolean unlock(GstBaseSink *sink);$/;"	prototype	class:QVideoSurfaceGstSink	access:private	signature:(GstBaseSink *sink)
unlock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void unlock();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
unlock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void unlock();$/;"	prototype	class:QCamera	access:public	signature:()
unlock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    void unlock(QCamera::LockTypes locks);$/;"	prototype	class:QCamera	access:public	signature:(QCamera::LockTypes locks)
unlock	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^    virtual void unlock(QCamera::LockTypes locks) = 0;$/;"	prototype	class:QCameraLocksControl	access:public	signature:(QCamera::LockTypes locks)
Unlocked	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        Unlocked,$/;"	enumerator	enum:QCamera::LockStatus
unmap	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual void unmap() = 0;$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:()
unmap	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    void unmap();$/;"	prototype	class:QVideoFrame	access:public	signature:()
unsetError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void unsetError() { error = QCamera::NoError; errorString.clear(); }$/;"	function	class:QCameraPrivate	access:public	signature:()
UnSignedInt	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    enum SampleType { Unknown, SignedInt, UnSignedInt, Float };$/;"	enumerator	enum:QAudioFormat::SampleType
UnspecifiedPosition	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        UnspecifiedPosition,$/;"	enumerator	enum:QCamera::Position
UnsupportedFormatError	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^        UnsupportedFormatError,$/;"	enumerator	enum:QAbstractVideoSurface::Error
Unused	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^        Unused,$/;"	enumerator	enum:QCameraFocusZone::FocusZoneStatus
update	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    void update();$/;"	prototype	class:QGstreamerAudioInputSelector	access:private	signature:()
updateAlsaDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    void updateAlsaDevices();$/;"	prototype	class:QGstreamerAudioInputSelector	access:private	signature:()
updateCodecs	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    void updateCodecs(ElementType elementType);$/;"	prototype	class:QGstCodecsInfo	access:private	signature:(ElementType elementType)
updateDuration	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void updateDuration();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
updateGeometry	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual void updateGeometry() = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:()
updateIsActive	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    void updateIsActive();$/;"	prototype	class:QGstreamerVideoOverlay	access:private	signature:()
updateLockStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void updateLockStatus();$/;"	prototype	class:QCameraPrivate	access:public	signature:()
updateMediaStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void updateMediaStatus();$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:()
updateMuted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void updateMuted();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
updateNativeVideoSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    void updateNativeVideoSize();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:private	signature:()
updateOssDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    void updateOssDevices();$/;"	prototype	class:QGstreamerAudioInputSelector	access:private	signature:()
updatePaintNode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual QSGNode *updatePaintNode(QSGNode *oldNode, QQuickItem::UpdatePaintNodeData *data) = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:(QSGNode *oldNode, QQuickItem::UpdatePaintNodeData *data)
updatePulseDevices	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    void updatePulseDevices();$/;"	prototype	class:QGstreamerAudioInputSelector	access:private	signature:()
updateSessionState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    void updateSessionState(QMediaPlayer::State state);$/;"	prototype	class:QGstreamerPlayerControl	access:private	signature:(QMediaPlayer::State state)
updateSupportedFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    void updateSupportedFormats();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:()
updateSupportedFormats	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    void updateSupportedFormats();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:()
updateVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void updateVideoRenderer();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
updateVideoResolutionTag	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void updateVideoResolutionTag();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
updateVolume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void updateVolume();$/;"	prototype	class:QGstreamerPlayerSession	access:private	signature:()
updateWidgetAttributes	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    void updateWidgetAttributes();$/;"	prototype	class:QGstreamerVideoWidgetControl	access:private	signature:()
uploadSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void uploadSample();$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:()
Url	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        Url,$/;"	enumerator	enum:QMediaResource::Property
url	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QUrl url() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
UserHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        UserHandle = 1000$/;"	enumerator	enum:QAbstractVideoBuffer::HandleType
UserParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^        UserParameter = 1000$/;"	enumerator	enum:QCameraViewfinderSettingsControl::ViewfinderParameter
UserRating	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString UserRating;$/;"	member	namespace:QMediaMetaData
UserRequest	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^        UserRequest,$/;"	enumerator	enum:QCamera::LockChangeReason
values	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QMap<int, QVariant> values;$/;"	member	class:QMediaResource	access:private
Varied	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        Sport, Education, Drama, Culture, Science, Varied,$/;"	enumerator	enum:QRadioData::ProgramType
VeryHighQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        VeryHighQuality$/;"	enumerator	enum:QMultimedia::EncodingQuality
VeryLowQuality	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmultimedia.h	/^        VeryLowQuality,$/;"	enumerator	enum:QMultimedia::EncodingQuality
videoAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void videoAvailableChanged(bool videoAvailable);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(bool videoAvailable)
videoAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void videoAvailableChanged(bool videoAvailable);$/;"	prototype	class:QMediaPlayer	access:public	signature:(bool videoAvailable)
videoAvailableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void videoAvailableChanged(bool videoAvailable);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(bool videoAvailable)
VideoBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString VideoBitRate;$/;"	member	namespace:QMediaMetaData
VideoBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        VideoBitRate,$/;"	enumerator	enum:QMediaResource::Property
videoBitRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    int videoBitRate() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
VideoCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString VideoCodec;$/;"	member	namespace:QMediaMetaData
VideoCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^        VideoCodec,$/;"	enumerator	enum:QMediaResource::Property
videoCodec	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    QString videoCodec() const;$/;"	prototype	class:QMediaResource	access:public	signature:() const
videoCodecDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QString videoCodecDescription(const QString &codecName) const;$/;"	prototype	class:QMediaRecorder	access:public	signature:(const QString &codecName) const
videoCodecDescription	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    virtual QString videoCodecDescription(const QString &codec) const = 0;$/;"	prototype	class:QVideoEncoderSettingsControl	access:public	signature:(const QString &codec) const
videoControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    QVideoEncoderSettingsControl *videoControl;$/;"	member	class:QMediaRecorderPrivate	access:public
VideoEncoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstcodecsinfo_p.h	/^    enum ElementType { AudioEncoder, VideoEncoder, Muxer };$/;"	enumerator	enum:QGstCodecsInfo::ElementType
VideoEncodingSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^        VideoEncodingSettings = 3,$/;"	enumerator	enum:QCameraControl::PropertyChangeType
videoFilterCaps	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstutils_p.h	/^    Q_GSTTOOLS_EXPORT GstCaps *videoFilterCaps();$/;"	prototype	namespace:QGstUtils	signature:()
VideoFrameConvertFunc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideoframeconversionhelper_p.h	/^typedef void (QT_FASTCALL *VideoFrameConvertFunc)(const QVideoFrame &frame, uchar *output);$/;"	typedef
videoFrameProbed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediavideoprobecontrol.h	/^    void videoFrameProbed(const QVideoFrame &frame);$/;"	prototype	class:QMediaVideoProbeControl	access:public	signature:(const QVideoFrame &frame)
videoFrameProbed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    void videoFrameProbed(const QVideoFrame &frame);$/;"	prototype	class:QVideoProbe	access:public	signature:(const QVideoFrame &frame)
VideoFrameRate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString VideoFrameRate;$/;"	member	namespace:QMediaMetaData
VideoRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        VideoRole,$/;"	enumerator	enum:QAudio::Role
videoSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    QVideoEncoderSettings videoSettings() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
videoSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    virtual QVideoEncoderSettings videoSettings() const = 0;$/;"	prototype	class:QVideoEncoderSettingsControl	access:public	signature:() const
videoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    GstElement *videoSink();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:()
videoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    GstElement *videoSink() const;$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:() const
videoSink	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorendererinterface_p.h	/^    virtual GstElement *videoSink() = 0;$/;"	prototype	class:QGstreamerVideoRendererInterface	access:public	signature:()
VideoStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    enum StreamType { UnknownStream, VideoStream, AudioStream, SubPictureStream, DataStream };$/;"	enumerator	enum:QMediaStreamsControl::StreamType
videoSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual QAbstractVideoSurface *videoSurface() const = 0;$/;"	prototype	class:QDeclarativeVideoBackend	access:public	signature:() const
VideoSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^        VideoSurface = 0x04$/;"	enumerator	enum:QMediaPlayer::Flag
VideoSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^        VideoSurface = 0x08$/;"	enumerator	enum:QMediaServiceProviderHint::Feature
VideoSurfaceSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^        VideoSurfaceSource$/;"	enumerator	enum:QDeclarativeVideoOutput::SourceType
viewfinder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QObject *viewfinder;$/;"	member	class:QCameraPrivate	access:public
Viewfinder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^        Viewfinder = 4,$/;"	enumerator	enum:QCameraControl::PropertyChangeType
ViewfinderParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    enum ViewfinderParameter {$/;"	enum	class:QCameraViewfinderSettingsControl	access:public
viewfinderParameter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    virtual QVariant viewfinderParameter(ViewfinderParameter parameter) const = 0;$/;"	prototype	class:QCameraViewfinderSettingsControl	access:public	signature:(ViewfinderParameter parameter) const
viewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    QCameraViewfinderSettings viewfinderSettings() const;$/;"	prototype	class:QCamera	access:public	signature:() const
ViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^        ViewfinderSettings = 5$/;"	enumerator	enum:QCameraControl::PropertyChangeType
viewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    virtual QCameraViewfinderSettings viewfinderSettings() const = 0;$/;"	prototype	class:QCameraViewfinderSettingsControl2	access:public	signature:() const
viewfinderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraViewfinderSettingsControl *viewfinderSettingsControl;$/;"	member	class:QCameraPrivate	access:public
viewfinderSettingsControl2	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    QCameraViewfinderSettingsControl2 *viewfinderSettingsControl2;$/;"	member	class:QCameraPrivate	access:public
ViewfinderStarted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        ViewfinderStarted = 1,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
ViewfinderStopped	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^        ViewfinderStopped,$/;"	enumerator	enum:QCameraFeedbackControl::EventType
viewport	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    QRect viewport() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
VoiceCommunicationRole	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^        VoiceCommunicationRole,$/;"	enumerator	enum:QAudio::Role
volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    int volume() const;$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:() const
volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    qreal volume() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    qreal volume() const;$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:() const
volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    qreal volume() const;$/;"	prototype	class:QAudioInput	access:public	signature:() const
volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    qreal volume() const;$/;"	prototype	class:QAudioOutput	access:public	signature:() const
volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual qreal volume() const = 0;$/;"	prototype	class:QAbstractAudioInput	access:public	signature:() const
volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystem.h	/^    virtual qreal volume() const { return 1.0; }$/;"	function	class:QAbstractAudioOutput	access:public	signature:() const
volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    int volume() const;$/;"	prototype	class:QMediaPlayer	access:public	signature:() const
volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    virtual int volume() const = 0;$/;"	prototype	class:QMediaPlayerControl	access:public	signature:() const
volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    qreal volume() const;$/;"	prototype	class:QMediaRecorder	access:public	signature:() const
volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual qreal volume() const = 0;$/;"	prototype	class:QMediaRecorderControl	access:public	signature:() const
volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    int volume() const;$/;"	prototype	class:QRadioTuner	access:public	signature:() const
volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    virtual int volume() const = 0;$/;"	prototype	class:QRadioTunerControl	access:public	signature:() const
volume	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    qreal volume() const;$/;"	prototype	class:QSoundEffect	access:public	signature:() const
volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    void volumeChanged(int volume);$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:(int volume)
volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    void volumeChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    void volumeChanged();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    void volumeChanged(int volume);$/;"	prototype	class:QMediaPlayer	access:public	signature:(int volume)
volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    void volumeChanged(int volume);$/;"	prototype	class:QMediaPlayerControl	access:public	signature:(int volume)
volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    void volumeChanged(qreal volume);$/;"	prototype	class:QMediaRecorder	access:public	signature:(qreal volume)
volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    void volumeChanged(qreal volume);$/;"	prototype	class:QMediaRecorderControl	access:public	signature:(qreal volume)
volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    void volumeChanged(int volume);$/;"	prototype	class:QRadioTuner	access:public	signature:(int volume)
volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    void volumeChanged(int volume);$/;"	prototype	class:QRadioTunerControl	access:public	signature:(int volume)
volumeChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    void volumeChanged();$/;"	prototype	class:QSoundEffect	access:public	signature:()
VolumeScale	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudio.h	/^    enum VolumeScale {$/;"	enum	namespace:QAudio
waitForAsyncEvent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    bool waitForAsyncEvent(QMutexLocker *locker, QWaitCondition *condition, unsigned long time);$/;"	prototype	class:QVideoSurfaceGstDelegate	access:private	signature:(QMutexLocker *locker, QWaitCondition *condition, unsigned long time)
WaitingForDataState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        WaitingForDataState$/;"	enumerator	enum:QWaveDecoder::State
WaitingForFormatState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^        WaitingForFormatState,$/;"	enumerator	enum:QWaveDecoder::State
WAVEHeader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    struct WAVEHeader$/;"	struct	class:QWaveDecoder	access:private
Weather	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^        SeriousClassical, OtherMusic, Weather, Finance,$/;"	enumerator	enum:QRadioData::ProgramType
WhiteBalance	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString WhiteBalance;$/;"	member	namespace:QMediaMetaData
WhiteBalanceAuto	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceAuto = 0,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
WhiteBalanceCloudy	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceCloudy = 3,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
WhiteBalanceFlash	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceFlash = 7,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
WhiteBalanceFluorescent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceFluorescent = 6,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
WhiteBalanceManual	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceManual = 1,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
WhiteBalanceMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    enum WhiteBalanceMode {$/;"	enum	class:QCameraImageProcessing	access:public
whiteBalanceMode	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    WhiteBalanceMode whiteBalanceMode() const;$/;"	prototype	class:QCameraImageProcessing	access:public	signature:() const
WhiteBalancePreset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^        WhiteBalancePreset,$/;"	enumerator	enum:QCameraImageProcessingControl::ProcessingParameter
WhiteBalanceShade	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceShade = 4,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
WhiteBalanceSunlight	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceSunlight = 2,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
WhiteBalanceSunset	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceSunset = 8,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
WhiteBalanceTungsten	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceTungsten = 5,$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
WhiteBalanceVendor	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^        WhiteBalanceVendor = 1000$/;"	enumerator	enum:QCameraImageProcessing::WhiteBalanceMode
width	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    int width() const;$/;"	prototype	class:QVideoFrame	access:public	signature:() const
winId	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    virtual WId winId() const = 0;$/;"	prototype	class:QVideoWindowControl	access:public	signature:() const
writableChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    void writableChanged(bool writable);$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:(bool writable)
writableData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual void *writableData() = 0;$/;"	prototype	class:QAbstractAudioBuffer	access:public	signature:()
writeItem	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual bool writeItem(const QMediaContent &content) = 0;$/;"	prototype	class:QMediaPlaylistWriter	access:public	signature:(const QMediaContent &content)
writeItems	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    bool writeItems(QMediaPlaylistWriter *writer);$/;"	prototype	class:QMediaPlaylistPrivate	access:public	signature:(QMediaPlaylistWriter *writer)
WriteOnly	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        WriteOnly = 0x02,$/;"	enumerator	enum:QAbstractVideoBuffer::MapMode
Writer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Writer;$/;"	member	namespace:QMediaMetaData
writeToStream	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    int writeToStream(const void *data, int size);$/;"	prototype	class:QSoundEffectPrivate	access:private	signature:(const void *data, int size)
XvShmImageHandle	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^        XvShmImageHandle,$/;"	enumerator	enum:QAbstractVideoBuffer::HandleType
YCbCrColorSpace	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    enum YCbCrColorSpace$/;"	enum	class:QVideoSurfaceFormat	access:public
yCbCrColorSpace	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    YCbCrColorSpace yCbCrColorSpace() const;$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:() const
YCbCr_BT601	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        YCbCr_BT601,$/;"	enumerator	enum:QVideoSurfaceFormat::YCbCrColorSpace
YCbCr_BT709	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        YCbCr_BT709,$/;"	enumerator	enum:QVideoSurfaceFormat::YCbCrColorSpace
YCbCr_CustomMatrix	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        YCbCr_CustomMatrix$/;"	enumerator	enum:QVideoSurfaceFormat::YCbCrColorSpace
YCbCr_JPEG	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        YCbCr_JPEG,$/;"	enumerator	enum:QVideoSurfaceFormat::YCbCrColorSpace
YCbCr_Undefined	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        YCbCr_Undefined,$/;"	enumerator	enum:QVideoSurfaceFormat::YCbCrColorSpace
YCbCr_xvYCC601	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        YCbCr_xvYCC601,$/;"	enumerator	enum:QVideoSurfaceFormat::YCbCrColorSpace
YCbCr_xvYCC709	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^        YCbCr_xvYCC709,$/;"	enumerator	enum:QVideoSurfaceFormat::YCbCrColorSpace
Year	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediametadata.h	/^    QString Year;$/;"	member	namespace:QMediaMetaData
zoomTo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    void zoomTo(qreal opticalZoom, qreal digitalZoom);$/;"	prototype	class:QCameraFocus	access:public	signature:(qreal opticalZoom, qreal digitalZoom)
zoomTo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    virtual void zoomTo(qreal optical, qreal digital) = 0;$/;"	prototype	class:QCameraZoomControl	access:public	signature:(qreal optical, qreal digital)
_GstVideoConnector	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^struct Q_GSTTOOLS_EXPORT _GstVideoConnector {$/;"	struct
_GstVideoConnector::element	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  GstElement element;$/;"	member	struct:_GstVideoConnector	access:public
_GstVideoConnector::failedSignalEmited	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  gboolean failedSignalEmited;$/;"	member	struct:_GstVideoConnector	access:public
_GstVideoConnector::latest_buffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  GstBuffer *latest_buffer;$/;"	member	struct:_GstVideoConnector	access:public
_GstVideoConnector::relinked	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  gboolean relinked;$/;"	member	struct:_GstVideoConnector	access:public
_GstVideoConnector::segment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  GstSegment segment;$/;"	member	struct:_GstVideoConnector	access:public
_GstVideoConnector::sinkpad	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  GstPad *sinkpad;$/;"	member	struct:_GstVideoConnector	access:public
_GstVideoConnector::srcpad	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  GstPad *srcpad;$/;"	member	struct:_GstVideoConnector	access:public
_GstVideoConnectorClass	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^struct Q_GSTTOOLS_EXPORT _GstVideoConnectorClass {$/;"	struct
_GstVideoConnectorClass::parent_class	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  GstElementClass parent_class;$/;"	member	struct:_GstVideoConnectorClass	access:public
_GstVideoConnectorClass::resend_new_segment	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\gstvideoconnector_p.h	/^  void (*resend_new_segment) (GstElement * element, gboolean emitFailedSignal);$/;"	member	struct:_GstVideoConnectorClass	access:public
_q_applySettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_applySettings();$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:()
_q_availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    void _q_availabilityChanged();$/;"	prototype	class:QMediaObjectPrivate	access:public	signature:()
_q_availabilityChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_availabilityChanged(QMultimedia::AvailabilityStatus availability);$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:(QMultimedia::AvailabilityStatus availability)
_q_error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void _q_error(int error, const QString &errorString);$/;"	prototype	class:QCameraPrivate	access:public	signature:(int error, const QString &errorString)
_q_error	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_error(int error, const QString &errorString);$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:(int error, const QString &errorString)
_q_invalidateSceneGraph	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void _q_invalidateSceneGraph();$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:()
_q_loadFailed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    void _q_loadFailed(QMediaPlaylist::Error error, const QString &errorString)$/;"	function	class:QMediaPlaylistPrivate	access:public	signature:(QMediaPlaylist::Error error, const QString &errorString)
_q_mediaObjectDeleted	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    void _q_mediaObjectDeleted()$/;"	function	class:QMediaPlaylistPrivate	access:public	signature:()
_q_notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    void _q_notify();$/;"	prototype	class:QMediaObjectPrivate	access:public	signature:()
_q_notify	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_notify();$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:()
_q_preparePropertyChange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void _q_preparePropertyChange(int changeType);$/;"	prototype	class:QCameraPrivate	access:public	signature:(int changeType)
_q_restartCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void _q_restartCamera();$/;"	prototype	class:QCameraPrivate	access:public	signature:()
_q_screenOrientationChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void _q_screenOrientationChanged(int);$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:(int)
_q_serviceDestroyed	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_serviceDestroyed();$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:()
_q_stateChanged	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_stateChanged(QMediaRecorder::State state);$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:(QMediaRecorder::State state)
_q_updateActualLocation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_updateActualLocation(const QUrl &);$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:(const QUrl &)
_q_updateCameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void _q_updateCameraInfo();$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:()
_q_updateGeometry	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void _q_updateGeometry();$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:()
_q_updateLockStatus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void _q_updateLockStatus(QCamera::LockType, QCamera::LockStatus, QCamera::LockChangeReason);$/;"	prototype	class:QCameraPrivate	access:public	signature:(QCamera::LockType, QCamera::LockStatus, QCamera::LockChangeReason)
_q_updateMediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void _q_updateMediaObject();$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:()
_q_updateNativeSize	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    void _q_updateNativeSize();$/;"	prototype	class:QDeclarativeVideoOutput	access:private	signature:()
_q_updateNotifyInterval	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    void _q_updateNotifyInterval(int ms);$/;"	prototype	class:QMediaRecorderPrivate	access:public	signature:(int ms)
_q_updateState	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qcamera_p.h	/^    void _q_updateState(QCamera::State newState);$/;"	prototype	class:QCameraPrivate	access:public	signature:(QCamera::State newState)
__anon1::qIsDefaultAspect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^inline bool qIsDefaultAspect(int o)$/;"	function	namespace:__anon1	signature:(int o)
__anon1::qNormalizedOrientation	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^inline int qNormalizedOrientation(int o)$/;"	function	namespace:__anon1	signature:(int o)
~PrivateSoundSource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    ~PrivateSoundSource() {}$/;"	function	class:PrivateSoundSource	access:public	signature:()
~QAbstractAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiobuffer_p.h	/^    virtual ~QAbstractAudioBuffer() {}$/;"	function	class:QAbstractAudioBuffer	access:public	signature:()
~QAbstractPlanarVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual ~QAbstractPlanarVideoBuffer();$/;"	prototype	class:QAbstractPlanarVideoBuffer	access:public	signature:()
~QAbstractVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideobuffer.h	/^    virtual ~QAbstractVideoBuffer();$/;"	prototype	class:QAbstractVideoBuffer	access:public	signature:()
~QAbstractVideoBufferPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qabstractvideobuffer_p.h	/^    virtual ~QAbstractVideoBufferPrivate()$/;"	function	class:QAbstractVideoBufferPrivate	access:public	signature:()
~QAbstractVideoFilter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    ~QAbstractVideoFilter();$/;"	prototype	class:QAbstractVideoFilter	access:public	signature:()
~QAbstractVideoSurface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideosurface.h	/^    ~QAbstractVideoSurface();$/;"	prototype	class:QAbstractVideoSurface	access:public	signature:()
~QAudioBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiobuffer.h	/^    ~QAudioBuffer();$/;"	prototype	class:QAudioBuffer	access:public	signature:()
~QAudioDecoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecoder.h	/^    ~QAudioDecoder();$/;"	prototype	class:QAudioDecoder	access:public	signature:()
~QAudioDecoderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodecodercontrol.h	/^    ~QAudioDecoderControl();$/;"	prototype	class:QAudioDecoderControl	access:public	signature:()
~QAudioDeviceInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiodeviceinfo.h	/^    ~QAudioDeviceInfo();$/;"	prototype	class:QAudioDeviceInfo	access:public	signature:()
~QAudioEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    ~QAudioEncoderSettings();$/;"	prototype	class:QAudioEncoderSettings	access:public	signature:()
~QAudioEncoderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioencodersettingscontrol.h	/^    virtual ~QAudioEncoderSettingsControl();$/;"	prototype	class:QAudioEncoderSettingsControl	access:public	signature:()
~QAudioFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioformat.h	/^    ~QAudioFormat();$/;"	prototype	class:QAudioFormat	access:public	signature:()
~QAudioInput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinput.h	/^    ~QAudioInput();$/;"	prototype	class:QAudioInput	access:public	signature:()
~QAudioInputSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioinputselectorcontrol.h	/^    virtual ~QAudioInputSelectorControl();$/;"	prototype	class:QAudioInputSelectorControl	access:public	signature:()
~QAudioOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutput.h	/^    ~QAudioOutput();$/;"	prototype	class:QAudioOutput	access:public	signature:()
~QAudioOutputSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiooutputselectorcontrol.h	/^    virtual ~QAudioOutputSelectorControl();$/;"	prototype	class:QAudioOutputSelectorControl	access:public	signature:()
~QAudioProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudioprobe.h	/^    ~QAudioProbe();$/;"	prototype	class:QAudioProbe	access:public	signature:()
~QAudioRecorder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorecorder.h	/^    ~QAudioRecorder();$/;"	prototype	class:QAudioRecorder	access:public	signature:()
~QAudioRoleControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiorolecontrol.h	/^    virtual ~QAudioRoleControl();$/;"	prototype	class:QAudioRoleControl	access:public	signature:()
~QAudioSystemFactoryInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    virtual ~QAudioSystemFactoryInterface();$/;"	prototype	struct:QAudioSystemFactoryInterface	access:public	signature:()
~QAudioSystemPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qaudiosystemplugin.h	/^    ~QAudioSystemPlugin();$/;"	prototype	class:QAudioSystemPlugin	access:public	signature:()
~QAudioSystemPluginExtension	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qaudiosystempluginext_p.h	/^    virtual ~QAudioSystemPluginExtension();$/;"	prototype	struct:QAudioSystemPluginExtension	access:public	signature:()
~QCamera	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamera.h	/^    ~QCamera();$/;"	prototype	class:QCamera	access:public	signature:()
~QCameraCaptureBufferFormatControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturebufferformatcontrol.h	/^    ~QCameraCaptureBufferFormatControl();$/;"	prototype	class:QCameraCaptureBufferFormatControl	access:public	signature:()
~QCameraCaptureDestinationControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracapturedestinationcontrol.h	/^    ~QCameraCaptureDestinationControl();$/;"	prototype	class:QCameraCaptureDestinationControl	access:public	signature:()
~QCameraControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameracontrol.h	/^    ~QCameraControl();$/;"	prototype	class:QCameraControl	access:public	signature:()
~QCameraExposure	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposure.h	/^    virtual ~QCameraExposure();$/;"	prototype	class:QCameraExposure	access:private	signature:()
~QCameraExposureControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraexposurecontrol.h	/^    ~QCameraExposureControl();$/;"	prototype	class:QCameraExposureControl	access:public	signature:()
~QCameraFeedbackControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafeedbackcontrol.h	/^    ~QCameraFeedbackControl();$/;"	prototype	class:QCameraFeedbackControl	access:public	signature:()
~QCameraFlashControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraflashcontrol.h	/^    ~QCameraFlashControl();$/;"	prototype	class:QCameraFlashControl	access:public	signature:()
~QCameraFocus	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    ~QCameraFocus();$/;"	prototype	class:QCameraFocus	access:private	signature:()
~QCameraFocusControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocuscontrol.h	/^    ~QCameraFocusControl();$/;"	prototype	class:QCameraFocusControl	access:public	signature:()
~QCameraFocusZone	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerafocus.h	/^    ~QCameraFocusZone();$/;"	prototype	class:QCameraFocusZone	access:public	signature:()
~QCameraImageCapture	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapture.h	/^    ~QCameraImageCapture();$/;"	prototype	class:QCameraImageCapture	access:public	signature:()
~QCameraImageCaptureControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimagecapturecontrol.h	/^    ~QCameraImageCaptureControl();$/;"	prototype	class:QCameraImageCaptureControl	access:public	signature:()
~QCameraImageProcessing	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessing.h	/^    ~QCameraImageProcessing();$/;"	prototype	class:QCameraImageProcessing	access:private	signature:()
~QCameraImageProcessingControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraimageprocessingcontrol.h	/^    ~QCameraImageProcessingControl();$/;"	prototype	class:QCameraImageProcessingControl	access:public	signature:()
~QCameraInfo	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfo.h	/^    ~QCameraInfo();$/;"	prototype	class:QCameraInfo	access:public	signature:()
~QCameraInfoControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerainfocontrol.h	/^    virtual ~QCameraInfoControl();$/;"	prototype	class:QCameraInfoControl	access:public	signature:()
~QCameraLocksControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameralockscontrol.h	/^    ~QCameraLocksControl();$/;"	prototype	class:QCameraLocksControl	access:public	signature:()
~QCameraViewfinderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettings.h	/^    ~QCameraViewfinderSettings();$/;"	prototype	class:QCameraViewfinderSettings	access:public	signature:()
~QCameraViewfinderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    ~QCameraViewfinderSettingsControl();$/;"	prototype	class:QCameraViewfinderSettingsControl	access:public	signature:()
~QCameraViewfinderSettingsControl2	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcameraviewfindersettingscontrol.h	/^    virtual ~QCameraViewfinderSettingsControl2();$/;"	prototype	class:QCameraViewfinderSettingsControl2	access:public	signature:()
~QCameraZoomControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcamerazoomcontrol.h	/^    ~QCameraZoomControl();$/;"	prototype	class:QCameraZoomControl	access:public	signature:()
~QCustomAudioRoleControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qcustomaudiorolecontrol.h	/^    virtual ~QCustomAudioRoleControl();$/;"	prototype	class:QCustomAudioRoleControl	access:public	signature:()
~QDeclarativeVideoBackend	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_backend_p.h	/^    virtual ~QDeclarativeVideoBackend()$/;"	function	class:QDeclarativeVideoBackend	access:public	signature:()
~QDeclarativeVideoOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qdeclarativevideooutput_p.h	/^    ~QDeclarativeVideoOutput();$/;"	prototype	class:QDeclarativeVideoOutput	access:public	signature:()
~QGstAppSrc	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstappsrc_p.h	/^    ~QGstAppSrc();$/;"	prototype	class:QGstAppSrc	access:public	signature:()
~QGstBufferPoolInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    virtual ~QGstBufferPoolInterface() {}$/;"	function	class:QGstBufferPoolInterface	access:public	signature:()
~QGstBufferPoolPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstbufferpoolinterface_p.h	/^    virtual ~QGstBufferPoolPlugin() {}$/;"	function	class:QGstBufferPoolPlugin	access:public	signature:()
~QGstDefaultVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    ~QGstDefaultVideoRenderer();$/;"	prototype	class:QGstDefaultVideoRenderer	access:public	signature:()
~QGstreamerAudioInputSelector	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioinputselector_p.h	/^    ~QGstreamerAudioInputSelector();$/;"	prototype	class:QGstreamerAudioInputSelector	access:public	signature:()
~QGstreamerAudioProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreameraudioprobecontrol_p.h	/^    virtual ~QGstreamerAudioProbeControl();$/;"	prototype	class:QGstreamerAudioProbeControl	access:public	signature:()
~QGstreamerBufferProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbufferprobe_p.h	/^    virtual ~QGstreamerBufferProbe();$/;"	prototype	class:QGstreamerBufferProbe	access:public	signature:()
~QGstreamerBusHelper	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerbushelper_p.h	/^    ~QGstreamerBusHelper();$/;"	prototype	class:QGstreamerBusHelper	access:public	signature:()
~QGstreamerMessage	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermessage_p.h	/^    ~QGstreamerMessage();$/;"	prototype	class:QGstreamerMessage	access:public	signature:()
~QGstreamerMirTextureRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamermirtexturerenderer_p.h	/^    virtual ~QGstreamerMirTextureRenderer();$/;"	prototype	class:QGstreamerMirTextureRenderer	access:public	signature:()
~QGstreamerPlayerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayercontrol_p.h	/^    ~QGstreamerPlayerControl();$/;"	prototype	class:QGstreamerPlayerControl	access:public	signature:()
~QGstreamerPlayerSession	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamerplayersession_p.h	/^    virtual ~QGstreamerPlayerSession();$/;"	prototype	class:QGstreamerPlayerSession	access:public	signature:()
~QGstreamerVideoInputDeviceControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoinputdevicecontrol_p.h	/^    ~QGstreamerVideoInputDeviceControl();$/;"	prototype	class:QGstreamerVideoInputDeviceControl	access:public	signature:()
~QGstreamerVideoOverlay	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideooverlay_p.h	/^    virtual ~QGstreamerVideoOverlay();$/;"	prototype	class:QGstreamerVideoOverlay	access:public	signature:()
~QGstreamerVideoProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideoprobecontrol_p.h	/^    virtual ~QGstreamerVideoProbeControl();$/;"	prototype	class:QGstreamerVideoProbeControl	access:public	signature:()
~QGstreamerVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorenderer_p.h	/^    virtual ~QGstreamerVideoRenderer();$/;"	prototype	class:QGstreamerVideoRenderer	access:public	signature:()
~QGstreamerVideoRendererInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideorendererinterface_p.h	/^    virtual ~QGstreamerVideoRendererInterface();$/;"	prototype	class:QGstreamerVideoRendererInterface	access:public	signature:()
~QGstreamerVideoWidgetControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowidget_p.h	/^    virtual ~QGstreamerVideoWidgetControl();$/;"	prototype	class:QGstreamerVideoWidgetControl	access:public	signature:()
~QGstreamerVideoWindow	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstreamervideowindow_p.h	/^    ~QGstreamerVideoWindow();$/;"	prototype	class:QGstreamerVideoWindow	access:public	signature:()
~QGstVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideobuffer_p.h	/^    ~QGstVideoBuffer();$/;"	prototype	class:QGstVideoBuffer	access:public	signature:()
~QGstVideoRenderer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual ~QGstVideoRenderer() {}$/;"	function	class:QGstVideoRenderer	access:public	signature:()
~QGstVideoRendererInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual ~QGstVideoRendererInterface() {}$/;"	function	class:QGstVideoRendererInterface	access:public	signature:()
~QGstVideoRendererPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorendererplugin_p.h	/^    virtual ~QGstVideoRendererPlugin() {}$/;"	function	class:QGstVideoRendererPlugin	access:public	signature:()
~QImageEncoderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qimageencodercontrol.h	/^    virtual ~QImageEncoderControl();$/;"	prototype	class:QImageEncoderControl	access:public	signature:()
~QImageEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    ~QImageEncoderSettings();$/;"	prototype	class:QImageEncoderSettings	access:public	signature:()
~QImageVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qimagevideobuffer_p.h	/^    ~QImageVideoBuffer();$/;"	prototype	class:QImageVideoBuffer	access:public	signature:()
~QMediaAudioProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaaudioprobecontrol.h	/^    virtual ~QMediaAudioProbeControl();$/;"	prototype	class:QMediaAudioProbeControl	access:public	signature:()
~QMediaAvailabilityControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaavailabilitycontrol.h	/^    ~QMediaAvailabilityControl();$/;"	prototype	class:QMediaAvailabilityControl	access:public	signature:()
~QMediaBindableInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediabindableinterface.h	/^    virtual ~QMediaBindableInterface();$/;"	prototype	class:QMediaBindableInterface	access:public	signature:()
~QMediaContainerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontainercontrol.h	/^    virtual ~QMediaContainerControl();$/;"	prototype	class:QMediaContainerControl	access:public	signature:()
~QMediaContent	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontent.h	/^    ~QMediaContent();$/;"	prototype	class:QMediaContent	access:public	signature:()
~QMediaControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediacontrol.h	/^    ~QMediaControl();$/;"	prototype	class:QMediaControl	access:public	signature:()
~QMediaControlPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediacontrol_p.h	/^    virtual ~QMediaControlPrivate() {}$/;"	function	class:QMediaControlPrivate	access:public	signature:()
~QMediaGaplessPlaybackControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediagaplessplaybackcontrol.h	/^    virtual ~QMediaGaplessPlaybackControl();$/;"	prototype	class:QMediaGaplessPlaybackControl	access:public	signature:()
~QMediaNetworkAccessControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmedianetworkaccesscontrol.h	/^    virtual ~QMediaNetworkAccessControl();$/;"	prototype	class:QMediaNetworkAccessControl	access:public	signature:()
~QMediaNetworkPlaylistControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    ~QMediaNetworkPlaylistControl() {}$/;"	function	class:QMediaNetworkPlaylistControl	access:public	signature:()
~QMediaNetworkPlaylistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmedianetworkplaylistprovider_p.h	/^    ~QMediaNetworkPlaylistProvider();$/;"	prototype	class:QMediaNetworkPlaylistProvider	access:public	signature:()
~QMediaObject	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaobject.h	/^    ~QMediaObject();$/;"	prototype	class:QMediaObject	access:public	signature:()
~QMediaObjectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaobject_p.h	/^    virtual ~QMediaObjectPrivate() {}$/;"	function	class:QMediaObjectPrivate	access:public	signature:()
~QMediaPlayer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayer.h	/^    ~QMediaPlayer();$/;"	prototype	class:QMediaPlayer	access:public	signature:()
~QMediaPlayerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplayercontrol.h	/^    ~QMediaPlayerControl();$/;"	prototype	class:QMediaPlayerControl	access:public	signature:()
~QMediaPlaylist	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaplaylist.h	/^    virtual ~QMediaPlaylist();$/;"	prototype	class:QMediaPlaylist	access:public	signature:()
~QMediaPlaylistControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistcontrol_p.h	/^    virtual ~QMediaPlaylistControl();$/;"	prototype	class:QMediaPlaylistControl	access:public	signature:()
~QMediaPlaylistIOPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    ~QMediaPlaylistIOPlugin();$/;"	prototype	class:QMediaPlaylistIOPlugin	access:public	signature:()
~QMediaPlaylistNavigator	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistnavigator_p.h	/^    virtual ~QMediaPlaylistNavigator();$/;"	prototype	class:QMediaPlaylistNavigator	access:public	signature:()
~QMediaPlaylistPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylist_p.h	/^    virtual ~QMediaPlaylistPrivate() {}$/;"	function	class:QMediaPlaylistPrivate	access:public	signature:()
~QMediaPlaylistProvider	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual ~QMediaPlaylistProvider();$/;"	prototype	class:QMediaPlaylistProvider	access:public	signature:()
~QMediaPlaylistProviderPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistprovider_p.h	/^    virtual ~QMediaPlaylistProviderPrivate()$/;"	function	class:QMediaPlaylistProviderPrivate	access:public	signature:()
~QMediaPlaylistReader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual ~QMediaPlaylistReader();$/;"	prototype	class:QMediaPlaylistReader	access:public	signature:()
~QMediaPlaylistSourceControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistsourcecontrol_p.h	/^    virtual ~QMediaPlaylistSourceControl();$/;"	prototype	class:QMediaPlaylistSourceControl	access:public	signature:()
~QMediaPlaylistWriter	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaplaylistioplugin_p.h	/^    virtual ~QMediaPlaylistWriter();$/;"	prototype	class:QMediaPlaylistWriter	access:public	signature:()
~QMediaPluginLoader	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediapluginloader_p.h	/^    ~QMediaPluginLoader();$/;"	prototype	class:QMediaPluginLoader	access:public	signature:()
~QMediaRecorder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecorder.h	/^    ~QMediaRecorder();$/;"	prototype	class:QMediaRecorder	access:public	signature:()
~QMediaRecorderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediarecordercontrol.h	/^    virtual ~QMediaRecorderControl();$/;"	prototype	class:QMediaRecorderControl	access:public	signature:()
~QMediaRecorderPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediarecorder_p.h	/^    virtual ~QMediaRecorderPrivate() {}$/;"	function	class:QMediaRecorderPrivate	access:public	signature:()
~QMediaResource	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaresource.h	/^    ~QMediaResource();$/;"	prototype	class:QMediaResource	access:public	signature:()
~QMediaResourcePolicyPlugin	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaresourcepolicyplugin_p.h	/^    ~QMediaResourcePolicyPlugin();$/;"	prototype	class:QMediaResourcePolicyPlugin	access:public	signature:()
~QMediaService	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaservice.h	/^    ~QMediaService();$/;"	prototype	class:QMediaService	access:public	signature:()
~QMediaServiceCameraInfoInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual ~QMediaServiceCameraInfoInterface() {}$/;"	function	struct:QMediaServiceCameraInfoInterface	access:public	signature:()
~QMediaServiceDefaultDeviceInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual ~QMediaServiceDefaultDeviceInterface() {}$/;"	function	struct:QMediaServiceDefaultDeviceInterface	access:public	signature:()
~QMediaServiceFeaturesInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual ~QMediaServiceFeaturesInterface() {}$/;"	function	struct:QMediaServiceFeaturesInterface	access:public	signature:()
~QMediaServicePrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmediaservice_p.h	/^    virtual ~QMediaServicePrivate() {}$/;"	function	class:QMediaServicePrivate	access:public	signature:()
~QMediaServiceProviderFactoryInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual ~QMediaServiceProviderFactoryInterface();$/;"	prototype	struct:QMediaServiceProviderFactoryInterface	access:public	signature:()
~QMediaServiceProviderHint	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    ~QMediaServiceProviderHint();$/;"	prototype	class:QMediaServiceProviderHint	access:public	signature:()
~QMediaServiceSupportedDevicesInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual ~QMediaServiceSupportedDevicesInterface() {}$/;"	function	struct:QMediaServiceSupportedDevicesInterface	access:public	signature:()
~QMediaServiceSupportedFormatsInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaserviceproviderplugin.h	/^    virtual ~QMediaServiceSupportedFormatsInterface() {}$/;"	function	struct:QMediaServiceSupportedFormatsInterface	access:public	signature:()
~QMediaStreamsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediastreamscontrol.h	/^    virtual ~QMediaStreamsControl();$/;"	prototype	class:QMediaStreamsControl	access:public	signature:()
~QMediaTimeRange	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediatimerange.h	/^    ~QMediaTimeRange();$/;"	prototype	class:QMediaTimeRange	access:public	signature:()
~QMediaVideoProbeControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediavideoprobecontrol.h	/^    virtual ~QMediaVideoProbeControl();$/;"	prototype	class:QMediaVideoProbeControl	access:public	signature:()
~QMemoryVideoBuffer	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qmemoryvideobuffer_p.h	/^    ~QMemoryVideoBuffer();$/;"	prototype	class:QMemoryVideoBuffer	access:public	signature:()
~QMetaDataReaderControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatareadercontrol.h	/^    ~QMetaDataReaderControl();$/;"	prototype	class:QMetaDataReaderControl	access:public	signature:()
~QMetaDataWriterControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmetadatawritercontrol.h	/^    ~QMetaDataWriterControl();$/;"	prototype	class:QMetaDataWriterControl	access:public	signature:()
~QPlaylistFileParser	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qplaylistfileparser_p.h	/^    ~QPlaylistFileParser();$/;"	prototype	class:QPlaylistFileParser	access:public	signature:()
~QRadioData	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodata.h	/^    ~QRadioData();$/;"	prototype	class:QRadioData	access:public	signature:()
~QRadioDataControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiodatacontrol.h	/^    ~QRadioDataControl();$/;"	prototype	class:QRadioDataControl	access:public	signature:()
~QRadioTuner	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotuner.h	/^    ~QRadioTuner();$/;"	prototype	class:QRadioTuner	access:public	signature:()
~QRadioTunerControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qradiotunercontrol.h	/^    ~QRadioTunerControl();$/;"	prototype	class:QRadioTunerControl	access:public	signature:()
~QSample	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    ~QSample();$/;"	prototype	class:QSample	access:private	signature:()
~QSampleCache	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsamplecache_p.h	/^    ~QSampleCache();$/;"	prototype	class:QSampleCache	access:public	signature:()
~QSGVideoNodeFactoryInterface	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsgvideonode_p.h	/^    virtual ~QSGVideoNodeFactoryInterface();$/;"	prototype	class:QSGVideoNodeFactoryInterface	access:public	signature:()
~QSound	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsound.h	/^    ~QSound();$/;"	prototype	class:QSound	access:public	signature:()
~QSoundEffect	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qsoundeffect.h	/^    ~QSoundEffect();$/;"	prototype	class:QSoundEffect	access:public	signature:()
~QSoundEffectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_pulse_p.h	/^    ~QSoundEffectPrivate();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
~QSoundEffectPrivate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qsoundeffect_qaudio_p.h	/^    ~QSoundEffectPrivate();$/;"	prototype	class:QSoundEffectPrivate	access:public	signature:()
~QVideoDeviceSelectorControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideodeviceselectorcontrol.h	/^    virtual ~QVideoDeviceSelectorControl();$/;"	prototype	class:QVideoDeviceSelectorControl	access:public	signature:()
~QVideoEncoderSettings	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qmediaencodersettings.h	/^    ~QVideoEncoderSettings();$/;"	prototype	class:QVideoEncoderSettings	access:public	signature:()
~QVideoEncoderSettingsControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoencodersettingscontrol.h	/^    virtual ~QVideoEncoderSettingsControl();$/;"	prototype	class:QVideoEncoderSettingsControl	access:public	signature:()
~QVideoFilterRunnable	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qabstractvideofilter.h	/^    virtual ~QVideoFilterRunnable();$/;"	prototype	class:QVideoFilterRunnable	access:public	signature:()
~QVideoFrame	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoframe.h	/^    ~QVideoFrame();$/;"	prototype	class:QVideoFrame	access:public	signature:()
~QVideoProbe	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideoprobe.h	/^    ~QVideoProbe();$/;"	prototype	class:QVideoProbe	access:public	signature:()
~QVideoRendererControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideorenderercontrol.h	/^    ~QVideoRendererControl();$/;"	prototype	class:QVideoRendererControl	access:public	signature:()
~QVideoSurfaceFormat	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideosurfaceformat.h	/^    ~QVideoSurfaceFormat();$/;"	prototype	class:QVideoSurfaceFormat	access:public	signature:()
~QVideoSurfaceGstDelegate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qgstvideorenderersink_p.h	/^    ~QVideoSurfaceGstDelegate();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
~QVideoSurfaceGstDelegate	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfacegstsink_p.h	/^    ~QVideoSurfaceGstDelegate();$/;"	prototype	class:QVideoSurfaceGstDelegate	access:public	signature:()
~QVideoSurfaceOutput	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qvideosurfaceoutput_p.h	/^    ~QVideoSurfaceOutput();$/;"	prototype	class:QVideoSurfaceOutput	access:public	signature:()
~QVideoWindowControl	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\qvideowindowcontrol.h	/^    ~QVideoWindowControl();$/;"	prototype	class:QVideoWindowControl	access:public	signature:()
~QWaveDecoder	C:\Qt\5.12.3\mingw73_32\include\QtMultimedia\5.12.3\QtMultimedia\private\qwavedecoder_p.h	/^    ~QWaveDecoder();$/;"	prototype	class:QWaveDecoder	access:public	signature:()
